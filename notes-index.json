{
  "notes": [
    {
      "path": "/notes/tutorials/features/tab-management.md",
      "context": "tutorials",
      "metadata": {
        "title": "Tab Management Guide",
        "tags": [
          "demo",
          "tabs",
          "productivity",
          "navigation"
        ],
        "created": "2025-06-13",
        "author": "Wiki Admin",
        "description": "Complete guide to tab management features including drag-and-drop, keyboard shortcuts, and multi-tab workflows",
        "updated": null,
        "category": null,
        "status": null
      },
      "content_preview": "The Notes Wiki includes a powerful tab system that enables efficient multi-document workflows. Open multiple notes simultaneously, reorder tabs with drag-and-drop, and navigate quickly with keyboard s...",
      "searchable_content": "\nTab Management Guide\n\nThe Notes Wiki includes a powerful tab system that enables efficient multi-document workflows. Open multiple notes simultaneously, reorder tabs with drag-and-drop, and navigate quickly with keyboard shortcuts.\n\n\ud83d\udcd1 Tab Basics\n\nOpening Tabs\n\nNew Empty Tab:\n- Click the + button in the tab bar\n- Press <kbd>Ctrl</kbd>+<kbd>T</kbd>\n- Right-click tab bar \u2192 \"New Tab\"\n\nOpen Note in New Tab:\n- <kbd>Ctrl</kbd>+<kbd>Click</kbd> any note link\n- <kbd>Ctrl</kbd>+<kbd>Click</kbd> search results\n- <kbd>Ctrl</kbd>+<kbd>Click</kbd> sidebar items\n- Right-click note \u2192 \"Open in New Tab\"\n\nDuplicate Current Tab:\n- Press <kbd>Ctrl</kbd>+<kbd>D</kbd>\n- Right-click tab \u2192 \"Duplicate\"\n\nTab Navigation\n\nKeyboard Shortcuts:\n- <kbd>Ctrl</kbd>+<kbd>1</kbd>-<kbd>9</kbd> - Jump to tab by number\n- <kbd>Ctrl</kbd>+<kbd>Tab</kbd> - Next tab\n- <kbd>Ctrl</kbd>+<kbd>Shift</kbd>+<kbd>Tab</kbd> - Previous tab\n\nMouse Navigation:\n- Click tab - Switch to tab\n- Middle-click tab - Close tab\n- Scroll on tab bar - Scroll through many tabs\n\nClosing Tabs\n\nSingle Tab:\n- Click the \u00d7 button on tab\n- Press <kbd>Ctrl</kbd>+<kbd>W</kbd>\n- Middle-click the tab\n\nMultiple Tabs:\n- <kbd>Ctrl</kbd>+<kbd>Shift</kbd>+<kbd>W</kbd> - Close all tabs\n- Right-click tab \u2192 \"Close Other Tabs\"\n- Right-click tab \u2192 \"Close Tabs to Right\"\n\n\ud83c\udfaf Drag-and-Drop Features\n\nReordering Tabs\nDrag tabs to reorder them for better organization:\n\n1. Click and hold on a tab\n2. Drag to desired position\n3. Drop to reorder\n\nVisual Feedback:\n- Tab being dragged becomes semi-transparent\n- Drop zone indicators show valid positions\n- Smooth animations provide feedback\n\nAdvanced Drag Operations\n\nDrag to Specific Positions:\n- Beginning - Drag to leftmost position\n- Between tabs - Drop between any two tabs\n- End - Drag to rightmost position\n\nMulti-Tab Dragging (Future Feature):\n- Select multiple tabs with <kbd>Ctrl</kbd>+<kbd>Click</kbd>\n- Drag entire selection to new position\n\n\ud83d\ude80 Tab Workflows\n\nResearch Workflow\nPerfect for gathering information from multiple sources:\n\n\n1. Start with main topic note\n2. Ctrl+Click related links \u2192 Open in background tabs\n3. Ctrl+1-9 to jump between tabs\n4. Drag tabs to group related content\n5. Keep reference tabs pinned\n\n\nExample Research Session:\n\nTab 1: \"JavaScript Basics\" (main topic)\nTab 2: \"Array Methods Reference\" (reference)\nTab 3: \"Async/Await Tutorial\" (related)\nTab 4: \"Code Examples\" (examples)\nTab 5: \"Best Practices\" (guidelines)\n\n\nWriting Workflow\nIdeal for content creation with references:\n\n\n1. Open draft in main tab\n2. Open reference materials in background tabs\n3. Use Ctrl+Tab to cycle between draft and references\n4. Keep style guide pinned\n5. Use duplicate tabs for before/after comparisons\n\n\nStudy Workflow\nOrganize learning materials efficiently:\n\n\n1. Course overview in first tab\n2. Current lesson in second tab  \n3. Practice exercises in third tab\n4. Reference materials in remaining tabs\n5. Reorder tabs by learning sequence\n\n\n\ud83c\udfa8 Tab Appearance & Indicators\n\nTab States\n\nActive Tab:\n- Highlighted background\n- Full opacity\n- Bold title text\n\nInactive Tabs:\n- Dimmed background\n- Reduced opacity\n- Normal title text\n\nLoading Tab:\n- Loading spinner icon\n- \"Loading...\" text\n- Disabled interaction\n\nVisual Indicators\n\nIcons:\n- \ud83d\udcc4 - Regular note\n- \ud83c\udfe0 - Home/Index page\n- \ud83d\udd0d - Search results\n- \u2699\ufe0f - Settings page\n- \ud83d\udccb - Empty/New tab\n\nStatus Indicators:\n- Modified - Dot indicator for unsaved changes\n- Pinned - Pin icon for persistent tabs\n- Shared - Share icon for shared content\n\nTab Titles\nTab titles are intelligently shortened:\n\n- Full title - \"JavaScript Advanced Concepts Tutorial\"\n- Shortened - \"JavaScript Advanced...\"\n- Minimal - \"JavaScript...\"\n- Icon only - When space is very limited\n\n\ud83d\udd27 Tab Management Features\n\nTab Persistence\nTabs are preserved across sessions:\n\n- Automatic saving - Open tabs saved to localStorage\n- Restore on startup - Previous session tabs restored\n- Crash recovery - Tabs recovered after browser crashes\n\nTab Limits\nManage performance with tab limits:\n\n- Default limit - 10 tabs (configurable)\n- Warning threshold - 8 tabs\n- Auto-close - Oldest unused tabs closed when limit reached\n- Exempt tabs - Pinned tabs never auto-closed\n\nTab Groups (Future Feature)\nOrganize tabs into logical groups:\n\n- Color coding - Assign colors to tab groups\n- Group names - Label groups for easy identification\n- Collapse groups - Hide/show entire groups\n- Group operations - Close/duplicate entire groups\n\n\u2699\ufe0f Tab Settings\n\nCustomization Options\nConfigure tab behavior in Settings \u2192 Tabs:\n\nAppearance:\n- Tab width - Minimum and maximum tab width\n- Show icons - Display icons in tabs\n- Show close buttons - Always/on hover/never\n- Animation speed - Tab transition animations\n\nBehavior:\n- Tab limit - Maximum number of open tabs\n- Auto-close - Close unused tabs automatically\n- Middle-click action - Close tab/new tab/custom\n- Scroll behavior - Mouse wheel scrolling in tab bar\n\nKeyboard:\n- Cycle order - Recently used vs. visual order\n- New tab position - End/after current/custom\n- Close tab focus - Previous/next/recent\n\n\ud83d\udca1 Tab Best Practices\n\nEfficient Tab Organization\n\nGroup Related Content:\n\nResearch tabs: Tab 1-3 (drag together)\nReference tabs: Tab 4-6 (keep at end)\nDraft tabs: Tab 7-8 (keep accessible)\n\n\nUse Descriptive Workflows:\n\nWorkflow 1: Learning new technology\n- Overview \u2192 Tutorial \u2192 Examples \u2192 Reference\n\nWorkflow 2: Project planning  \n- Requirements \u2192 Design \u2192 Research \u2192 Notes\n\nWorkflow 3: Content creation\n- Outline \u2192 Draft \u2192 References \u2192 Style guide\n\n\nPerformance Tips\n\nManage Tab Count:\n- Close unused tabs regularly\n- Use bookmarks for long-term references\n- Pin frequently accessed tabs\n- Set reasonable tab limits\n\nOptimize for Your Screen:\n- Larger screens - More tabs visible\n- Smaller screens - Fewer tabs, more scrolling\n- Mobile - Limited tab functionality\n\nKeyboard Efficiency\n\nMaster Tab Shortcuts:\n\nCtrl+T - New tab (most important)\nCtrl+W - Close tab (second most important)\nCtrl+1-9 - Jump to specific tabs\nCtrl+Tab - Cycle through tabs\n\n\nPower User Tips:\n\nCtrl+Shift+T - Reopen closed tab (future)\nCtrl+Shift+N - New private tab (future)\nCtrl+Shift+Tab - Reverse tab cycling\n\n\n\ud83c\udfaf Advanced Tab Techniques\n\nTab Templates\nCreate templates for common workflows:\n\nResearch Template:\n1. Main topic tab\n2. Reference tab  \n3. Notes tab\n4. Examples tab\n\nWriting Template:\n1. Outline tab\n2. Draft tab\n3. Style guide tab\n4. References tab\n\nTab Automation (Future)\nAutomate tab management with rules:\n\n- Auto-pin - Pin tabs matching patterns\n- Auto-close - Close tabs after inactivity\n- Auto-group - Group tabs by domain/topic\n- Auto-restore - Restore specific tab sets\n\nCross-Session Workflows\nMaintain workflows across browser sessions:\n\n1. Save tab sessions - Export current tab set\n2. Name sessions - \"Research Project Alpha\"\n3. Restore sessions - Load saved tab sets\n4. Share sessions - Export for team collaboration\n\n---\n\nTab Management Mastery\n\nEffective tab management transforms your note-taking workflow. Start with basic shortcuts, develop organization patterns, and gradually adopt advanced techniques that match your work style.\n\nRemember: The goal is productivity, not having the most tabs open. Find the balance that works for your workflow and screen size!\n\nQuick Start: Try opening 3-4 related notes in tabs right now and practice using <kbd>Ctrl</kbd>+<kbd>1</kbd>-<kbd>4</kbd> to jump between them. 1. Start with main topic note\n2. Ctrl+Click related links \u2192 Open in background tabs\n3. Ctrl+1-9 to jump between tabs\n4. Drag tabs to group related content\n5. Keep reference tabs pinned Tab 1: \"JavaScript Basics\" (main topic)\nTab 2: \"Array Methods Reference\" (reference)\nTab 3: \"Async/Await Tutorial\" (related)\nTab 4: \"Code Examples\" (examples)\nTab 5: \"Best Practices\" (guidelines) 1. Open draft in main tab\n2. Open reference materials in background tabs\n3. Use Ctrl+Tab to cycle between draft and references\n4. Keep style guide pinned\n5. Use duplicate tabs for before/after comparisons 1. Course overview in first tab\n2. Current lesson in second tab  \n3. Practice exercises in third tab\n4. Reference materials in remaining tabs\n5. Reorder tabs by learning sequence Research tabs: Tab 1-3 (drag together)\nReference tabs: Tab 4-6 (keep at end)\nDraft tabs: Tab 7-8 (keep accessible) Workflow 1: Learning new technology\n- Overview \u2192 Tutorial \u2192 Examples \u2192 Reference\n\nWorkflow 2: Project planning  \n- Requirements \u2192 Design \u2192 Research \u2192 Notes\n\nWorkflow 3: Content creation\n- Outline \u2192 Draft \u2192 References \u2192 Style guide Ctrl+T - New tab (most important)\nCtrl+W - Close tab (second most important)\nCtrl+1-9 - Jump to specific tabs\nCtrl+Tab - Cycle through tabs Ctrl+Shift+T - Reopen closed tab (future)\nCtrl+Shift+N - New private tab (future)\nCtrl+Shift+Tab - Reverse tab cycling",
      "code_blocks_count": 8
    },
    {
      "path": "/notes/tutorials/features/search-guide.md",
      "context": "tutorials",
      "metadata": {
        "title": "Advanced Search Features",
        "tags": [
          "demo",
          "search",
          "operators",
          "filtering"
        ],
        "created": "2025-06-13",
        "author": "Wiki Admin",
        "description": "Complete guide to advanced search features including operators, tag filtering, and search techniques",
        "updated": null,
        "category": null,
        "status": null
      },
      "content_preview": "The Notes Wiki includes a powerful search system that goes far beyond simple text matching. Learn how to use advanced operators, tag filtering, and search techniques to find exactly what you're lookin...",
      "searchable_content": "\nAdvanced Search Features\n\nThe Notes Wiki includes a powerful search system that goes far beyond simple text matching. Learn how to use advanced operators, tag filtering, and search techniques to find exactly what you're looking for.\n\n\ud83d\udd0d Quick Search Access\n\n- Header Search: Click the search icon or search box in the header\n- Keyboard Shortcut: Press <kbd>/</kbd> or <kbd>Ctrl</kbd>+<kbd>K</kbd> to focus search instantly\n- URL Search: Use #/search/your+search+term for direct search links\n\n\ud83c\udfaf Search Operators\n\nExact Phrase Search\nUse quotes for exact phrase matching:\n\n\n\"machine learning algorithms\"\n\"Notes Wiki system\" \n\"CSS counter-based line numbers\"\n\n\nExample Results:\n- \u2705 \"machine learning algorithms for beginners\"\n- \u274c \"machine algorithms for learning\"\n\nExclusion Operator\nUse minus (-) to exclude terms:\n\n\njavascript -angular\npython -django\ntheme -dark\n\n\nExample:\n- javascript -angular finds JavaScript content but excludes Angular-related notes\n- css -framework finds CSS notes excluding framework-specific content\n\nTag Filtering\nUse tag: to search within specific tags:\n\n\ntag:javascript\ntag:tutorial\ntag:personal\ntag:code-blocks\n\n\nMultiple Tags:\n\ntag:javascript tag:tutorial\ntag:css tag:demo\n\n\nAuthor Filtering  \nUse author: to find notes by specific authors:\n\n\nauthor:\"Wiki Admin\"\nauthor:\"John Doe\"\nauthor:System\n\n\nCombining Operators\nCreate powerful queries by combining operators:\n\n\ntag:javascript \"async await\" -promise\nauthor:\"Wiki Admin\" tag:demo -test\n\"code blocks\" tag:tutorial -basic\n\n\n\ud83c\udff7\ufe0f Tag-Based Filtering\n\nTag Filter Interface\n- Click Filter button or press <kbd>Ctrl</kbd>+<kbd>F</kbd>\n- Select multiple tags for filtering\n- Choose between OR/AND logic\n\nTag Logic Options\n\nOR Logic (Default): Shows notes with ANY selected tag\n\nSelected: [javascript] OR [python] OR [tutorial]\nResult: Notes with javascript OR python OR tutorial\n\n\nAND Logic: Shows notes with ALL selected tags  \n\nSelected: [javascript] AND [tutorial] AND [beginner]\nResult: Only notes tagged with all three\n\n\nTag Exclusion\nClick tags with <kbd>Shift</kbd> to exclude them:\n\nInclude: [tutorial] [javascript]\nExclude: [advanced] [framework]\nResult: JavaScript tutorials excluding advanced framework content\n\n\n\ud83c\udfa8 Smart Search Features\n\nAuto-Complete\nSearch suggestions appear as you type:\n- Recent searches - Your previous search terms\n- Popular tags - Frequently used tags\n- Note titles - Matching note titles\n- Authors - Available authors\n\nSearch History\nAccess your recent searches:\n- Click the search dropdown arrow\n- Navigate with <kbd>\u2191</kbd>/<kbd>\u2193</kbd> arrow keys\n- Press <kbd>Enter</kbd> to repeat a search\n\nFuzzy Matching\nSearch is forgiving of typos and variations:\n- javascrpt finds \"JavaScript\" content\n- teh finds \"the\" \n- algoritm finds \"algorithm\"\n\n\ud83d\udcca Search Results\n\nResult Sorting\nResults are ranked by relevance:\n1. Title matches - Highest priority\n2. Tag matches - High priority  \n3. Content matches - Medium priority\n4. Description matches - Lower priority\n\nResult Information\nEach result shows:\n- Title - Note title with highlighting\n- Description - Brief content summary\n- Tags - Associated tags\n- Author - Note author\n- Preview - Content snippet with search terms highlighted\n\nQuick Actions\nFrom search results:\n- Click title - Open note in current tab\n- Ctrl+Click - Open in new tab\n- Click tags - Filter by that tag\n- Click author - Filter by author\n\n\ud83d\ude80 Advanced Search Techniques\n\nContent Type Searches\nFind specific types of content:\n\n\ntag:code-blocks \"function\"\ntag:tutorial \"step by step\"  \ntag:reference \"cheat sheet\"\ntag:personal \"daily\"\n\n\nDate-Based Searches\nSearch metadata includes dates:\n\n\nauthor:System \"2025\"\n\"created: 2025-01\" \n\"updated\" tag:demo\n\n\nTechnical Content Searches\nFind programming content:\n\n\n\"javascript\" tag:demo\n\"code block\" \"line numbers\"\n\"syntax highlighting\" -test\ntag:css \"theme\" \"color\"\n\n\nDocumentation Searches\nFind specific documentation:\n\n\n\"how to\" tag:tutorial\n\"getting started\" -test\n\"configuration\" tag:settings\n\"keyboard shortcuts\" tag:demo\n\n\n\ud83d\udca1 Search Best Practices\n\nEffective Search Strategies\n\n1. Start Broad, Then Narrow\n\nStep 1: javascript\nStep 2: javascript tutorial  \nStep 3: javascript tutorial -advanced\nStep 4: tag:tutorial \"javascript\" \"beginner\"\n\n\n2. Use Multiple Search Methods\n- Try tag filtering first for categorical searches\n- Use text search for specific content\n- Combine both for precise results\n\n3. Leverage Exclusions\n\ntheme -test -debug\ntutorial -\"work in progress\"\njavascript -framework -library\n\n\nCommon Search Patterns\n\nFinding Examples:\n\ntag:demo \"example\"\n\"code example\" tag:tutorial\n\"sample\" -test\n\n\nFinding Documentation:\n\n\"how to\" OR \"guide\" OR \"tutorial\"\ntag:documentation -draft\n\"getting started\" tag:beginner\n\n\nFinding Reference Material:\n\ntag:reference OR tag:cheatsheet\n\"reference\" OR \"cheat sheet\"\n\"commands\" tag:reference\n\n\n\ud83d\udd17 Search URLs & Sharing\n\nDirect Search Links\nShare searches with URL patterns:\n\n\n#/search/javascript+tutorial\n#/search/\"code+blocks\"+tag:demo\n#/search/tag:css+-test\n\n\nBookmarkable Searches\nCreate bookmarks for frequent searches:\n- Weekly Reviews: tag:personal \"weekly\"\n- Code References: tag:reference \"code\"\n- Learning Material: tag:tutorial -completed\n\nSearch in New Tabs\n- <kbd>Ctrl</kbd>+<kbd>Click</kbd> search results to open in new tabs\n- Use <kbd>Ctrl</kbd>+<kbd>T</kbd> then search for research sessions\n\n\ud83c\udfaf Search Examples\n\nReal-World Search Scenarios\n\nScenario 1: Learning JavaScript\n\nSearch: tag:javascript tag:tutorial -advanced\nFilter: Include [beginner], [examples]\nResult: Beginner-friendly JavaScript tutorials with examples\n\n\nScenario 2: Theme Customization\n\nSearch: \"theme\" OR \"css\" tag:demo\nExclude: test, debug\nResult: Theme and CSS demos excluding test files\n\n\nScenario 3: Code Block Features\n\nSearch: \"code block\" OR \"syntax highlighting\" OR \"line numbers\"\nFilter: Include [demo], [features]\nResult: All code block feature documentation\n\n\nScenario 4: Personal Project Notes\n  \nSearch: author:\"Your Name\" tag:personal tag:projects\nFilter: Exclude [archive], [completed]\nResult: Your active personal project notes\n\n\n\ud83d\udd27 Search Configuration\n\nSearch Settings\nCustomize search behavior in Settings \u2192 Search:\n\n- Enable fuzzy matching - Find typos and variations\n- Search delay - Milliseconds before search executes\n- Max results - Limit displayed results\n- Include content - Search inside note content\n- Include code blocks - Search code block content\n\nPerformance Tips\n\nFor Large Wikis:\n- Use tag filtering first to narrow results\n- Prefer specific terms over general ones\n- Use exclusions to eliminate noise\n- Limit searches to relevant sections\n\nFor Quick Finding:\n- Use recent search history\n- Bookmark frequent searches  \n- Learn common tag patterns\n- Use keyboard shortcuts for speed\n\n---\n\nMaster Search with Practice\n\nThe search system becomes more powerful as you learn your content patterns. Experiment with different operators and develop search strategies that match your workflow!\n\nPro Tip: Use <kbd>/</kbd> for instant search access, and don't forget that search results can be opened in multiple tabs with <kbd>Ctrl</kbd>+<kbd>Click</kbd> for research sessions. \"machine learning algorithms\"\n\"Notes Wiki system\" \n\"CSS counter-based line numbers\" javascript -angular\npython -django\ntheme -dark tag:javascript\ntag:tutorial\ntag:personal\ntag:code-blocks tag:javascript tag:tutorial\ntag:css tag:demo author:\"Wiki Admin\"\nauthor:\"John Doe\"\nauthor:System tag:javascript \"async await\" -promise\nauthor:\"Wiki Admin\" tag:demo -test\n\"code blocks\" tag:tutorial -basic Selected: [javascript] OR [python] OR [tutorial]\nResult: Notes with javascript OR python OR tutorial Selected: [javascript] AND [tutorial] AND [beginner]\nResult: Only notes tagged with all three Include: [tutorial] [javascript]\nExclude: [advanced] [framework]\nResult: JavaScript tutorials excluding advanced framework content tag:code-blocks \"function\"\ntag:tutorial \"step by step\"  \ntag:reference \"cheat sheet\"\ntag:personal \"daily\" author:System \"2025\"\n\"created: 2025-01\" \n\"updated\" tag:demo \" ### Documentation Searches\nFind specific documentation: ## \ud83d\udca1 Search Best Practices\n\n### Effective Search Strategies\n\n**1. Start Broad, Then Narrow** **2. Use Multiple Search Methods**\n- Try tag filtering first for categorical searches\n- Use text search for specific content\n- Combine both for precise results\n\n**3. Leverage Exclusions** ### Common Search Patterns\n\n**Finding Examples:** **Finding Documentation:** **Finding Reference Material:** ## \ud83d\udd17 Search URLs & Sharing\n\n### Direct Search Links\nShare searches with URL patterns: ### Bookmarkable Searches\nCreate bookmarks for frequent searches:\n- **Weekly Reviews**: `tag:personal \"weekly\"`\n- **Code References**: `tag:reference \"code\"`\n- **Learning Material**: `tag:tutorial -completed`\n\n### Search in New Tabs\n- <kbd>Ctrl</kbd>+<kbd>Click</kbd> search results to open in new tabs\n- Use <kbd>Ctrl</kbd>+<kbd>T</kbd> then search for research sessions\n\n## \ud83c\udfaf Search Examples\n\n### Real-World Search Scenarios\n\n**Scenario 1: Learning JavaScript** **Scenario 2: Theme Customization** **Scenario 3: Code Block Features** **Scenario 4: Personal Project Notes**",
      "code_blocks_count": 23
    },
    {
      "path": "/notes/tutorials/features/keyboard-shortcuts.md",
      "context": "tutorials",
      "metadata": {
        "title": "Keyboard Shortcuts Guide",
        "tags": [
          "demo",
          "shortcuts",
          "productivity",
          "navigation"
        ],
        "created": "2025-06-13",
        "author": "Wiki Admin",
        "description": "Complete guide to all keyboard shortcuts and productivity features",
        "updated": null,
        "category": null,
        "status": null
      },
      "content_preview": "The Notes Wiki includes a comprehensive set of keyboard shortcuts designed to boost your productivity and make navigation seamless. Press <kbd>?</kbd> at any time to see the shortcuts cheatsheet!\n\n\n\n|...",
      "searchable_content": "\nKeyboard Shortcuts Guide\n\nThe Notes Wiki includes a comprehensive set of keyboard shortcuts designed to boost your productivity and make navigation seamless. Press <kbd>?</kbd> at any time to see the shortcuts cheatsheet!\n\n\ud83c\udfaf Quick Access\n\n| Shortcut | Action | Description |\n|----------|--------|-------------|\n| <kbd>?</kbd> | Show shortcuts cheatsheet | Opens the complete shortcuts overlay |\n| <kbd>Esc</kbd> | Close modals | Closes any open modals, overlays, or dialogs |\n| <kbd>/</kbd> | Quick search | Focus the search input instantly |\n| <kbd>Ctrl</kbd>+<kbd>K</kbd> | Search | Alternative search shortcut (Mac: <kbd>\u2318</kbd>+<kbd>K</kbd>) |\n\n\ud83d\udcd1 Tab Management\n\n| Shortcut | Action | Description |\n|----------|--------|-------------|\n| <kbd>Ctrl</kbd>+<kbd>T</kbd> | New tab | Open a new empty tab |\n| <kbd>Ctrl</kbd>+<kbd>W</kbd> | Close tab | Close the current tab |\n| <kbd>Ctrl</kbd>+<kbd>Shift</kbd>+<kbd>W</kbd> | Close all tabs | Close all open tabs |\n| <kbd>Ctrl</kbd>+<kbd>1</kbd>-<kbd>9</kbd> | Switch to tab | Jump to tab by number (1-9) |\n| <kbd>Ctrl</kbd>+<kbd>Tab</kbd> | Next tab | Switch to the next tab |\n| <kbd>Ctrl</kbd>+<kbd>Shift</kbd>+<kbd>Tab</kbd> | Previous tab | Switch to the previous tab |\n\n\u2699\ufe0f Settings & Configuration\n\n| Shortcut | Action | Description |\n|----------|--------|-------------|\n| <kbd>Ctrl</kbd>+<kbd>,</kbd> | Open settings | Access all application settings |\n| <kbd>Ctrl</kbd>+<kbd>;</kbd> | Toggle theme | Cycle through favorite themes |\n| <kbd>Ctrl</kbd>+<kbd>Shift</kbd>+<kbd>L</kbd> | Toggle line numbers | Show/hide line numbers in code blocks |\n| <kbd>Ctrl</kbd>+<kbd>Shift</kbd>+<kbd>W</kbd> | Toggle word wrap | Enable/disable word wrap in code blocks |\n\n\ud83d\udd0d Search & Filtering\n\n| Shortcut | Action | Description |\n|----------|--------|-------------|\n| <kbd>Ctrl</kbd>+<kbd>F</kbd> | Filter by tags | Open tag filtering interface |\n| <kbd>Ctrl</kbd>+<kbd>Shift</kbd>+<kbd>F</kbd> | Advanced search | Open search with operators guide |\n| <kbd>Ctrl</kbd>+<kbd>E</kbd> | Recent files | Open recent files dropdown |\n\n\ud83e\udded Navigation\n\n| Shortcut | Action | Description |\n|----------|--------|-------------|\n| <kbd>Ctrl</kbd>+<kbd>H</kbd> | Go home | Navigate to the index page |\n| <kbd>Ctrl</kbd>+<kbd>B</kbd> | Toggle sidebar | Show/hide the navigation sidebar |\n| <kbd>Ctrl</kbd>+<kbd>.</kbd> | Focus sidebar | Put keyboard focus on sidebar navigation |\n\n\ud83d\udcdd Content Actions\n\n| Shortcut | Action | Description |\n|----------|--------|-------------|\n| <kbd>Ctrl</kbd>+<kbd>Shift</kbd>+<kbd>S</kbd> | Share note | Copy current note URL to clipboard |\n| <kbd>Ctrl</kbd>+<kbd>R</kbd> | Refresh note | Reload the current note content |\n| <kbd>Ctrl</kbd>+<kbd>D</kbd> | Duplicate tab | Open current note in a new tab |\n\n\u23f1\ufe0f Pomodoro Timer\n\n| Shortcut | Action | Description |\n|----------|--------|-------------|\n| <kbd>Ctrl</kbd>+<kbd>Shift</kbd>+<kbd>P</kbd> | Toggle Pomodoro | Start/stop the Pomodoro timer |\n| <kbd>Ctrl</kbd>+<kbd>Shift</kbd>+<kbd>R</kbd> | Reset timer | Reset the current Pomodoro session |\n\n\ud83c\udfa8 Theme Shortcuts\n\n| Shortcut | Action | Description |\n|----------|--------|-------------|\n| <kbd>Ctrl</kbd>+<kbd>Shift</kbd>+<kbd>1</kbd> | Light theme | Switch to light theme |\n| <kbd>Ctrl</kbd>+<kbd>Shift</kbd>+<kbd>2</kbd> | Dark theme | Switch to dark theme |\n| <kbd>Ctrl</kbd>+<kbd>Shift</kbd>+<kbd>3</kbd> | Auto theme | Enable automatic theme detection |\n\n\ud83d\udca1 Pro Tips\n\nCustomizing Shortcuts\n\nYou can customize keyboard shortcuts in Settings \u2192 Advanced \u2192 Keyboard Shortcuts. Create your own combinations or modify existing ones to match your workflow.\n\nChord Shortcuts\n\nSome advanced shortcuts use \"chord\" combinations - press and release the first key, then press the second:\n\n- <kbd>G</kbd> <kbd>H</kbd> - Go to home page\n- <kbd>G</kbd> <kbd>S</kbd> - Go to settings  \n- <kbd>G</kbd> <kbd>T</kbd> - Go to theme picker\n\nContext-Aware Shortcuts\n\nSome shortcuts behave differently depending on context:\n\n- <kbd>Enter</kbd> in search - Execute search\n- <kbd>Enter</kbd> in tag filter - Apply filter  \n- <kbd>Enter</kbd> on sidebar item - Open note\n\nMouse + Keyboard Combinations\n\nEnhance your workflow with mouse and keyboard combinations:\n\n- <kbd>Ctrl</kbd> + Click link - Open in new tab\n- <kbd>Shift</kbd> + Click tag - Add to current filter\n- <kbd>Alt</kbd> + Click theme - Preview without applying\n\n\ud83d\ude80 Workflow Examples\n\nResearch Workflow\n1. <kbd>Ctrl</kbd>+<kbd>K</kbd> - Search for topic\n2. <kbd>Ctrl</kbd> + Click results - Open multiple notes in tabs\n3. <kbd>Ctrl</kbd>+<kbd>1</kbd>-<kbd>9</kbd> - Switch between tabs\n4. <kbd>Ctrl</kbd>+<kbd>Shift</kbd>+<kbd>S</kbd> - Share interesting findings\n\nWriting Workflow  \n1. <kbd>Ctrl</kbd>+<kbd>T</kbd> - New tab for drafting\n2. <kbd>Ctrl</kbd>+<kbd>E</kbd> - Reference recent files\n3. <kbd>Ctrl</kbd>+<kbd>Shift</kbd>+<kbd>P</kbd> - Start Pomodoro for focused writing\n4. <kbd>?</kbd> - Quick reference for shortcuts\n\nStudy Workflow\n1. <kbd>Ctrl</kbd>+<kbd>F</kbd> - Filter notes by subject tags\n2. <kbd>Ctrl</kbd>+<kbd>Shift</kbd>+<kbd>L</kbd> - Enable line numbers for code\n3. <kbd>Ctrl</kbd>+<kbd>;</kbd> - Switch to comfortable reading theme\n4. <kbd>Ctrl</kbd>+<kbd>Shift</kbd>+<kbd>P</kbd> - Use Pomodoro for study sessions\n\n\ud83d\udd27 Advanced Features\n\nCommand Palette (Future Feature)\nPress <kbd>Ctrl</kbd>+<kbd>Shift</kbd>+<kbd>P</kbd> to access the command palette for fuzzy searching all available actions.\n\nVim Mode (Experimental)\nEnable Vim key bindings in Settings \u2192 Advanced \u2192 Editor Mode for familiar navigation.\n\nCustom Shortcuts\nCreate application-specific shortcuts that trigger custom JavaScript functions for power users.\n\n---\n\nRemember: <kbd>?</kbd> Shows All Shortcuts\n\nThe most important shortcut to remember is <kbd>?</kbd> - it will show you the complete, up-to-date shortcuts cheatsheet whenever you need it!\n\nCustomize these shortcuts in Settings \u2192 Advanced \u2192 Keyboard Shortcuts to match your workflow perfectly.",
      "code_blocks_count": 0
    },
    {
      "path": "/notes/tutorials/features/settings-customization.md",
      "context": "tutorials",
      "metadata": {
        "title": "Settings & Customization Guide",
        "tags": [
          "demo",
          "settings",
          "customization",
          "configuration"
        ],
        "created": "2025-06-13",
        "author": "Wiki Admin",
        "description": "Complete guide to all settings and customization options available in the Notes Wiki",
        "updated": null,
        "category": null,
        "status": null
      },
      "content_preview": "The Notes Wiki offers extensive customization options to tailor the experience to your preferences and workflow. Access all settings via the gear icon (\u2699\ufe0f) in the header or press <kbd>Ctrl</kbd>+<kbd>...",
      "searchable_content": "\nSettings & Customization Guide\n\nThe Notes Wiki offers extensive customization options to tailor the experience to your preferences and workflow. Access all settings via the gear icon (\u2699\ufe0f) in the header or press <kbd>Ctrl</kbd>+<kbd>,</kbd>.\n\n\ud83d\ude80 Quick Settings Access\n\nOpening Settings\n- Header Icon: Click the gear icon \u2699\ufe0f\n- Keyboard: <kbd>Ctrl</kbd>+<kbd>,</kbd> (Cmd+, on Mac)\n- URL: Navigate to #/settings\n- Context Menu: Right-click \u2192 Settings\n\nSettings Navigation\nThe settings panel is organized into logical sections:\n\n1. General - Basic application settings\n2. Appearance - Themes and visual customization\n3. Editor - Code block and editing features\n4. Navigation - Sidebar and link behavior\n5. Reading - Font and content display\n6. Search - Search behavior and features\n7. Pomodoro - Productivity timer settings\n8. Advanced - Power user options\n9. About - Version and system information\n\n\u2699\ufe0f General Settings\n\nApplication Behavior\n\nAuto Theme Detection:\n- Enable: Automatically switch between light/dark themes\n- Time-based: Switch themes based on time of day\n- System-based: Follow system theme preference\n- Manual: Disable automatic theme switching\n\nStartup Behavior:\n- Default page: Choose what loads on startup\n  - Home page\n  - Last viewed note\n  - Blank page\n  - Specific note\n- Restore tabs: Reopen tabs from previous session\n- Remember position: Restore scroll position in notes\n\nAuto-Save Settings:\n- Save frequency: How often to save preferences\n- Sync across devices: Enable cloud sync (future feature)\n- Backup settings: Export/import configuration\n\nPerformance Options\n\nRendering Performance:\n- Lazy loading: Load content as needed\n- Image optimization: Compress images automatically\n- Cache size: Amount of content to cache\n- Preload strategy: Aggressive/conservative/manual\n\nMemory Management:\n- Tab limits: Maximum number of open tabs\n- History size: How much browsing history to keep\n- Cache cleanup: Automatic cache clearing\n\n\ud83c\udfa8 Appearance Settings\n\nTheme Selection\n\nTheme Categories:\n- Light Themes: 15+ bright themes for daytime use\n- Dark Themes: 25+ themes for low-light environments\n- Colorful Themes: Vibrant options like Cyberpunk, Vaporwave\n- Professional Themes: Clean options like GitHub, VSCode\n- Specialty Themes: Unique options like Matrix, Hotdog Stand\n\nTheme Preview:\n- Live preview: Hover over themes to preview instantly\n- Apply on click: Click to apply permanently\n- Favorite themes: Mark preferred themes for quick access\n- Theme history: Recently used themes\n\nVisual Customization\n\nLayout Options:\n- Content width: Narrow/medium/wide/full-width\n- Sidebar width: Adjustable navigation panel width\n- Header style: Compact/normal/spacious\n- Footer display: Show/hide footer information\n\nTypography:\n- Font family: Choose from available font stacks\n- Font size: Base font size (14px-24px)\n- Line height: Text line spacing (1.2-2.0)\n- Letter spacing: Character spacing adjustments\n\nSpacing & Margins:\n- Content padding: Internal content spacing\n- Paragraph spacing: Space between paragraphs\n- List item spacing: Spacing in bulleted/numbered lists\n- Section breaks: Space between major sections\n\n\ud83d\udcdd Editor Settings\n\nCode Block Configuration\n\nLine Numbers:\n- Show by default: Enable line numbers on all code blocks\n- CSS counter mode: Use new CSS counter-based line numbers\n- Number formatting: Style of line number display\n- Background color: Line number background appearance\n\nWord Wrap:\n- Enable by default: Word wrap for long lines\n- Wrap at column: Character count for wrapping\n- Visual indicators: Show wrap points\n- Preserve indentation: Maintain code structure\n\nSyntax Highlighting:\n- Default language: Language for unmarked code blocks\n- Color scheme: Separate from main theme (optional)\n- Highlight style: Subtle/normal/vibrant highlighting\n- Custom languages: Add language definitions\n\nContent Editing\n\nAuto-formatting:\n- Smart quotes: Convert straight quotes to curly\n- Em dashes: Convert double hyphens to em dashes\n- Auto-links: Automatically linkify URLs\n- Table formatting: Auto-format markdown tables\n\nContent Assistance:\n- Auto-complete: Suggest completions for tags, authors\n- Spell check: Enable browser spell checking\n- Grammar hints: Basic grammar assistance\n- Writing suggestions: Style and clarity improvements\n\n\ud83e\udded Navigation Settings\n\nSidebar Configuration\n\nDisplay Options:\n- Default state: Expanded/collapsed/auto\n- Width: Narrow/normal/wide sidebar\n- Icons: Show/hide folder and file icons\n- Badge counts: Show item counts in folders\n\nSorting & Organization:\n- Sort order: Alphabetical/creation date/modification date\n- Folder grouping: Group folders at top/mixed/bottom\n- Category labels: Show category headers\n- Recent files: Number to show in recent list\n\nLink Behavior\n\nInternal Links:\n- Default target: Same tab/new tab/user choice\n- Confirmation: Confirm before navigating away\n- History tracking: Track internal navigation\n- Deep linking: Enable links to specific headings\n\nExternal Links:\n- Open in: Same tab/new tab/popup\n- Security warnings: Warn about external sites\n- Link preview: Show preview on hover\n- Download handling: Auto-download vs. preview\n\n\ud83d\udcd6 Reading Settings\n\nFont Configuration\n\nFont Family Options:\n- System fonts: Use system default fonts\n- Web fonts: Georgia, Times, Arial, Helvetica\n- Monospace: Consolas, Monaco, Courier for code\n- Custom fonts: Upload custom font files\n\nReading Comfort:\n- Font size: 12px-28px base size\n- Line height: 1.2x-2.0x for comfortable reading\n- Character width: Optimal characters per line\n- Paragraph spacing: Visual breathing room\n\nContent Display\n\nImage Handling:\n- Max width: Constrain large images\n- Lazy loading: Load images as needed\n- Zoom on click: Click to enlarge images\n- Caption display: Show/hide image captions\n\nTable Styling:\n- Striped rows: Alternate row colors\n- Hover highlighting: Highlight row on hover\n- Responsive tables: Mobile-friendly table display\n- Sort indicators: Show sortable columns\n\n\ud83d\udd0d Search Settings\n\nSearch Behavior\n\nSearch Execution:\n- Search delay: Milliseconds before search starts\n- Minimum query length: Characters required to search\n- Auto-search: Search while typing vs. on enter\n- Result limit: Maximum results to display\n\nSearch Scope:\n- Include content: Search note content\n- Include titles: Search note titles\n- Include tags: Search within tags\n- Include code: Search code block content\n- Include metadata: Search author, dates, descriptions\n\nAdvanced Search\n\nQuery Processing:\n- Fuzzy matching: Find partial/misspelled terms\n- Stemming: Match word variations (run/running)\n- Stop words: Ignore common words (the, and, or)\n- Case sensitivity: Exact case matching\n\nResult Enhancement:\n- Highlight terms: Emphasize search terms in results\n- Context preview: Show surrounding text\n- Result grouping: Group by category/author/date\n- Related suggestions: Suggest related searches\n\n\ud83c\udf45 Pomodoro Settings\n\nTimer Configuration\n\nSession Durations:\n- Work sessions: 15-60 minutes (default: 25)\n- Short breaks: 3-15 minutes (default: 5)\n- Long breaks: 10-45 minutes (default: 15)\n- Sessions until long break: 2-8 sessions (default: 4)\n\nNotification Options:\n- Audio alerts: Enable/disable sounds\n- Volume level: Notification volume\n- Desktop notifications: Browser notifications\n- Visual indicators: Progress bars, color changes\n\nAutomation Features\n\nAuto-Progression:\n- Auto-start breaks: Begin breaks automatically\n- Auto-start work: Begin work sessions automatically\n- Skip break option: Allow skipping breaks\n- Manual override: Always allow manual control\n\nFocus Enhancements:\n- Distraction blocking: Hide certain features during work\n- Tab title updates: Show timer in browser tab\n- Full-screen mode: Minimize distractions\n- Do not disturb: Disable non-critical notifications\n\n\ud83d\udd27 Advanced Settings\n\nPower User Options\n\nKeyboard Shortcuts:\n- Customize shortcuts: Modify existing key combinations\n- Create new shortcuts: Add custom key bindings\n- Chord combinations: Multi-step key sequences\n- Context-aware: Different shortcuts in different areas\n\nCustom CSS:\n- CSS injection: Add custom styles\n- Theme overrides: Modify existing themes\n- Component styling: Target specific elements\n- Preview mode: Test CSS changes safely\n\nDeveloper Features\n\nDebug Options:\n- Console logging: Enable detailed logging\n- Performance monitoring: Track rendering performance\n- Error reporting: Automatic error reporting\n- Local storage inspection: View saved data\n\nExport/Import:\n- Settings backup: Export all settings\n- Theme export: Share custom themes\n- Content export: Export notes and metadata\n- Bulk operations: Mass import/export tools\n\n\ud83d\udcbe Settings Management\n\nBackup & Restore\n\nAutomatic Backups:\n- Frequency: Daily/weekly/monthly backups\n- Retention: How long to keep backups\n- Cloud sync: Sync settings across devices\n- Version history: Track setting changes\n\nManual Management:\n- Export settings: Download settings file\n- Import settings: Upload settings file\n- Reset to defaults: Restore factory settings\n- Selective reset: Reset specific sections only\n\nProfile Management\n\nMultiple Profiles:\n- Work profile: Professional themes and settings\n- Personal profile: Casual themes and preferences\n- Study profile: Focus-optimized configuration\n- Presentation profile: Large fonts, high contrast\n\nProfile Switching:\n- Quick switch: Dropdown in header\n- Automatic switching: Context-based profiles\n- Scheduled switching: Time-based profile changes\n- Manual override: Always allow manual control\n\n\ud83c\udfaf Recommended Configurations\n\nFor Coding & Technical Work\n\n\nTheme: VSCode Dark Plus / Monokai\nEditor: Line numbers ON, Word wrap OFF\nFont: Monospace, 14px, 1.4 line height\nCode: Default language JavaScript\nSidebar: Expanded, alphabetical sort\n\n\nFor Writing & Documentation\n\n\nTheme: Light / GitHub Light\nReading: Georgia, 16px, 1.6 line height\nEditor: Word wrap ON, spellcheck ON\nContent width: Medium (optimal reading)\nPomodoro: 25min work, 5min break\n\n\nFor Research & Study\n\n\nTheme: Nord / Tokyo Night\nTabs: High limit (15+), auto-restore\nSearch: Include all content types\nRecent files: 30 items, grouped by context\nPomodoro: 30min sessions, auto-progression\n\n\nFor Mobile/Touch Devices\n\n\nTheme: High contrast theme\nFont: Larger base size (18px+)\nSidebar: Auto-collapse on small screens\nTouch: Larger tap targets\nPerformance: Aggressive caching\n\n\n---\n\nGetting Started with Customization\n\n1. Start with themes - Find a comfortable visual style\n2. Adjust reading settings - Optimize for your eyes and screen\n3. Configure your workflow - Set up tabs, recent files, shortcuts\n4. Enable productivity features - Pomodoro timer, focus modes\n5. Fine-tune over time - Adjust settings as you learn your preferences\n\nPro Tip: Use the export feature to backup your perfect configuration, then experiment fearlessly knowing you can always restore your preferred settings!\n\nThe key to effective customization is gradual iteration - make small changes, use them for a while, then adjust based on your actual usage patterns. Theme: VSCode Dark Plus / Monokai\nEditor: Line numbers ON, Word wrap OFF\nFont: Monospace, 14px, 1.4 line height\nCode: Default language JavaScript\nSidebar: Expanded, alphabetical sort Theme: Light / GitHub Light\nReading: Georgia, 16px, 1.6 line height\nEditor: Word wrap ON, spellcheck ON\nContent width: Medium (optimal reading)\nPomodoro: 25min work, 5min break Theme: Nord / Tokyo Night\nTabs: High limit (15+), auto-restore\nSearch: Include all content types\nRecent files: 30 items, grouped by context\nPomodoro: 30min sessions, auto-progression Theme: High contrast theme\nFont: Larger base size (18px+)\nSidebar: Auto-collapse on small screens\nTouch: Larger tap targets\nPerformance: Aggressive caching",
      "code_blocks_count": 4
    },
    {
      "path": "/notes/tutorials/features/pomodoro-timer.md",
      "context": "tutorials",
      "metadata": {
        "title": "Pomodoro Timer Guide",
        "tags": [
          "demo",
          "productivity",
          "pomodoro",
          "focus",
          "timer"
        ],
        "created": "2025-06-13",
        "author": "Wiki Admin",
        "description": "Complete guide to the built-in Pomodoro timer for enhanced focus and productivity",
        "updated": null,
        "category": null,
        "status": null
      },
      "content_preview": "The Notes Wiki includes a built-in Pomodoro timer to help you maintain focus and productivity during note-taking, research, and study sessions. This productivity technique uses timed work intervals wi...",
      "searchable_content": "\nPomodoro Timer Guide\n\nThe Notes Wiki includes a built-in Pomodoro timer to help you maintain focus and productivity during note-taking, research, and study sessions. This productivity technique uses timed work intervals with breaks to optimize concentration.\n\n\ud83c\udf45 Pomodoro Technique Basics\n\nThe Classic Method\n1. Work Session - 25 minutes of focused work\n2. Short Break - 5 minutes of rest\n3. Repeat - Complete 4 work sessions\n4. Long Break - 15-30 minutes after 4 sessions\n\nBenefits\n- Enhanced Focus - Eliminates distractions during work periods\n- Regular Breaks - Prevents mental fatigue\n- Progress Tracking - Measure productivity in completed \"pomodoros\"\n- Time Awareness - Better understanding of task duration\n\n\ud83c\udfaf Timer Access & Controls\n\nAccessing the Timer\n\nEnable Pomodoro Timer:\n1. Open Settings (\u2699\ufe0f or <kbd>Ctrl</kbd>+<kbd>,</kbd>)\n2. Navigate to Pomodoro Timer section\n3. Toggle Enable Pomodoro Timer\n4. Timer appears in header/sidebar\n\nQuick Access:\n- Keyboard: <kbd>Ctrl</kbd>+<kbd>Shift</kbd>+<kbd>P</kbd> (toggle)\n- Header Icon: Click the timer icon \ud83c\udf45\n- Settings: Dedicated Pomodoro section\n\nTimer Controls\n\nBasic Controls:\n- Start \u25b6\ufe0f - Begin current session\n- Pause \u23f8\ufe0f - Pause timer (resume where left off)\n- Stop \u23f9\ufe0f - End current session\n- Reset \ud83d\udd04 - Reset timer to beginning\n\nAdvanced Controls:\n- Skip \u23ed\ufe0f - Skip to next session type\n- Settings \u2699\ufe0f - Quick access to timer settings\n- History \ud83d\udcca - View completed sessions\n\n\u2699\ufe0f Timer Configuration\n\nSession Durations\nCustomize all timer intervals in Settings \u2192 Pomodoro:\n\nWork Sessions:\n- Default: 25 minutes\n- Range: 15-60 minutes\n- Custom: Set any duration\n\nShort Breaks:\n- Default: 5 minutes  \n- Range: 3-15 minutes\n- Automatic: Start automatically or require manual start\n\nLong Breaks:\n- Default: 15 minutes\n- Range: 10-45 minutes\n- Frequency: After every 4 work sessions (customizable)\n\nNotification Settings\n\nAudio Alerts:\n- Session complete - Sound when work/break ends\n- Session start - Sound when new session begins\n- Warning - Alert 1-2 minutes before session ends\n- Volume control - Adjust notification volume\n\nVisual Notifications:\n- Desktop notifications - Browser notifications\n- Title bar - Show timer in page title\n- Progress indicator - Visual progress bar\n- Color changes - Different colors for work/break\n\nBehavior Options\n\nAuto-Progression:\n- Auto-start breaks - Automatically begin break periods\n- Auto-start work - Automatically begin work sessions\n- Manual control - Require manual start for all sessions\n\nIntegration Features:\n- Tab title updates - Show timer in browser tab\n- Distraction blocking - Disable certain features during work\n- Focus mode - Hide non-essential UI elements\n\n\ud83d\ude80 Pomodoro Workflows\n\nStudy Sessions\nPerfect for focused learning and note-taking:\n\n\nWorkflow: \"Deep Learning Session\"\n1. Work (25min): Read and take notes on topic\n2. Break (5min): Step away, stretch, hydrate\n3. Work (25min): Review and organize notes\n4. Break (5min): Light movement, fresh air\n5. Work (25min): Practice or apply concepts\n6. Break (5min): Quick relaxation\n7. Work (25min): Summarize and review\n8. Long Break (15min): Complete mental reset\n\n\nResearch Projects\nOrganize research with timed intervals:\n\n\nWorkflow: \"Research Deep Dive\"\nSession 1: Initial topic exploration\nSession 2: Source gathering and bookmarking\nSession 3: Detailed reading and note-taking\nSession 4: Analysis and synthesis\nLong Break: Process information subconsciously\n\n\nWriting Projects\nStructure writing time for better output:\n\n\nWorkflow: \"Content Creation\"\nSession 1: Outline and structure\nSession 2: First draft writing\nSession 3: Content expansion\nSession 4: Review and initial editing\nLong Break: Mental distance for fresh perspective\n\n\nReview Sessions\nSystematic review of existing notes:\n\n\nWorkflow: \"Weekly Review\"\nSession 1: Collect notes from the week\nSession 2: Categorize and tag content\nSession 3: Identify knowledge gaps\nSession 4: Plan next learning objectives\n\n\n\ud83d\udcca Progress Tracking\n\nSession Statistics\nTrack your productivity patterns:\n\nDaily Stats:\n- Completed sessions - Work sessions finished\n- Total focus time - Actual work time logged\n- Break compliance - Breaks taken vs. skipped\n- Efficiency rate - Planned vs. actual time\n\nWeekly/Monthly Views:\n- Productivity trends - Focus time over periods\n- Best performance days - Peak productivity identification\n- Goal tracking - Progress toward time goals\n- Habit formation - Consistency metrics\n\nPerformance Insights\n\nPattern Recognition:\n- Peak hours - When you're most focused\n- Session success rates - Which durations work best\n- Break importance - Correlation between breaks and performance\n- Distraction analysis - Common interruption patterns\n\n\ud83c\udfa8 Timer Appearance\n\nVisual Design\nThe timer integrates seamlessly with your chosen theme:\n\nWork Session Display:\n- Progress circle - Visual countdown\n- Time remaining - MM:SS format\n- Session type - \"Work Session 1/4\"\n- Theme colors - Matches current theme\n\nBreak Session Display:\n- Different colors - Distinct from work sessions\n- Relaxed styling - Softer visual treatment\n- Break type - \"Short Break\" or \"Long Break\"\n- Next session preview - What comes next\n\nCustomization Options\n\nDisplay Preferences:\n- Timer size - Small/medium/large\n- Position - Header/sidebar/floating\n- Transparency - Opacity when not focused\n- Animations - Smooth transitions and effects\n\nTheme Integration:\n- Auto-theming - Matches current wiki theme\n- Custom colors - Override with personal preferences\n- Dark/light adaptation - Optimized for theme type\n\n\ud83d\udca1 Pomodoro Best Practices\n\nPreparation\nSet yourself up for success:\n\nBefore Starting:\n- Clear objectives - Know what you want to accomplish\n- Gather materials - Have everything you need ready\n- Eliminate distractions - Close unnecessary tabs/apps\n- Hydrate - Have water available\n- Comfortable environment - Good lighting, temperature\n\nDuring Work Sessions\n\nFocus Strategies:\n- Single-tasking - Work on one thing only\n- No switching - Resist urge to multitask\n- Note distractions - Write down interrupting thoughts\n- Stay committed - Complete the full session\n\nEmergency Protocols:\n- True emergencies - Stop timer, handle issue\n- Minor interruptions - Note and return to work\n- Internal distractions - Acknowledge and refocus\n\nDuring Breaks\n\nEffective Break Activities:\n- Physical movement - Stand, stretch, walk\n- Eye rest - Look away from screen\n- Hydration - Drink water\n- Fresh air - Open window or step outside\n- Mental reset - Clear your mind\n\nAvoid During Breaks:\n- Screen time - No social media, videos, emails\n- Heavy tasks - Nothing mentally demanding\n- Overthinking - Don't analyze work progress\n\n\ud83d\udd27 Advanced Features\n\nCustom Session Types\nCreate specialized timer configurations:\n\nReading Sessions:\n- Duration: 30 minutes (longer for deep reading)\n- Breaks: 7 minutes (time to process information)\n- Auto-progression: Manual (control pacing)\n\nCreative Sessions:\n- Duration: 45 minutes (extended creative flow)\n- Breaks: 10 minutes (longer mental reset)\n- Notifications: Minimal (avoid disrupting flow)\n\nReview Sessions:\n- Duration: 20 minutes (shorter for review tasks)\n- Breaks: 3 minutes (quick breaks)\n- Auto-progression: Automatic (maintain momentum)\n\nIntegration with Other Features\n\nSearch Integration:\n- Session notes - Search within timer-tagged content\n- Productivity reports - Search for specific time periods\n- Goal tracking - Search for achievement milestones\n\nTag Integration:\n- Session tagging - Tag work sessions by topic\n- Project association - Link sessions to projects\n- Progress tracking - Track time spent on different subjects\n\n\ud83d\udcf1 Mobile Considerations\n\nResponsive Design\nThe timer works across all devices:\n\nDesktop Features:\n- Full timer controls\n- Detailed statistics\n- Advanced customization\n\nTablet Features:\n- Touch-friendly controls\n- Optimized layouts\n- Essential features\n\nMobile Features:\n- Simplified interface\n- Core timer functionality\n- Battery-efficient operation\n\n---\n\nStart Your First Pomodoro\n\nReady to boost your productivity? Here's how to start:\n\n1. Enable the timer in Settings \u2192 Pomodoro\n2. Set your first goal - What will you accomplish?\n3. Start a 25-minute work session \u25b6\ufe0f\n4. Focus completely on your chosen task\n5. Take your break when the timer ends\n6. Repeat and build the habit!\n\nPro Tip: Start with shorter 15-minute sessions if 25 minutes feels too long. The key is consistency, not duration.\n\nThe Pomodoro technique combined with the Notes Wiki creates a powerful environment for focused learning and productive note-taking! Workflow: \"Deep Learning Session\"\n1. Work (25min): Read and take notes on topic\n2. Break (5min): Step away, stretch, hydrate\n3. Work (25min): Review and organize notes\n4. Break (5min): Light movement, fresh air\n5. Work (25min): Practice or apply concepts\n6. Break (5min): Quick relaxation\n7. Work (25min): Summarize and review\n8. Long Break (15min): Complete mental reset Workflow: \"Research Deep Dive\"\nSession 1: Initial topic exploration\nSession 2: Source gathering and bookmarking\nSession 3: Detailed reading and note-taking\nSession 4: Analysis and synthesis\nLong Break: Process information subconsciously Workflow: \"Content Creation\"\nSession 1: Outline and structure\nSession 2: First draft writing\nSession 3: Content expansion\nSession 4: Review and initial editing\nLong Break: Mental distance for fresh perspective Workflow: \"Weekly Review\"\nSession 1: Collect notes from the week\nSession 2: Categorize and tag content\nSession 3: Identify knowledge gaps\nSession 4: Plan next learning objectives",
      "code_blocks_count": 4
    },
    {
      "path": "/notes/tutorials/features/recent-files-bookmarks.md",
      "context": "tutorials",
      "metadata": {
        "title": "Recent Files & Pinning Guide",
        "tags": [
          "demo",
          "recent-files",
          "pinning",
          "organization",
          "productivity"
        ],
        "created": "2025-06-13",
        "author": "Wiki Admin",
        "description": "Complete guide to the enhanced recent files system with pinning, grouping, and organization features",
        "updated": null,
        "category": null,
        "status": null
      },
      "content_preview": "The Notes Wiki includes an enhanced recent files system that goes beyond simple chronological listing. Pin important files, organize by context, and access your most important content with smart group...",
      "searchable_content": "\nRecent Files & Pinning Guide\n\nThe Notes Wiki includes an enhanced recent files system that goes beyond simple chronological listing. Pin important files, organize by context, and access your most important content with smart grouping and quick actions.\n\n\ud83d\udcc1 Recent Files Overview\n\nAccessing Recent Files\n\nQuick Access:\n- Header Dropdown: Click \"Recent\" in the header\n- Keyboard Shortcut: <kbd>Ctrl</kbd>+<kbd>E</kbd>\n- Settings: Manage in Settings \u2192 Files & History\n- Sidebar: Recent files section (if enabled)\n\nSmart Visibility:\n- Auto-hide when empty: No clutter when no recent files\n- Contextual display: Show relevant files based on current note\n- Search integration: Recent files appear in search suggestions\n\nFile Tracking\nThe system automatically tracks:\n\n- Viewed notes - Any note you open\n- Edited content - Notes you modify (future feature)\n- Search results - Notes opened from search\n- External links - Notes accessed via direct URLs\n- Tab restoration - Notes from restored browser sessions\n\n\ud83d\udccc Pinning System\n\nHow to Pin Files\n\nPin Actions:\n- Hover + Click: Hover over file \u2192 click pin icon \ud83d\udccc\n- Right-click menu: Right-click file \u2192 \"Pin to Recent\"\n- Keyboard: Select file + <kbd>P</kbd> to pin\n- Drag to pin area: Drag files to pinned section\n\nPin States:\n- Unpinned \ud83d\udcc4 - Regular recent file\n- Pinned \ud83d\udccc - Stays at top, never auto-removed\n- Temporarily pinned \u23f0 - Pinned for current session only\n\nPin Management\n\nPinned File Benefits:\n- Always visible - Never removed from recent list\n- Top placement - Appear at top of recent files\n- Quick access - First in keyboard navigation\n- Cross-session - Persist across browser sessions\n- Unlimited - No limit on pinned files\n\nUnpinning:\n- Click pin icon: Click \ud83d\udccc to unpin\n- Right-click menu: \"Unpin from Recent\"\n- Keyboard: Select + <kbd>U</kbd> to unpin\n- Settings: Bulk unpin operations\n\n\ud83d\uddc2\ufe0f Context Grouping\n\nAutomatic Grouping\nRecent files are intelligently grouped by context:\n\nContext Categories:\n- Personal \ud83d\udc64 - Files in /personal/ folder\n- Technical \ud83d\udcbb - Files in /technical/ folder\n- Projects \ud83d\udccb - Files in /projects/ folder\n- Reference \ud83d\udcda - Files in /reference/ folder\n- Tutorials \ud83c\udf93 - Files in /tutorials/ folder\n- Root Files \ud83d\udcc4 - Files in root /notes/ directory\n\nGroup Features\n\nCollapsible Groups:\n- Expand/Collapse: Click group header to toggle\n- Group badges: Show file count in each group\n- Empty groups: Hidden when no files present\n- Default state: Remember expanded/collapsed preference\n\nGroup Actions:\n- Pin entire group: Pin all files in a context\n- Clear group: Remove all files from a context\n- Open group: Open all group files in tabs\n- Sort group: Reorder files within group\n\n\ud83c\udfaf Quick Actions\n\nFile Actions\nEach recent file offers quick actions:\n\nPrimary Actions:\n- Click title - Open in current tab\n- Ctrl+Click - Open in new tab\n- Pin/Unpin \ud83d\udccc - Toggle pinned status\n- Remove \u274c - Remove from recent list\n\nSecondary Actions (Right-click):\n- Copy link - Copy note URL to clipboard\n- Share note - Get shareable link\n- Open in new window - Open in separate browser window\n- Show in sidebar - Reveal in navigation tree\n\nBatch Operations\n\nSelect Multiple Files:\n- Ctrl+Click - Select multiple files\n- Shift+Click - Select range of files\n- Ctrl+A - Select all in current group\n\nBatch Actions:\n- Pin selected - Pin multiple files at once\n- Unpin selected - Unpin multiple files\n- Remove selected - Clear multiple files\n- Open selected - Open multiple files in tabs\n\n\u2699\ufe0f Configuration Options\n\nRecent Files Settings\nCustomize behavior in Settings \u2192 Files & History:\n\nDisplay Options:\n- Max recent files: 10/20/30/50 files to track\n- Show context badges: Display group labels\n- Group by context: Enable/disable grouping\n- Show file descriptions: Include note descriptions\n- Compact view: Smaller file entries\n\nTracking Behavior:\n- Auto-add viewed files: Track opened notes automatically\n- Track search results: Include notes opened from search\n- Track external access: Include direct URL access\n- Session persistence: Remember across browser restarts\n\nGrouping Configuration\n\nContext Settings:\n- Auto-detect contexts: Based on folder structure\n- Custom contexts: Define your own grouping rules\n- Context icons: Customize group icons\n- Group order: Reorder context groups\n- Default expansion: Which groups start expanded\n\nAdvanced Grouping:\n- Tag-based grouping: Group by tags instead of folders\n- Author grouping: Group by note author\n- Date grouping: Group by creation/modification date\n- Project grouping: Group by project metadata\n\n\ud83d\udcca Smart Features\n\nIntelligent Suggestions\n\nContext-Aware Recommendations:\n- Related files: Files related to current note\n- Project continuation: Files from current project\n- Learning path: Sequential tutorial files\n- Research threads: Connected research notes\n\nUsage Pattern Recognition:\n- Frequent pairs: Files often opened together\n- Work sessions: Files used in same time periods\n- Topic clusters: Thematically related content\n- Workflow patterns: Common file sequences\n\nPredictive Access\n\nSmart Ordering:\n- Frequency weighting: More used files appear higher\n- Recency boost: Recently accessed files get priority\n- Context relevance: Files matching current work context\n- Time-based patterns: Files you typically use at this time\n\nPreloading:\n- Likely next files: Preload commonly accessed files\n- Session restoration: Fast restoration of recent files\n- Background loading: Load file metadata in advance\n\n\ud83d\ude80 Workflow Integration\n\nResearch Workflows\n\nAcademic Research:\n\nPinned Files:\n- Research methodology guide\n- Current paper draft\n- Bibliography template\n\nRecent Groups:\n- Reference: Source papers and articles\n- Personal: Research notes and insights\n- Projects: Current research project files\n\n\nTechnical Research:\n\nPinned Files:\n- Technology overview\n- Implementation guide\n- Best practices checklist\n\nRecent Groups:\n- Technical: API docs, tutorials\n- Projects: Implementation notes\n- Reference: Code examples, patterns\n\n\nProject Workflows\n\nSoftware Development:\n\nPinned Files:\n- Project requirements\n- Architecture decisions\n- Development guidelines\n\nRecent Groups:\n- Technical: Implementation notes\n- Reference: API documentation\n- Projects: Feature specifications\n\n\nContent Creation:\n\nPinned Files:\n- Style guide\n- Content calendar\n- Brand guidelines\n\nRecent Groups:\n- Personal: Draft content\n- Reference: Research materials\n- Projects: Content briefs\n\n\nLearning Workflows\n\nCourse Study:\n\nPinned Files:\n- Course syllabus\n- Study schedule\n- Key concepts summary\n\nRecent Groups:\n- Tutorials: Lesson notes\n- Personal: Study reflections\n- Reference: Additional resources\n\n\n\ud83d\udca1 Best Practices\n\nEffective Pinning Strategy\n\nWhat to Pin:\n- Reference materials - Frequently consulted guides\n- Active projects - Current work documents\n- Templates - Reusable document templates\n- Important procedures - Critical process documentation\n\nWhat Not to Pin:\n- Temporary files - One-time reference materials\n- Completed projects - Finished work (unless archived)\n- Experimental notes - Rough drafts and testing\n- Too many files - Keep pinned list manageable\n\nOrganization Tips\n\nGroup Management:\n- Keep groups balanced - Roughly equal numbers in each\n- Use descriptive contexts - Clear, meaningful group names\n- Regular cleanup - Remove old, irrelevant files\n- Pin group champions - One key file per context\n\nAccess Patterns:\n- Pin the essentials - Daily/weekly accessed files\n- Use recents for discovery - Let recent files surface new content\n- Leverage search - Don't rely solely on recent files\n- Combine with bookmarks - Use browser bookmarks for permanent access\n\n\ud83d\udcf1 Mobile Experience\n\nTouch-Friendly Features\n\nMobile Optimizations:\n- Larger touch targets - Easy finger navigation\n- Swipe actions - Swipe to pin/unpin/remove\n- Simplified interface - Essential actions only\n- Responsive grouping - Adapted for small screens\n\nTouch Gestures:\n- Tap - Open file\n- Long press - Show context menu\n- Swipe right - Pin file\n- Swipe left - Remove file\n- Double tap - Open in new tab\n\nPerformance Considerations\n\nMobile Performance:\n- Lazy loading - Load content as needed\n- Reduced animations - Faster interactions\n- Simplified previews - Faster rendering\n- Battery efficiency - Optimized background tasks\n\n\ud83d\udd27 Advanced Features\n\nFuture Enhancements\n\nPlanned Features:\n- File synchronization - Sync recent files across devices\n- Team sharing - Share recent file lists with collaborators\n- AI recommendations - Smart file suggestions based on content\n- Integration APIs - Connect with external tools\n\nPower User Features:\n- Custom sorting algorithms - Define your own file ordering\n- Bulk operations - Advanced batch file management\n- Export/import - Share recent file configurations\n- Automation rules - Auto-pin files based on criteria\n\n---\n\nGetting Started\n\n1. Enable recent files tracking in Settings \u2192 Files & History\n2. Open a few notes to populate your recent list\n3. Pin your most important files using the pin icon \ud83d\udccc\n4. Explore context grouping - see how files organize automatically\n5. Customize the settings to match your workflow\n\nPro Tip: Start by pinning 3-5 essential files you access daily, then let the recent files system surface other content naturally. The combination of pinned essentials and dynamic recents creates an optimal access pattern.\n\nThe recent files system learns from your usage patterns and gets more helpful over time! Pinned Files:\n- Research methodology guide\n- Current paper draft\n- Bibliography template\n\nRecent Groups:\n- Reference: Source papers and articles\n- Personal: Research notes and insights\n- Projects: Current research project files Pinned Files:\n- Technology overview\n- Implementation guide\n- Best practices checklist\n\nRecent Groups:\n- Technical: API docs, tutorials\n- Projects: Implementation notes\n- Reference: Code examples, patterns Pinned Files:\n- Project requirements\n- Architecture decisions\n- Development guidelines\n\nRecent Groups:\n- Technical: Implementation notes\n- Reference: API documentation\n- Projects: Feature specifications Pinned Files:\n- Style guide\n- Content calendar\n- Brand guidelines\n\nRecent Groups:\n- Personal: Draft content\n- Reference: Research materials\n- Projects: Content briefs Pinned Files:\n- Course syllabus\n- Study schedule\n- Key concepts summary\n\nRecent Groups:\n- Tutorials: Lesson notes\n- Personal: Study reflections\n- Reference: Additional resources",
      "code_blocks_count": 5
    },
    {
      "path": "/notes/index.md",
      "context": null,
      "metadata": {
        "title": "Notes Wiki - Home",
        "tags": [
          "home",
          "index",
          "documentation"
        ],
        "created": "2025-01-18",
        "author": "Wiki Team",
        "description": "Your personal knowledge management system - start here!",
        "updated": null,
        "category": null,
        "status": null
      },
      "content_preview": "Your powerful, offline-first personal knowledge management system. Everything you need to organize, search, and access your notes efficiently.\n\n\n\nNew to Notes Wiki? Start here:\n1. [[tutorials/getting-...",
      "searchable_content": "\nWelcome to Notes Wiki \ud83c\udf89\n\nYour powerful, offline-first personal knowledge management system. Everything you need to organize, search, and access your notes efficiently.\n\n\ud83d\ude80 Quick Start\n\nNew to Notes Wiki? Start here:\n1. [[tutorials/getting-started/welcome|Welcome Guide]] - 5-minute introduction\n2. [[tutorials/getting-started/creating-notes|Creating Notes]] - Learn note structure and organization\n3. [[tutorials/features/search-guide|Search Guide]] - Master the powerful search system\n4. [[tutorials/features/keyboard-shortcuts|Keyboard Shortcuts]] - Speed up your workflow\n\n\ud83d\udcda Feature Tutorials\n\n\ud83d\udcdd Core Features\n- [[tutorials/features/tab-management|Tab Management]] - Multi-tab browsing system\n- [[tutorials/features/search-guide|Advanced Search]] - Powerful search with operators\n- [[tutorials/features/themes|Themes Gallery]] - 50+ beautiful themes\n- [[tutorials/features/settings-customization|Settings & Customization]] - Make it yours\n\n\ud83e\udded Navigation & Organization  \n- [[tutorials/features/table-of-contents|Table of Contents]] - Auto-generated navigation\n- [[tutorials/features/wiki-links|Wiki-Style Links]] - Connect your notes\n- [[tutorials/features/bookmarks|Bookmarks]] - Save favorite notes\n- [[tutorials/features/recent-files-bookmarks|Recent Files & Pinning]] - Quick access to files\n- [[tutorials/features/context-filtering|Context Filtering]] - Organize by categories\n\n\ud83d\udcd6 Reading Experience\n- [[tutorials/features/focus-mode|Focus Mode]] - Distraction-free reading\n- [[tutorials/features/reading-progress|Reading Progress]] - Track your position\n- [[tutorials/features/in-note-search|In-Note Search]] - Find text within notes\n\n\ud83d\udcbb Content Creation\n- [[tutorials/features/code-blocks|Code Blocks]] - Syntax highlighting & features\n- [[tutorials/features/markdown-callouts|Markdown Callouts]] - Highlight important info\n- [[tutorials/features/images-media|Images & Media]] - Embed visual content\n\n\ud83d\udee0\ufe0f Productivity Tools\n- [[tutorials/features/pomodoro-timer|Pomodoro Timer]] - Built-in focus timer\n- [[tutorials/features/split-view|Split View]] - Work with multiple notes side-by-side\n- [[tutorials/features/sticky-notes|Sticky Notes]] - Floating mini-notes for quick thoughts\n- [[tutorials/features/keyboard-shortcuts|Keyboard Shortcuts]] - Complete shortcut guide\n\n\ud83d\ude80 Advanced Features\n\n- [[tutorials/advanced/combined-code-blocks|Combined Code Blocks]] - Auto-aggregate code from notes\n\n\ud83c\udfaf Common Workflows\n\n\ud83d\udcda Knowledge Management\n1. Create structured notes with frontmatter\n2. Organize with folders and tags\n3. Link related notes with wiki-links\n4. Search and filter as needed\n\n\ud83d\udc68\u200d\ud83d\udcbb Technical Documentation\n1. Use code blocks with syntax highlighting\n2. Create tutorials with combined code blocks\n3. Add callouts for important information\n4. Organize by project or technology\n\n\ud83d\udcdd Personal Notes\n1. Create daily journal entries\n2. Tag for easy retrieval\n3. Use bookmarks for frequent access\n4. Track reading progress on long notes\n\n\ud83d\udd27 Technical Information\n\nSystem Requirements\n- \u2705 Any modern web browser\n- \u2705 No installation required\n- \u2705 Works offline after first load\n- \u2705 No server dependencies\n\nBrowser Compatibility\n- Chrome 57+\n- Firefox 52+\n- Safari 10.1+\n- Edge 16+\n\nKey Technologies\n- Vanilla JavaScript (no framework dependencies)\n- Markdown rendering with marked.js\n- Syntax highlighting with Prism.js\n- Pure CSS themes\n\n\ud83d\udcca Feature Overview\n\n| Category | Features |\n|----------|----------|\n| Navigation | Tabs, Search, TOC, Wiki Links, Bookmarks |\n| Editing | Markdown, Code Blocks, Callouts, Frontmatter |\n| Customization | 50+ Themes, Settings, Keyboard Shortcuts |\n| Productivity | Focus Mode, Timer, Recent Files, Progress Tracking |\n| Organization | Tags, Contexts, Folders, Search Operators |\n\n\ud83c\udd98 Need Help?\n\n- Keyboard Help: Press ? anytime to see all shortcuts\n- Search Tips: Use \"quotes\" for exact phrases\n- Navigation: Ctrl+K for quick search\n- Settings: Ctrl+, to customize\n\n\ud83c\udf89 Tips for Success\n\n1. Start Simple: Create a few notes to get familiar\n2. Use Tags: They make finding notes much easier\n3. Link Notes: Build connections with wiki-links\n4. Customize: Find a theme and settings you love\n5. Keyboard Shortcuts: Learn a few to speed up\n\n---\n\nReady to start? Create your first note or explore the tutorials above. Welcome to your new knowledge management system!",
      "code_blocks_count": 0
    },
    {
      "path": "/notes/tutorials/getting-started/welcome.md",
      "context": "tutorials",
      "metadata": {
        "title": "Welcome to Notes Wiki",
        "tags": [
          "tutorial",
          "getting-started"
        ],
        "created": "2025-01-18",
        "author": "Wiki Team",
        "description": "Your comprehensive guide to getting started with Notes Wiki",
        "updated": null,
        "category": null,
        "status": null
      },
      "content_preview": "Welcome to your personal knowledge management system! This guide will help you get started with Notes Wiki in just a few minutes.\n\n\n\n\n\n1. Navigate Notes: Click on any note in the sidebar to open it\n2....",
      "searchable_content": "\nWelcome to Notes Wiki\n\nWelcome to your personal knowledge management system! This guide will help you get started with Notes Wiki in just a few minutes.\n\n\ud83d\ude80 Quick Start\n\nFirst Steps\n\n1. Navigate Notes: Click on any note in the sidebar to open it\n2. Search Everything: Press Ctrl+K or / to search across all notes\n3. Open Multiple Tabs: Middle-click or Ctrl+click notes to open in new tabs\n4. Switch Themes: Press Ctrl+, to open settings and choose from 50+ themes\n\nEssential Features at a Glance\n\n- \ud83d\udcd1 Multi-tab browsing - Work with multiple notes simultaneously\n- \ud83d\udd0d Powerful search - Find anything instantly with advanced operators\n- \ud83c\udfa8 50+ themes - Customize your reading experience\n- \ud83d\udcf1 Fully responsive - Works on desktop, tablet, and mobile\n- \ud83d\udd12 Privacy-first - Everything runs locally in your browser\n\n\ud83d\udcc2 Understanding the Interface\n\nSidebar Navigation\n- Contexts: Top-level folders that organize your notes (Personal, Technical, etc.)\n- File Tree: Expandable folders showing your note structure\n- Recent Files: Quick access to recently viewed notes\n- Filter by Tags: Click tags to filter the file tree\n\nMain Content Area\n- Tabs: Each open note appears as a tab (drag to reorder)\n- Note Content: The main reading area with full markdown support\n- Table of Contents: Auto-generated outline for easy navigation\n- Reading Progress: Track your position in longer notes\n\nHeader Actions\n- Search (Ctrl+K): Global search across all notes\n- Context Filter: Switch between note categories\n- Settings (Ctrl+,): Customize your experience\n\n\ud83c\udfaf Core Concepts\n\nNotes Are Markdown Files\nAll notes are written in Markdown with YAML frontmatter:\n\nyaml\n---\ntitle: My Note Title\ntags: [tag1, tag2]\nauthor: Your Name\ncreated: 2025-01-18\n---\n\nNote content starts here\n\n\nEverything Is Searchable\nThe search indexes:\n- Note titles and content\n- Code blocks\n- Tags and metadata\n- File paths\n\nOffline-First Design\nOnce loaded, Notes Wiki works completely offline. Your notes are stored as simple markdown files that you can edit with any text editor.\n\n\ud83d\ude80 Next Steps\n\nExplore these tutorials to master Notes Wiki:\n\n1. [[../features/search-guide|Master the Search]] - Learn advanced search techniques\n2. [[../features/tab-management|Tab Management]] - Work efficiently with multiple notes\n3. [[../features/keyboard-shortcuts|Keyboard Shortcuts]] - Speed up your workflow\n4. [[../features/themes|Themes Gallery]] - Customize your appearance\n\n\ud83d\udca1 Pro Tips\n\n- Press ? anytime to see all keyboard shortcuts\n- Press F to enter focus mode for distraction-free reading\n- Use Ctrl+F to search within the current note\n- Drag and drop tabs to reorder them\n- Right-click tabs for more options\n\n\ud83c\udd98 Getting Help\n\n- Keyboard Shortcuts: Press ? to see all available shortcuts\n- This Tutorial: Return here anytime by clicking \"Welcome\" in the tutorials\n- Report Issues: Found a bug? Report it on our GitHub page\n\n---\n\nReady to dive in? Start by exploring the features tutorials or just begin taking notes. Welcome to your new knowledge management system! \ud83c\udf89 ---\ntitle: My Note Title\ntags: [tag1, tag2]\nauthor: Your Name\ncreated: 2025-01-18\n---\n\n# Note content starts here",
      "code_blocks_count": 1
    },
    {
      "path": "/notes/tutorials/getting-started/creating-notes.md",
      "context": "tutorials",
      "metadata": {
        "title": "Creating and Organizing Notes",
        "tags": [
          "tutorial",
          "getting-started",
          "markdown",
          "frontmatter"
        ],
        "created": "2025-01-18",
        "author": "Wiki Team",
        "description": "Learn how to create, structure, and organize your notes effectively",
        "updated": null,
        "category": null,
        "status": null
      },
      "content_preview": "Learn how to create well-structured notes with proper metadata, organize them effectively, and make them searchable.\n\n\n\n\nEvery note consists of two parts:\n1. Frontmatter: Metadata in YAML format\n2. Co...",
      "searchable_content": "\nCreating and Organizing Notes\n\nLearn how to create well-structured notes with proper metadata, organize them effectively, and make them searchable.\n\n\ud83d\udcdd Note Structure\n\nBasic Anatomy\nEvery note consists of two parts:\n1. Frontmatter: Metadata in YAML format\n2. Content: Your actual note in Markdown\n\nExample Note\n\nmarkdown\n---\ntitle: My First Note\ntags: [personal, ideas]\nauthor: Your Name\ncreated: 2025-01-18\ndescription: A brief description for search results\n---\n\nMy First Note\n\nYour content starts here...\n\n\n\ud83d\udccb Frontmatter Explained\n\nRequired Fields\n\nTitle\nThe display name for your note:\nyaml\ntitle: JavaScript Array Methods\n\n\nRecommended Fields\n\nTags\nCategorize your notes for easy filtering:\nyaml\ntags: [javascript, programming, tutorial]\n\n\nAuthor\nTrack who created the note:\nyaml\nauthor: John Doe\n\n\nCreated Date\nWhen the note was first written:\nyaml\ncreated: 2025-01-18\n\n\nDescription\nBrief summary for search results:\nyaml\ndescription: Complete guide to JavaScript array methods with examples\n\n\nOptional Fields\n\nUpdated Date\nTrack last modification:\nyaml\nupdated: 2025-01-19\n\n\nCategory\nAdditional organization:\nyaml\ncategory: tutorials\n\n\nStatus\nTrack note completion:\nyaml\nstatus: draft  # or 'complete', 'review'\n\n\n\ud83d\udcc1 File Organization\n\nDirectory Structure\nOrganize notes in logical folders:\n\nnotes/\n\u251c\u2500\u2500 personal/\n\u2502   \u251c\u2500\u2500 journal/\n\u2502   \u2514\u2500\u2500 ideas/\n\u251c\u2500\u2500 work/\n\u2502   \u251c\u2500\u2500 projects/\n\u2502   \u2514\u2500\u2500 meetings/\n\u251c\u2500\u2500 learning/\n\u2502   \u251c\u2500\u2500 courses/\n\u2502   \u2514\u2500\u2500 books/\n\u2514\u2500\u2500 reference/\n    \u251c\u2500\u2500 code-snippets/\n    \u2514\u2500\u2500 cheatsheets/\n\n\nNaming Conventions\n\nFile Names\n- Use descriptive names: docker-deployment-guide.md\n- Avoid spaces: use hyphens or underscores\n- Keep lowercase for consistency\n- Include dates for time-sensitive notes: 2025-01-18-meeting-notes.md\n\nFolder Names\n- Short and descriptive\n- Use singular or plural consistently\n- Group related content logically\n\n\ud83c\udff7\ufe0f Effective Tagging\n\nTag Strategy\n\nHierarchical Tags\nCreate tag hierarchies:\nyaml\ntags: [programming, programming/javascript, programming/javascript/react]\n\n\nConsistent Naming\n- Choose singular or plural: book vs books\n- Use consistent separators: machine-learning vs machinelearning\n- Document your conventions\n\nCommon Tag Categories\n- Topic: javascript, docker, react\n- Type: tutorial, reference, journal\n- Status: draft, complete, needs-review\n- Project: project-x, client-y\n\n\ud83c\udfa8 Content Best Practices\n\nUse Markdown Features\n\nHeadings for Structure\nmarkdown\nMain Title\nSection\nSubsection\n\n\nLists for Organization\nmarkdown\n- Bullet points for unordered items\n1. Numbered lists for sequences\n   - Nested items with indentation\n\n\nCode Blocks with Language\nmarkdown\njavascript\nconst example = \"Always specify the language\";\n\n\n\nLinks and References\nmarkdown\nExternal Link\n[[Internal Wiki Link]]\n\n\n\ud83d\udd0d Making Notes Searchable\n\nOptimize for Search\n\nUse Descriptive Titles\n- \u2705 \"Docker Compose Multi-Container Setup\"\n- \u274c \"Docker Notes\"\n\nInclude Keywords\nAdd relevant terms in your content naturally\n\nWrite Clear Descriptions\nThe description field appears in search results\n\nTag Thoroughly\nMore tags = easier to find\n\n\ud83d\udca1 Organization Tips\n\nPersonal Knowledge Management\n\nDaily Notes\nyaml\ntitle: Daily Note - 2025-01-18\ntags: [journal, daily]\n\n\nProject Documentation\nyaml\ntitle: Project X - Architecture Overview\ntags: [project-x, architecture, documentation]\n\n\nLearning Notes\nyaml\ntitle: React Hooks - Study Notes\ntags: [learning, react, javascript, frontend]\n\n\nContext-Based Organization\n\nUse Contexts\nTop-level folders as contexts:\n- personal/ - Private notes\n- work/ - Professional content\n- reference/ - Quick lookup materials\n- learning/ - Educational content\n\n\ud83d\ude80 Workflow Examples\n\nMeeting Notes Template\nmarkdown\n---\ntitle: Team Meeting - 2025-01-18\ntags: [meeting, team, project-x]\nauthor: Your Name\ncreated: 2025-01-18\n---\n\nTeam Meeting - 2025-01-18\n\nAttendees\n- John Doe\n- Jane Smith\n\nAgenda\n1. Project updates\n2. Blockers\n3. Next steps\n\nNotes\n...\n\nAction Items\n- [ ] Task 1 - @John\n- [ ] Task 2 - @Jane\n\n\nTechnical Documentation\nmarkdown\n---\ntitle: API Authentication Guide\ntags: [api, authentication, documentation]\nauthor: Tech Team\ncreated: 2025-01-18\nupdated: 2025-01-19\nstatus: complete\n---\n\nAPI Authentication Guide\n\nOverview\n...\n\nImplementation\n...\n\n\n\ud83d\udd27 Building the Index\n\nAfter creating or modifying notes:\nbash\nnpm run build\n\n\nThis updates the search index with your new content.\n\n---\n\nWell-organized notes are the foundation of an effective knowledge management system. Start with good structure, and your future self will thank you! ---\ntitle: My First Note\ntags: [personal, ideas]\nauthor: Your Name\ncreated: 2025-01-18\ndescription: A brief description for search results\n---\n\n# My First Note\n\nYour content starts here... title: JavaScript Array Methods tags: [javascript, programming, tutorial] author: John Doe created: 2025-01-18 description: Complete guide to JavaScript array methods with examples updated: 2025-01-19 category: tutorials status: draft  # or 'complete', 'review' notes/\n\u251c\u2500\u2500 personal/\n\u2502   \u251c\u2500\u2500 journal/\n\u2502   \u2514\u2500\u2500 ideas/\n\u251c\u2500\u2500 work/\n\u2502   \u251c\u2500\u2500 projects/\n\u2502   \u2514\u2500\u2500 meetings/\n\u251c\u2500\u2500 learning/\n\u2502   \u251c\u2500\u2500 courses/\n\u2502   \u2514\u2500\u2500 books/\n\u2514\u2500\u2500 reference/\n    \u251c\u2500\u2500 code-snippets/\n    \u2514\u2500\u2500 cheatsheets/ tags: [programming, programming/javascript, programming/javascript/react] # Main Title\n## Section\n### Subsection - Bullet points for unordered items\n1. Numbered lists for sequences\n   - Nested items with indentation   [External Link](https://example.com)\n[[Internal Wiki Link]] title: Daily Note - 2025-01-18\ntags: [journal, daily] title: Project X - Architecture Overview\ntags: [project-x, architecture, documentation] title: React Hooks - Study Notes\ntags: [learning, react, javascript, frontend] ---\ntitle: Team Meeting - 2025-01-18\ntags: [meeting, team, project-x]\nauthor: Your Name\ncreated: 2025-01-18\n---\n\n# Team Meeting - 2025-01-18\n\n## Attendees\n- John Doe\n- Jane Smith\n\n## Agenda\n1. Project updates\n2. Blockers\n3. Next steps\n\n## Notes\n...\n\n## Action Items\n- [ ] Task 1 - @John\n- [ ] Task 2 - @Jane ---\ntitle: API Authentication Guide\ntags: [api, authentication, documentation]\nauthor: Tech Team\ncreated: 2025-01-18\nupdated: 2025-01-19\nstatus: complete\n---\n\n# API Authentication Guide\n\n## Overview\n...\n\n## Implementation\n... npm run build",
      "code_blocks_count": 22
    },
    {
      "path": "/notes/tutorials/features/table-of-contents.md",
      "context": "tutorials",
      "metadata": {
        "title": "Table of Contents Navigation",
        "tags": [
          "tutorial",
          "navigation",
          "toc"
        ],
        "created": "2025-01-18",
        "author": "Wiki Team",
        "description": "Learn how to use the automatic table of contents for easy navigation",
        "updated": null,
        "category": null,
        "status": null
      },
      "content_preview": "The Table of Contents (TOC) feature automatically generates an outline from your note's headings, making it easy to navigate long documents.\n\n\n\n\nWhen you open any note with multiple headings, a Table ...",
      "searchable_content": "\nTable of Contents Navigation\n\nThe Table of Contents (TOC) feature automatically generates an outline from your note's headings, making it easy to navigate long documents.\n\n\ud83c\udfaf How It Works\n\nAutomatic Generation\nWhen you open any note with multiple headings, a Table of Contents appears on the right side of the screen. It:\n- Extracts all headings (H1-H6) from your note\n- Creates a hierarchical, clickable outline\n- Updates automatically as you edit\n\nVisual Indicators\n- Active Section Highlighting: The current section you're reading is highlighted\n- Progress Tracking: A subtle indicator shows how far you've scrolled\n- Nested Structure: Sub-headings are indented to show document structure\n\n\ud83d\uddb1\ufe0f Using the Table of Contents\n\nClick to Navigate\nSimply click any heading in the TOC to jump directly to that section. The page scrolls smoothly to bring the section into view.\n\nCollapse and Expand\n- Click the collapse icon at the top to hide the TOC\n- Click again to expand it\n- Your preference is remembered\n\nAuto-Hide on Mobile\nOn smaller screens, the TOC automatically hides to save space. You can still access it by clicking the TOC button.\n\n\u2699\ufe0f Settings and Customization\n\nEnable/Disable TOC\n1. Open Settings (Ctrl+,)\n2. Find \"Show Table of Contents\"\n3. Toggle on/off as desired\n\nWhen TOC Appears\nThe Table of Contents only appears when:\n- The note has 2 or more headings\n- The setting is enabled\n- There's enough screen width (desktop/tablet)\n\n\ud83d\udcdd Writing TOC-Friendly Notes\n\nBest Practices\n1. Use Clear Headings: Make headings descriptive\n2. Maintain Hierarchy: Use proper heading levels (H1 \u2192 H2 \u2192 H3)\n3. Keep It Organized: Group related content under appropriate headings\n\nExample Structure\nmarkdown\nMain Title (H1)\n\nIntroduction (H2)\nContent here...\n\nMain Concepts (H2)\n\nConcept One (H3)\nExplanation...\n\nConcept Two (H3)\nMore details...\n\nConclusion (H2)\nFinal thoughts...\n\n\n\ud83c\udfa8 Visual Styling\n\nThe TOC adapts to your chosen theme:\n- Light themes: Clean borders and subtle backgrounds\n- Dark themes: Appropriate contrast for easy reading\n- Accent colors: Match your theme's primary color\n\n\ud83d\udca1 Pro Tips\n\n1. Keyboard Navigation: After clicking a TOC item, use arrow keys to read\n2. Quick Collapse: Double-click the TOC header to toggle\n3. Smooth Scrolling: All navigation uses smooth scrolling for better UX\n4. Reading Position: The TOC remembers your position even after collapse\n\n\ud83d\udd27 Troubleshooting\n\nTOC Not Showing?\n- Check if the note has at least 2 headings\n- Verify TOC is enabled in settings\n- Try refreshing the page (F5)\n\nIncorrect Highlighting?\n- This can happen with very short sections\n- The highlight updates as you scroll\n- Click a heading to ensure proper positioning\n\n---\n\nThe Table of Contents is one of the most useful features for navigating long documents. Try it on this very page to see it in action! # Main Title (H1)\n\n## Introduction (H2)\nContent here...\n\n## Main Concepts (H2)\n\n### Concept One (H3)\nExplanation...\n\n### Concept Two (H3)\nMore details...\n\n## Conclusion (H2)\nFinal thoughts...",
      "code_blocks_count": 1
    },
    {
      "path": "/notes/tutorials/features/wiki-links.md",
      "context": "tutorials",
      "metadata": {
        "title": "Wiki-Style Links",
        "tags": [
          "tutorial",
          "navigation",
          "links"
        ],
        "created": "2025-01-18",
        "author": "Wiki Team",
        "description": "Create connections between notes using wiki-style [[Note Title]] links",
        "updated": null,
        "category": null,
        "status": null
      },
      "content_preview": "Connect your notes together using wiki-style links with the [[Note Title]] syntax. This powerful feature helps you build a interconnected knowledge base.\n\n\n\n\nSimply wrap any note title in double squar...",
      "searchable_content": "\nWiki-Style Links\n\nConnect your notes together using wiki-style links with the [[Note Title]] syntax. This powerful feature helps you build a interconnected knowledge base.\n\n\ud83d\udd17 Basic Usage\n\nCreating Links\nSimply wrap any note title in double square brackets:\nmarkdown\nCheck out my thoughts in [[Daily Journal]]\n\n\nThis creates a clickable link to the \"Daily Journal\" note.\n\nHow It Works\n1. Type [[ to start a link\n2. Add the note title\n3. Close with ]]\n4. The link is automatically created when the note renders\n\n\ud83d\udcdd Link Formats\n\nBy Title\nThe most common format - just use the note's title:\nmarkdown\nSee also [[JavaScript Tips]] for more examples\n\n\nCase Insensitive\nLinks are case-insensitive for convenience:\n- [[javascript tips]] \n- [[JavaScript Tips]]\n- [[JAVASCRIPT TIPS]]\n\nAll link to the same note!\n\nPartial Matches\nThe system tries to find the best match:\n- [[React Guide]] might match \"React Development Guide\"\n- [[Python]] might match \"Python Programming Basics\"\n\n\ud83c\udfaf Advanced Features\n\nLink Behavior\n- Click: Opens in current tab\n- Ctrl+Click: Opens in new tab\n- Middle-Click: Opens in new tab\n\nVisual Indicators\n- Valid Links: Appear in your theme's link color\n- Hover Effect: Shows the full note path on hover\n- Active Styling: Links to the current note are highlighted\n\n\ud83d\udca1 Best Practices\n\nMeaningful Titles\nGive your notes clear, unique titles:\n- \u2705 \"Docker Deployment Guide\"\n- \u274c \"Guide\" or \"Notes\"\n\nCreate Link Networks\nBuild connections between related topics:\nmarkdown\nAfter learning [[JavaScript Basics]], move on to [[Advanced JavaScript Patterns]] and explore [[React Framework Guide]].\n\n\nUse for Navigation\nCreate index pages with links:\nmarkdown\nMy Learning Path\n1. [[HTML Fundamentals]]\n2. [[CSS Styling Guide]]\n3. [[JavaScript Essentials]]\n4. [[React Getting Started]]\n\n\n\ud83d\udd0d Finding Linked Notes\n\nSearch Integration\nSearch for notes that link to a specific note:\n\nSearch: \"[[JavaScript Tips]]\"\n\n\nOrphaned Notes\nNotes without any incoming links can be found through search to help you connect them.\n\n\u26a1 Workflow Tips\n\nQuick Note Creation\n1. Write [[New Topic]] in your current note\n2. Click the link (it will show as valid even if the note doesn't exist yet)\n3. Create the new note with that exact title\n\nRefactoring Links\nWhen renaming a note:\n1. Update the note's title in frontmatter\n2. Search for the old [[Title]] across all notes\n3. Update links to use the new title\n\n\ud83c\udfa8 Styling\n\nWiki links inherit your theme's link styling:\n- Color: Matches theme's primary link color\n- Hover: Standard hover effects apply\n- Visited: May show different color if theme supports it\n\n\ud83d\udd27 Troubleshooting\n\nLink Not Working?\n1. Check the exact note title (view the note's frontmatter)\n2. Ensure the note exists in the index\n3. Try rebuilding the index: npm run build\n\nMultiple Matches?\nIf multiple notes have similar titles:\n- The system picks the best match\n- Use more specific titles to avoid ambiguity\n\n---\n\nWiki-style links are essential for building a connected knowledge base. Start linking your notes today to create a powerful personal wiki! Check out my thoughts in [[Daily Journal]] See also [[JavaScript Tips]] for more examples After learning [[JavaScript Basics]], move on to [[Advanced JavaScript Patterns]] and explore [[React Framework Guide]]. ## My Learning Path\n1. [[HTML Fundamentals]]\n2. [[CSS Styling Guide]]\n3. [[JavaScript Essentials]]\n4. [[React Getting Started]] Search: \"[[JavaScript Tips]]\"",
      "code_blocks_count": 5
    },
    {
      "path": "/notes/tutorials/features/focus-mode.md",
      "context": "tutorials",
      "metadata": {
        "title": "Focus Mode - Distraction-Free Reading",
        "tags": [
          "tutorial",
          "reading",
          "focus"
        ],
        "created": "2025-01-18",
        "author": "Wiki Team",
        "description": "Enter focus mode for an immersive, distraction-free reading experience",
        "updated": null,
        "category": null,
        "status": null
      },
      "content_preview": "Focus mode transforms your reading experience by hiding all UI elements except the content, creating a clean, distraction-free environment.\n\n\n\n\nPress the F key anytime to toggle focus mode on/off.\n\n\n-...",
      "searchable_content": "\nFocus Mode - Distraction-Free Reading\n\nFocus mode transforms your reading experience by hiding all UI elements except the content, creating a clean, distraction-free environment.\n\n\ud83c\udfaf Entering Focus Mode\n\nQuick Toggle\nPress the F key anytime to toggle focus mode on/off.\n\nAlternative Methods\n- Click the focus mode button (eye icon) in the note header\n- Use the button in the toolbar\n\n\ud83d\udc41\ufe0f What Focus Mode Does\n\nHidden Elements\nWhen activated, focus mode hides:\n- \u2713 Sidebar navigation\n- \u2713 Tab bar\n- \u2713 Header controls\n- \u2713 Floating buttons\n- \u2713 All UI chrome\n\nWhat Remains\nOnly the essential reading elements stay visible:\n- \ud83d\udcc4 Note content (centered and optimized)\n- \ud83d\udcd1 Table of contents (if enabled)\n- \ud83d\udcca Reading progress bar\n- \ud83d\udd0d In-note search (when activated)\n\n\ud83c\udfa8 Visual Experience\n\nContent Optimization\n- Centered Layout: Content is perfectly centered on screen\n- Optimal Width: Maintains readable line length\n- Clean Background: Removes all visual distractions\n- Smooth Transition: Elegant fade animation when toggling\n\nTheme Integration\nFocus mode respects your chosen theme:\n- Background colors remain consistent\n- Text contrast is preserved\n- Code blocks maintain syntax highlighting\n\n\u26a1 Workflow Integration\n\nReading Long Documents\nPerfect for:\n- \ud83d\udcda Reading lengthy tutorials\n- \ud83d\udcd6 Studying documentation\n- \u270d\ufe0f Reviewing your notes\n- \ud83c\udfaf Deep concentration sessions\n\nQuick Access Features\nEven in focus mode, you can:\n- Press Ctrl+F to search within the note\n- Use Esc or F to exit focus mode\n- Scroll normally with mouse or keyboard\n- Click links to navigate\n\n\u2328\ufe0f Keyboard Shortcuts\n\n| Action | Shortcut |\n|--------|----------|\n| Toggle Focus Mode | F |\n| Exit Focus Mode | Esc or F |\n| Search in Note | Ctrl+F |\n| Scroll | Arrow keys / Space |\n\n\ud83c\udfaf Best Use Cases\n\nDeep Reading Sessions\n- Minimize distractions during study\n- Focus on complex technical documentation\n- Immerse yourself in long-form content\n\nNote Review\n- Review your notes without UI distractions\n- Prepare for presentations\n- Proofread and edit content\n\nLearning Mode\n- Follow tutorials step-by-step\n- Read programming guides\n- Study reference materials\n\n\u2699\ufe0f Customization\n\nSettings Integration\nFocus mode respects your settings:\n- Font size: Maintains your preferred size\n- Line height: Keeps your spacing preferences\n- Content width: Uses your selected width setting\n\nTable of Contents\nThe TOC remains available in focus mode:\n- Helps navigate long documents\n- Can be collapsed if desired\n- Maintains reading position tracking\n\n\ud83d\udca1 Pro Tips\n\n1. Combine with Search: Use Ctrl+F in focus mode to find specific content\n2. Reading Progress: The progress bar helps track your position\n3. Quick Toggle: Press F twice quickly to check something in the UI\n4. Multiple Monitors: Great for dedicating one screen to focused reading\n\n\ud83d\udd27 Troubleshooting\n\nFocus Mode Not Activating?\n- Ensure you're viewing a note (not search or settings)\n- Try clicking the focus button instead of keyboard\n- Check if another modal is open\n\nContent Not Centered?\n- This is usually theme-related\n- Try switching themes\n- Ensure browser zoom is at 100%\n\n---\n\nFocus mode is your gateway to distraction-free reading. Press F right now to experience it with this tutorial!",
      "code_blocks_count": 0
    },
    {
      "path": "/notes/tutorials/features/code-blocks.md",
      "context": "tutorials",
      "metadata": {
        "title": "Code Blocks & Syntax Highlighting",
        "tags": [
          "tutorial",
          "code",
          "markdown",
          "syntax-highlighting"
        ],
        "created": "2025-01-18",
        "author": "Wiki Team",
        "description": "Master code blocks with syntax highlighting, line numbers, and advanced features",
        "updated": null,
        "category": null,
        "status": null
      },
      "content_preview": "Display code beautifully with syntax highlighting for 100+ programming languages, line numbers, custom titles, and more.\n\n\n\n\nWrap code in triple backticks:\n\nmarkdown\n\nfunction hello() {\n    console.lo...",
      "searchable_content": "\nCode Blocks & Syntax Highlighting\n\nDisplay code beautifully with syntax highlighting for 100+ programming languages, line numbers, custom titles, and more.\n\n\ud83d\udcdd Basic Code Blocks\n\nSimple Code Block\nWrap code in triple backticks:\n\nmarkdown\n\nfunction hello() {\n    console.log(\"Hello, World!\");\n}\n\n\n\nWith Language Specification\nAdd the language for syntax highlighting:\n\nmarkdown\njavascript\nfunction hello() {\n    console.log(\"Hello, World!\");\n}\n\n\n\n\ud83c\udfa8 Syntax Highlighting\n\nSupported Languages\nThe wiki supports 100+ languages including:\n- Web: HTML, CSS, JavaScript, TypeScript\n- Backend: Python, Java, Go, Rust, C++\n- Data: SQL, JSON, YAML, XML\n- Scripting: Bash, PowerShell, Ruby\n- And many more!\n\nExamples\n\npython\nPython example\ndef fibonacci(n):\n    if n <= 1:\n        return n\n    return fibonacci(n-1) + fibonacci(n-2)\n\n\nsql\n-- SQL example\nSELECT users.name, COUNT(orders.id) as ordercount\nFROM users\nLEFT JOIN orders ON users.id = orders.userid\nGROUP BY users.id\nHAVING ordercount > 5;\n\n\n\ud83c\udff7\ufe0f Advanced Features\n\nCustom Titles\nAdd descriptive titles to code blocks:\n\nmarkdown\njavascript title:\"API Configuration\"\nconst config = {\n    apiUrl: 'https://api.example.com',\n    timeout: 5000\n};\n\n\n\nResult:\njavascript title:\"API Configuration\"\nconst config = {\n    apiUrl: 'https://api.example.com',\n    timeout: 5000\n};\n\n\nCollapsible Code Blocks\nMake long code blocks collapsible:\n\nmarkdown\npython title:\"Long Example\" collapse:true\nThis code block starts collapsed\ndef longfunction():\n    # ... lots of code ...\n    pass\n\n\n\n\ud83d\udd22 Line Numbers\n\nEnable Globally\n1. Open Settings (Ctrl+,)\n2. Toggle \"Show line numbers\"\n3. All code blocks now display line numbers\n\nBenefits\n- Easy reference to specific lines\n- Better for tutorials and documentation\n- Maintains alignment with word wrap\n\n\ud83d\udd27 Code Block Actions\n\nCopy Button\nEvery code block has a copy button:\n- Hover over any code block\n- Click the \ud83d\udccb copy icon\n- Code is copied to clipboard\n\nExpand/Collapse\nFor collapsible blocks:\n- Click the toggle button\n- State is preserved while viewing\n\n\ud83d\udca1 Best Practices\n\nChoose the Right Language\nAlways specify the language for better highlighting:\n- \u2705  javascript\n- \u274c  js (might work but less reliable)\n- \u274c  text (no highlighting)\n\nUse Descriptive Titles\nHelp readers understand the code's purpose:\nbash title:\"Install Dependencies\"\nnpm install express mongoose dotenv\n\n\nOrganize Long Code\nFor lengthy examples:\n1. Use collapsible blocks\n2. Break into multiple blocks with explanations\n3. Add titles to each section\n\n\ud83c\udfaf Special Features\n\nFile Names in Titles\nShow file paths in titles:\njavascript title:\"src/components/Header.jsx\"\nexport function Header() {\n    return <h1>My App</h1>;\n}\n\n\nTerminal Output\nUse bash or shell for command line:\nbash\n$ npm run build\nBuilding project...\n\u2713 Build complete!\n\n\nDiff Highlighting\nShow code changes:\ndiff\n- const old = \"red\";\n+ const new = \"green\";\n\n\n\u2699\ufe0f Settings & Customization\n\nLine Numbers Toggle\n- Global setting affects all code blocks\n- Applies immediately without refresh\n- CSS-based implementation (no JavaScript overhead)\n\nTheme Integration\n- Syntax colors adapt to your chosen theme\n- Dark themes have appropriate contrast\n- Light themes remain readable\n\n\ud83d\ude80 Pro Tips\n\n1. Language Aliases: Both yml and yaml work\n2. No Language: Use  text for plain text\n3. JSON Formatting: JSON is automatically pretty-printed\n4. Copy Preserves Format: Copied code maintains proper indentation\n\n\ud83d\udd0d Troubleshooting\n\nNo Syntax Highlighting?\n- Check if language is specified correctly\n- Some languages have multiple names (e.g., c++, cpp)\n- Use  text if language isn't supported\n\nLine Numbers Not Showing?\n- Verify setting is enabled\n- Refresh the page if needed\n- Check if theme supports line numbers\n\n---\n\nCode blocks are essential for technical documentation. Master these features to create beautiful, readable code examples!     # Python example\ndef fibonacci(n):\n    if n <= 1:\n        return n\n    return fibonacci(n-1) + fibonacci(n-2) -- SQL example\nSELECT users.name, COUNT(orders.id) as order_count\nFROM users\nLEFT JOIN orders ON users.id = orders.user_id\nGROUP BY users.id\nHAVING order_count > 5;   javascript API Configuration const config = {\n    apiUrl: 'https://api.example.com',\n    timeout: 5000\n};   bash Install Dependencies npm install express mongoose dotenv javascript src/components/Header.jsx export function Header() {\n    return <h1>My App</h1>;\n} $ npm run build\nBuilding project...\n\u2713 Build complete! - const old = \"red\";\n+ const new = \"green\";",
      "code_blocks_count": 15
    },
    {
      "path": "/notes/tutorials/features/in-note-search.md",
      "context": "tutorials",
      "metadata": {
        "title": "In-Note Search",
        "tags": [
          "tutorial",
          "search",
          "navigation"
        ],
        "created": "2025-01-18",
        "author": "Wiki Team",
        "description": "Search and highlight text within the current note with keyboard navigation",
        "updated": null,
        "category": null,
        "status": null
      },
      "content_preview": "Find and highlight specific text within your current note using the built-in search feature. Navigate through matches with keyboard shortcuts.\n\n\n\n\nPress Ctrl+F (or Cmd+F on Mac) to open the search bar...",
      "searchable_content": "\nIn-Note Search\n\nFind and highlight specific text within your current note using the built-in search feature. Navigate through matches with keyboard shortcuts.\n\n\ud83d\udd0d Activating Search\n\nKeyboard Shortcut\nPress Ctrl+F (or Cmd+F on Mac) to open the search bar at the top of the note.\n\nWhat Happens\n1. A search input appears at the top\n2. Focus moves to the search box\n3. Start typing to search immediately\n\n\ud83c\udfaf Search Features\n\nReal-Time Highlighting\n- Matches are highlighted as you type\n- Yellow background for visibility\n- All matches shown simultaneously\n\nMatch Counter\nShows current match and total: 1 of 5 matches\n\nNavigation Controls\n- Next Match: Press Enter or click \u2192\n- Previous Match: Press Shift+Enter or click \u2190\n- Close Search: Press Esc or click \u2715\n\n\u2328\ufe0f Keyboard Navigation\n\n| Action | Shortcut |\n|--------|----------|\n| Open Search | Ctrl+F |\n| Next Match | Enter |\n| Previous Match | Shift+Enter |\n| Close Search | Esc |\n\n\ud83c\udfa8 Visual Features\n\nMatch Highlighting\n- All Matches: Light yellow background\n- Current Match: Bright yellow with border\n- Smooth Scrolling: Auto-scrolls to show matches\n\nSearch Bar Design\n- Minimal, non-intrusive design\n- Adapts to your theme colors\n- Clear match counter\n- Intuitive navigation buttons\n\n\ud83d\udca1 Search Tips\n\nCase Sensitivity\nSearch is case-insensitive by default:\n- Searching \"javascript\" finds \"JavaScript\", \"JAVASCRIPT\", etc.\n\nPartial Matches\nFinds text within words:\n- Searching \"script\" matches \"JavaScript\", \"scripts\", \"scripting\"\n\nSpecial Characters\nMost special characters work:\n- Search for function() or @import\n- Regex patterns are treated as literal text\n\n\ud83c\udfaf Use Cases\n\nCode Review\nFind specific functions or variables:\n1. Press Ctrl+F\n2. Type function name\n3. Navigate through all occurrences\n\nProofreading\nCheck word usage:\n- Search for commonly confused words\n- Find repeated phrases\n- Locate specific terms\n\nNavigation\nJump to sections quickly:\n- Search for heading text\n- Find specific examples\n- Locate references\n\n\ud83d\udd27 Advanced Usage\n\nCombining with TOC\n1. Use TOC for section navigation\n2. Use in-note search for specific content\n3. Together they provide complete navigation\n\nSearch Persistence\n- Search stays active while reading\n- Click anywhere in note to continue reading\n- Highlights remain visible\n\nMultiple Terms\nSearch for different terms sequentially:\n1. Search first term\n2. Review matches\n3. Change search term\n4. New matches highlighted\n\n\u26a1 Performance\n\nOptimized for Large Notes\n- Efficient highlighting algorithm\n- Smooth scrolling to matches\n- No lag even with many matches\n\nMemory Efficient\n- Cleans up highlights when closed\n- No impact on note rendering\n- Lightweight implementation\n\n\ud83c\udfa8 Theme Integration\n\nSearch adapts to your theme:\n- Dark Themes: Appropriate highlight colors\n- Light Themes: Visible but not harsh\n- Custom Themes: Uses theme variables\n\n\ud83d\udca1 Pro Tips\n\n1. Quick Jumps: Use Enter repeatedly to cycle through matches\n2. Reverse Navigation: Hold Shift+Enter to go backwards\n3. Persistent Search: Leave search open while reading\n4. Exact Phrases: Search for multi-word phrases\n5. Quick Close: Press Esc twice to close and clear\n\n\ud83d\udd0d Limitations\n\nCurrent Limitations\n- No regex support (searches literal text)\n- No whole-word-only option\n- Searches visible content only\n\nBest For\n- Finding specific text quickly\n- Navigating long documents\n- Reviewing code or documentation\n- Proofreading and editing\n\n---\n\nTry it now! Press Ctrl+F and search for \"search\" to see how many times it appears in this tutorial.",
      "code_blocks_count": 0
    },
    {
      "path": "/notes/tutorials/features/reading-progress.md",
      "context": "tutorials",
      "metadata": {
        "title": "Reading Progress & Time Estimation",
        "tags": [
          "tutorial",
          "reading",
          "navigation"
        ],
        "created": "2025-01-18",
        "author": "Wiki Team",
        "description": "Track your reading progress and get time estimates for notes",
        "updated": null,
        "category": null,
        "status": null
      },
      "content_preview": "Stay informed about your reading progress with visual indicators and time estimates based on average reading speed.\n\n\n\n\nA thin progress bar appears at the top of each note showing:\n- Current position ...",
      "searchable_content": "\nReading Progress & Time Estimation\n\nStay informed about your reading progress with visual indicators and time estimates based on average reading speed.\n\n\ud83d\udcca Progress Bar\n\nVisual Indicator\nA thin progress bar appears at the top of each note showing:\n- Current position as you scroll\n- Smooth animation for better UX\n- Theme-matched colors for consistency\n\nHow It Works\n- Calculates based on scroll position\n- Updates in real-time as you read\n- Accounts for entire document length\n- Hidden when at the very top\n\n\u23f1\ufe0f Reading Time Estimation\n\nAutomatic Calculation\nEach note shows estimated reading time based on:\n- Word count of the entire note\n- Average reading speed (200 words/minute)\n- Formatted display (e.g., \"5 min read\")\n\nWhere It Appears\nFind reading time in:\n- Note header metadata\n- Search results preview\n- Recent files list\n\n\ud83d\udcc8 Progress Tracking Features\n\nScroll Position Memory\nThe wiki remembers where you left off:\n- Position saved when switching tabs\n- Restored when returning to a note\n- Per-tab basis for multiple instances\n\nVisual Feedback\n- Progress percentage shown in some themes\n- Smooth scrolling to positions\n- Clear indicators of document boundaries\n\n\ud83c\udfaf Use Cases\n\nLong Document Navigation\nPerfect for:\n- \ud83d\udcda Lengthy tutorials\n- \ud83d\udcd6 Documentation reading\n- \ud83d\udcdd Research papers\n- \ud83d\udccb Meeting minutes\n\nTime Management\n- Plan reading sessions\n- Estimate documentation review time\n- Track learning progress\n- Schedule breaks appropriately\n\n\u2699\ufe0f How Reading Time Works\n\nCalculation Method\n\nWords in document \u00f7 200 WPM = Reading time in minutes\n\n\nFactors Considered\n- Text content only (not code blocks)\n- Headings and paragraphs included\n- Average adult reading speed\n- Rounded to nearest minute\n\nExamples\n- 500 words = 3 min read\n- 1000 words = 5 min read\n- 2000 words = 10 min read\n\n\ud83c\udfa8 Visual Styling\n\nProgress Bar Appearance\n- Height: Thin 3-4px bar\n- Color: Matches theme accent\n- Position: Fixed at viewport top\n- Z-index: Above content, below modals\n\nTheme Integration\nDifferent themes style the progress bar:\n- Dark themes: Subtle glow effect\n- Light themes: Clean solid color\n- Custom themes: Uses CSS variables\n\n\ud83d\udca1 Reading Tips\n\nEffective Reading\n1. Check time estimate before starting\n2. Use TOC for long documents\n3. Monitor progress for breaks\n4. Combine with focus mode for immersion\n\nNavigation Helpers\n- Home key: Jump to start\n- End key: Jump to end  \n- Page Up/Down: Smooth scrolling\n- Space bar: Page down\n\n\ud83d\udd27 Technical Details\n\nPerformance\n- Lightweight implementation\n- No impact on scrolling performance\n- Throttled updates for efficiency\n- CSS-based animations\n\nAccessibility\n- Respects reduced motion preferences\n- Keyboard navigation friendly\n- Screen reader compatible\n- High contrast support\n\n\ud83d\udcf1 Responsive Behavior\n\nMobile Devices\n- Progress bar remains visible\n- Touch scrolling supported\n- Optimized for small screens\n- Same features as desktop\n\nTablet Experience  \n- Full progress tracking\n- Comfortable reading width\n- Touch-friendly interface\n- Landscape/portrait support\n\n\ud83c\udfaf Pro Tips\n\n1. Quick Progress Check: Glance at bar to see position\n2. Time Budgeting: Use estimates to plan reading\n3. Break Planning: Take breaks at section boundaries\n4. Speed Reading: Actual time may vary with familiarity\n\n\ud83d\udd0d Related Features\n\nComplements These Features\n- Table of Contents: Navigate to specific sections\n- Focus Mode: Immersive reading experience\n- In-Note Search: Find specific content\n- Bookmarks: Save important notes\n\n---\n\nThis note is approximately a 3-minute read. Watch the progress bar fill as you scroll through this content! Words in document \u00f7 200 WPM = Reading time in minutes",
      "code_blocks_count": 1
    },
    {
      "path": "/notes/tutorials/features/bookmarks.md",
      "context": "tutorials",
      "metadata": {
        "title": "Bookmarks - Save Your Favorite Notes",
        "tags": [
          "tutorial",
          "bookmarks",
          "organization",
          "navigation"
        ],
        "created": "2025-01-18",
        "author": "Wiki Team",
        "description": "Learn how to bookmark important notes for quick access",
        "updated": null,
        "category": null,
        "status": null
      },
      "content_preview": "Keep your most important notes at your fingertips with the bookmarking system. Save, organize, and quickly access your favorite content.\n\n\n\n\nWhile viewing any note:\n1. Click the star icon (\u2606) in the n...",
      "searchable_content": "\nBookmarks - Save Your Favorite Notes\n\nKeep your most important notes at your fingertips with the bookmarking system. Save, organize, and quickly access your favorite content.\n\n\u2b50 Creating Bookmarks\n\nQuick Bookmark\nWhile viewing any note:\n1. Click the star icon (\u2606) in the note header\n2. The star fills (\u2605) indicating it's bookmarked\n3. Note is instantly added to your bookmarks\n\nKeyboard Shortcut\nPress Ctrl+D to toggle bookmark for current note\n\nVisual Feedback\n- Empty star (\u2606): Not bookmarked\n- Filled star (\u2605): Bookmarked\n- Animation: Smooth transition when toggling\n\n\ud83d\udcda Accessing Bookmarks\n\nFrom the Header\n1. Click the Bookmarks button in the header\n2. Dropdown shows all bookmarked notes\n3. Click any bookmark to open it\n\nQuick Access\n- Recent bookmarks appear at the top\n- Shows note title and description\n- Hover for full path tooltip\n\n\ud83d\uddc2\ufe0f Managing Bookmarks\n\nRemove Bookmarks\nSeveral ways to remove:\n1. Toggle: Click the star icon again on bookmarked note\n2. From List: Click the \u2715 next to bookmark in dropdown\n3. Keyboard: Press Ctrl+D on bookmarked note\n\nBookmark Limit\n- Default: 50 bookmarks maximum\n- Oldest bookmarks auto-removed when limit reached\n- Prevents bookmark overload\n\n\ud83c\udfaf Smart Features\n\nBookmark Persistence\n- Saved in browser's local storage\n- Survives page refreshes\n- Syncs across tabs instantly\n- No account needed\n\nBookmark Information\nEach bookmark stores:\n- Note title - For display\n- File path - For navigation\n- Description - Quick preview\n- Bookmark date - For sorting\n\nVisual Indicators\n- In File Tree: Bookmarked notes show star icon\n- In Search Results: Bookmarks highlighted\n- In Tabs: Tab shows bookmark indicator\n\n\ud83d\udca1 Use Cases\n\nQuick Reference\nBookmark these types of notes:\n- \ud83d\udccb Daily templates\n- \ud83d\udd27 Configuration guides\n- \ud83d\udcda Index/overview pages\n- \ud83c\udfaf Current projects\n- \ud83d\udcdd Frequently edited notes\n\nWorkflow Integration\n1. Project Work: Bookmark all project-related notes\n2. Learning Path: Bookmark tutorial sequence\n3. Daily Routine: Bookmark daily/weekly notes\n4. Reference: Bookmark cheat sheets and guides\n\n\u26a1 Pro Tips\n\nBookmark Organization\n1. Use descriptive titles - Easy to identify in list\n2. Add descriptions - Help future you remember why\n3. Regular cleanup - Remove outdated bookmarks\n4. Project grouping - Bookmark related notes together\n\nKeyboard Workflow\n1. Open note: Ctrl+K \u2192 search \u2192 Enter\n2. Bookmark it: Ctrl+D\n3. Access bookmarks: Click header dropdown\n4. Quick switching between bookmarked notes\n\n\ud83d\udd27 Troubleshooting\n\nBookmarks Not Saving?\n- Check browser's local storage isn't full\n- Ensure cookies/storage enabled\n- Try different browser if issues persist\n\nLost Bookmarks?\n- Bookmarks are browser-specific\n- Clear browser data removes bookmarks\n- Use same browser for consistency\n\nCan't Bookmark?\n- Ensure you're viewing a note\n- Check if bookmark limit reached\n- Try refreshing the page\n\n\ud83c\udfa8 Visual Design\n\nTheme Integration\n- Star color matches theme accent\n- Dropdown styled consistently\n- Smooth animations throughout\n- High contrast for accessibility\n\nMobile Experience\n- Touch-friendly bookmark button\n- Responsive dropdown menu\n- Same features as desktop\n- Swipe gestures supported\n\n\ud83d\udd0d Related Features\n\nComplements These Tools\n- Recent Files: Auto-tracked history\n- Search: Find any note quickly\n- Tags: Organize by topics\n- Wiki Links: Connect related notes\n\nBookmark vs Recent Files\n| Feature | Bookmarks | Recent Files |\n|---------|-----------|--------------|\n| Manual | \u2713 Yes | \u2717 Auto |\n| Persistent | \u2713 Forever |  Limited |\n| Limit | 50 notes | 20 notes |\n| Purpose | Favorites | History |\n\n\ud83d\udcbe Data Management\n\nExport Bookmarks\nCurrently bookmarks are browser-only. Future features may include:\n- Export to JSON\n- Sync across devices\n- Backup/restore options\n\nPrivacy\n- All bookmarks stored locally\n- No server communication\n- No tracking or analytics\n- Complete user control\n\n---\n\nStart bookmarking your important notes now! Click the star icon on this tutorial to try it out.",
      "code_blocks_count": 0
    },
    {
      "path": "/notes/tutorials/features/context-filtering.md",
      "context": "tutorials",
      "metadata": {
        "title": "Context Filtering - Organize by Categories",
        "tags": [
          "tutorial",
          "organization",
          "navigation",
          "contexts"
        ],
        "created": "2025-01-18",
        "author": "Wiki Team",
        "description": "Use contexts to organize and filter your notes by top-level categories",
        "updated": null,
        "category": null,
        "status": null
      },
      "content_preview": "Contexts are top-level folders that help you organize notes into major categories like Personal, Work, Reference, etc. The context filtering system adapts to your screen size and number of categories....",
      "searchable_content": "\nContext Filtering - Organize by Categories\n\nContexts are top-level folders that help you organize notes into major categories like Personal, Work, Reference, etc. The context filtering system adapts to your screen size and number of categories.\n\n\ud83d\udcc2 Understanding Contexts\n\nWhat Are Contexts?\nContexts are the top-level folders in your /notes/ directory:\n\nnotes/\n\u251c\u2500\u2500 personal/     \u2190 Context\n\u251c\u2500\u2500 work/         \u2190 Context  \n\u251c\u2500\u2500 reference/    \u2190 Context\n\u2514\u2500\u2500 tutorials/    \u2190 Context\n\n\nAutomatic Detection\nThe system automatically:\n- Detects all top-level folders\n- Counts notes in each context\n- Creates filter buttons/dropdown\n- Updates when notes are added\n\n\ud83c\udfaf Using Context Filters\n\nDesktop View (Wide Screens)\nOn larger screens with few contexts:\n- Individual buttons appear in the header\n- Click to filter notes by that context\n- \"All\" button shows everything\n- Active context is highlighted\n\nMobile/Dropdown View\nOn smaller screens or with many contexts:\n- Dropdown menu replaces buttons\n- Click to open context list\n- Select context to filter\n- Current context shown in button\n\nAutomatic Switching\nThe UI switches between views based on:\n- Screen width: Mobile < 768px\n- Context count: 6+ forces dropdown\n- Dynamic resize: Adapts as you resize\n\n\ud83d\udd0d Filtering Behavior\n\nHow It Works\nWhen you select a context:\n1. Sidebar updates to show only that context's notes\n2. File tree filters to matching folders\n3. Search scope adjusts to context (optional)\n4. URL updates for bookmarking\n\nCombining with Other Filters\nContext filtering works with:\n- Tag filtering: Further refine within context\n- Search: Search within selected context\n- Recent files: Shows context-specific recents\n\n\ud83d\udca1 Organization Best Practices\n\nRecommended Contexts\nCommon context patterns:\n- personal/ - Private notes, journal, ideas\n- work/ - Professional documentation\n- reference/ - Quick lookup, cheatsheets\n- projects/ - Project-specific notes\n- learning/ - Courses, tutorials, books\n- archive/ - Old/completed items\n\nNaming Conventions\n- Use lowercase for consistency\n- Keep names short and clear\n- Avoid special characters\n- Use singular or plural consistently\n\nContext Limits\n- No hard limit on contexts\n- 6+ contexts trigger dropdown view\n- Consider consolidating if too many\n- Use subfolders for further organization\n\n\ud83c\udfa8 Visual Design\n\nButton Appearance\n- Matches theme colors\n- Subtle hover effects\n- Active state clearly visible\n- Responsive sizing\n\nDropdown Styling\n- Compact design for mobile\n- Clear selection indicator\n- Smooth animations\n- Touch-friendly targets\n\n\u26a1 Workflow Tips\n\nQuick Context Switching\n1. Keyboard: Use number keys (future feature)\n2. Mouse: Click context buttons\n3. Touch: Tap dropdown on mobile\n4. Bookmarks: Save filtered URLs\n\nProject Organization\nCreate contexts by project phase:\n\nnotes/\n\u251c\u2500\u2500 active-projects/\n\u251c\u2500\u2500 planning/\n\u251c\u2500\u2500 completed/\n\u2514\u2500\u2500 ideas/\n\n\nRole-Based Contexts\nOrganize by your roles:\n\nnotes/\n\u251c\u2500\u2500 developer/\n\u251c\u2500\u2500 manager/\n\u251c\u2500\u2500 personal/\n\u2514\u2500\u2500 learning/\n\n\n\ud83d\udd27 Advanced Usage\n\nURL Parameters\nDirect links to contexts:\n\n#/context/personal\n#/context/work\n\n\nPersistent Selection\n- Context selection is remembered\n- Survives page refreshes\n- Stored in localStorage\n- Reset with \"All\" button\n\nSearch Integration\nWhen searching with context active:\n- Results filtered to that context\n- Context badge shown in results\n- Clear context to search all\n\n\ud83d\udcf1 Responsive Behavior\n\nBreakpoints\n- Mobile: < 768px width\n- Tablet: 768px - 1024px\n- Desktop: > 1024px\n\nTouch Interactions\n- Tap to open dropdown\n- Tap outside to close\n- Swipe support (future)\n- Large touch targets\n\n\ud83c\udfaf Common Patterns\n\nWork/Personal Separation\n\nnotes/\n\u251c\u2500\u2500 work/\n\u2502   \u251c\u2500\u2500 meetings/\n\u2502   \u251c\u2500\u2500 projects/\n\u2502   \u2514\u2500\u2500 documentation/\n\u2514\u2500\u2500 personal/\n    \u251c\u2500\u2500 journal/\n    \u251c\u2500\u2500 ideas/\n    \u2514\u2500\u2500 learning/\n\n\nKnowledge Base Structure\n\nnotes/\n\u251c\u2500\u2500 guides/\n\u251c\u2500\u2500 reference/\n\u251c\u2500\u2500 troubleshooting/\n\u2514\u2500\u2500 archive/\n\n\n\ud83d\udd0d Troubleshooting\n\nContexts Not Showing?\n1. Ensure folders exist in /notes/\n2. Folders must contain .md files\n3. Rebuild index: npm run build\n4. Check for typos in folder names\n\nDropdown Not Working?\n- Clear browser cache\n- Check JavaScript console\n- Verify no CSS conflicts\n- Try different browser\n\n---\n\nContext filtering helps you focus on what matters. Organize your notes into meaningful categories and switch between them effortlessly! notes/\n\u251c\u2500\u2500 personal/     \u2190 Context\n\u251c\u2500\u2500 work/         \u2190 Context  \n\u251c\u2500\u2500 reference/    \u2190 Context\n\u2514\u2500\u2500 tutorials/    \u2190 Context notes/\n\u251c\u2500\u2500 active-projects/\n\u251c\u2500\u2500 planning/\n\u251c\u2500\u2500 completed/\n\u2514\u2500\u2500 ideas/ notes/\n\u251c\u2500\u2500 developer/\n\u251c\u2500\u2500 manager/\n\u251c\u2500\u2500 personal/\n\u2514\u2500\u2500 learning/ #/context/personal\n#/context/work notes/\n\u251c\u2500\u2500 work/\n\u2502   \u251c\u2500\u2500 meetings/\n\u2502   \u251c\u2500\u2500 projects/\n\u2502   \u2514\u2500\u2500 documentation/\n\u2514\u2500\u2500 personal/\n    \u251c\u2500\u2500 journal/\n    \u251c\u2500\u2500 ideas/\n    \u2514\u2500\u2500 learning/ notes/\n\u251c\u2500\u2500 guides/\n\u251c\u2500\u2500 reference/\n\u251c\u2500\u2500 troubleshooting/\n\u2514\u2500\u2500 archive/",
      "code_blocks_count": 6
    },
    {
      "path": "/notes/tutorials/features/split-view.md",
      "context": "tutorials",
      "metadata": {
        "title": "Split View",
        "tags": [
          "interface",
          "productivity",
          "tabs"
        ],
        "created": "2025-01-18",
        "author": "Wiki Admin",
        "description": "Work with multiple notes side-by-side using split view functionality",
        "updated": null,
        "category": null,
        "status": null
      },
      "content_preview": "Split view allows you to view and edit multiple notes side-by-side, dramatically improving your productivity when working with related content.\n\n\n\nThere are several ways to enable split view:\n\n\nClick ...",
      "searchable_content": "\nSplit View\n\nSplit view allows you to view and edit multiple notes side-by-side, dramatically improving your productivity when working with related content.\n\nActivating Split View\n\nThere are several ways to enable split view:\n\n\ud83d\uddb1\ufe0f Button Click\nClick the split view icon (two rectangles) in the header navigation bar.\n\n\u2328\ufe0f Future Shortcut\nA keyboard shortcut will be available in future updates.\n\nHow Split View Works\n\nWhen split view is enabled:\n\n1. Two Panes: Your workspace is divided into left and right panes\n2. Active Pane: One pane is \"active\" (highlighted with a colored border)\n3. Independent Content: Each pane can display different notes\n4. Resizable: Drag the divider to adjust pane sizes\n\nUsing Split View\n\n\ud83d\udccb Opening Notes\n- Click any note to open it in the active pane\n- Drag and drop notes from sidebar directly into any pane\n- Click a pane to make it active\n- Visual feedback: Panes highlight when dragging notes over them\n\n\ud83d\udccf Resizing Panes\n- Drag the divider between panes to adjust widths\n- Minimum width: 300px per pane\n- Visual feedback: Divider changes color on hover\n\n\ud83c\udfaf Active Pane\n- The active pane has a colored border\n- New notes open in the active pane\n- Click any pane to make it active\n\n\ud83d\uddb1\ufe0f Drag & Drop\n- Drag notes from the sidebar file tree into any pane\n- Visual feedback: Notes show grab cursor when draggable\n- Drop zones: Panes highlight with colored border during drag\n- Auto-activate: Dropping a note automatically makes that pane active\n\nUse Cases\n\n\ud83d\udcda Research & Writing\n- Open reference material in one pane\n- Write notes in the other pane\n\n\ud83d\udd17 Cross-Referencing\n- Compare different versions of documents\n- View related notes simultaneously\n\n\ud83d\udcd6 Learning\n- Tutorial in one pane\n- Practice notes in the other\n\n\ud83d\udee0\ufe0f Development\n- Documentation in one pane\n- Code examples in the other\n\nMobile Experience\n\nOn mobile devices:\n- Split view automatically becomes single pane\n- Only the active pane is shown\n- Tap to switch between panes\n\nTips & Tricks\n\n\u26a1 Efficiency Tips\n1. Bookmark frequently compared notes for quick access\n2. Use wiki links to jump between related content\n3. Resize panes based on content importance\n4. Focus mode works in split view too\n\n\ud83c\udfa8 Visual Organization\n- Different themes help distinguish panes\n- Use the table of contents in longer documents\n- Search within notes works in both panes\n\nDisabling Split View\n\nTo return to single-pane view:\n1. Click the split view button again\n2. The interface returns to normal layout\n3. Your current note remains active\n\nTechnical Notes\n\n\ud83e\udde0 Memory Management\n- Split view uses minimal additional memory\n- Each pane maintains its own scroll position\n- Tab system works independently in each pane\n\n\ud83d\udcbe Settings Persistence\n- Split view state is saved automatically\n- Pane sizes are remembered between sessions\n- Preferences sync across tabs\n\nSplit view transforms your note-taking workflow, making it easy to work with multiple documents efficiently!",
      "code_blocks_count": 0
    },
    {
      "path": "/notes/tutorials/features/sticky-notes.md",
      "context": "tutorials",
      "metadata": {
        "title": "Sticky Notes",
        "tags": [
          "productivity",
          "quick-notes",
          "interface"
        ],
        "created": "2025-01-18",
        "author": "Wiki Admin",
        "description": "Create floating mini-notes for quick thoughts and temporary reminders",
        "updated": null,
        "category": null,
        "status": null
      },
      "content_preview": "Sticky notes provide a quick way to capture thoughts, reminders, and temporary notes that float above your workspace. Perfect for jotting down ideas while reading or working on other content.\n\n\n\n\nClic...",
      "searchable_content": "\nSticky Notes\n\nSticky notes provide a quick way to capture thoughts, reminders, and temporary notes that float above your workspace. Perfect for jotting down ideas while reading or working on other content.\n\nCreating Sticky Notes\n\n\ud83d\uddb1\ufe0f Click Method\nClick the sticky note icon (document with lines) in the header navigation bar.\n\n\u2328\ufe0f Keyboard Shortcut\nPress Ctrl+Shift+S (or Cmd+Shift+S on Mac) to instantly create a new sticky note.\n\nFeatures\n\n\ud83c\udfa8 Four Color Options\n- Yellow: Default classic sticky note color\n- Blue: Cool and professional\n- Green: Nature-inspired and calming  \n- Pink: Vibrant and attention-grabbing\n\n\ud83d\udcd0 Fully Interactive\n- Drag: Click and drag the header to move anywhere on screen\n- Resize: Drag the bottom-right corner to resize\n- Minimize: Click the \u2212 button to collapse to header only\n- Expand: Click the \u25a1 button to restore full size\n\nSticky Note Controls\n\nEach sticky note has a header with several action buttons:\n\n\ud83c\udfa8 Color Cycling\n- Button: Paint palette icon\n- Action: Click to cycle through yellow \u2192 blue \u2192 green \u2192 pink\n\n\ud83d\uddd5 Minimize/Maximize\n- Minimize (\u2212): Collapses to header only\n- Maximize (\u25a1): Restores to full size\n- Use case: Keep important reminders visible but compact\n\n\u274c Close\n- Button: \u00d7 icon\n- Action: Permanently deletes the sticky note\n- Warning: Content is lost forever\n\nSmart Behaviors\n\n\ud83d\udcbe Auto-Save\n- Content saves automatically as you type\n- Position and size saved when moved/resized\n- All changes persist between browser sessions\n\n\ud83d\udcda Z-Index Management\n- Newly clicked sticky notes come to front\n- Multiple stickies stack naturally\n- No limit on number of sticky notes\n\n\ud83c\udfaf Collision Avoidance\n- New stickies appear with slight random positioning\n- Prevents stacking exactly on top of each other\n\nPractical Use Cases\n\n\ud83d\udcdd Quick Capture\n\n\ud83d\udca1 Remember to check the new API docs\n\ud83d\udd0d Research: distributed systems patterns  \n\ud83d\udcde Call Sarah about project timeline\n\n\n\ud83c\udfaf Temporary Reminders\n- Shopping lists while browsing recipes\n- Meeting notes during documentation review\n- Code snippets while reading tutorials\n\n\ud83e\udde0 Brainstorming\n- Ideas that pop up while reading\n- Questions to research later\n- Links between different concepts\n\n\ud83d\udccb Task Lists\n- Quick to-dos that don't warrant full notes\n- Temporary project reminders\n- Daily goals and priorities\n\nMobile Experience\n\n\ud83d\udcf1 Touch Support\n- Tap and hold header to drag\n- Pinch to resize (where supported)\n- Double-tap header to minimize/maximize\n\n\ud83d\udcd0 Responsive Design\n- Automatically constrains to screen bounds\n- Minimum size maintained for usability\n- Touch targets optimized for fingers\n\nStorage & Privacy\n\n\ud83d\udcbd Local Storage\n- All sticky notes stored in browser localStorage\n- No data sent to external servers\n- Completely private and offline\n\n\ud83e\uddf9 Cleanup\n- Clear browser data to remove all stickies\n- Individual deletion via close button\n- No automatic expiration\n\nTips & Best Practices\n\n\u26a1 Workflow Tips\n1. Use colors meaningfully: Yellow for ideas, blue for tasks, green for research, pink for urgent\n2. Keep content short: Stickies work best for brief notes\n3. Position strategically: Place where they won't block important content\n\n\ud83c\udfa8 Organization\n- Group by color for related thoughts\n- Minimize when not active to reduce clutter  \n- Use consistent positioning for different types of notes\n\n\ud83d\udd04 Workflow Integration\n- Create stickies while reading long documents\n- Jot down cross-references between notes\n- Capture spontaneous ideas during research\n- Track temporary reminders during work sessions\n\nSticky notes bridge the gap between fleeting thoughts and permanent knowledge, making your note-taking workflow more fluid and efficient! \ud83d\udca1 Remember to check the new API docs\n\ud83d\udd0d Research: distributed systems patterns  \n\ud83d\udcde Call Sarah about project timeline",
      "code_blocks_count": 1
    },
    {
      "path": "/notes/tutorials/advanced/combined-code-blocks.md",
      "context": "tutorials",
      "metadata": {
        "title": "Combined Code Blocks - Automatic Code Aggregation",
        "tags": [
          "tutorial",
          "code",
          "advanced",
          "automation"
        ],
        "created": "2025-01-18",
        "author": "Wiki Team",
        "description": "Automatically combine all code blocks from a page into a single, copyable block",
        "updated": null,
        "category": null,
        "status": null
      },
      "content_preview": "Transform your tutorials and documentation by automatically combining all code blocks into a single, complete code file at the end of your note.\n\n\n\nThe combined code blocks feature:\n- Collects all cod...",
      "searchable_content": "\nCombined Code Blocks - Automatic Code Aggregation\n\nTransform your tutorials and documentation by automatically combining all code blocks into a single, complete code file at the end of your note.\n\n\ud83c\udfaf What It Does\n\nThe combined code blocks feature:\n- Collects all code blocks from your note\n- Filters based on your criteria\n- Combines them into one copyable block\n- Adds section markers and comments\n- Appears automatically at the note's end\n\n\u2699\ufe0f Basic Configuration\n\nAdd this to your note's frontmatter:\n\nyaml title:\"Basic Setup\"\n---\ntitle: My Tutorial\ncombineCodeBlocks: true\ncombinedBlockLanguage: javascript\n---\n\n\nThis will combine all code blocks into a JavaScript code block at the bottom.\n\n\ud83d\udee0\ufe0f Advanced Configuration\n\nFull Options Example\n\nyaml title:\"Advanced Configuration\"\n---\ntitle: React Tutorial\ncombineCodeBlocks: true\ncombinedBlockLanguage: javascript\ncombinedBlockTitle: \"Complete React App\"\ncombinedBlockOptions:\n  includeBlockTitles: true      # Add section comments\n  includeOnlyLanguage: javascript  # Only JavaScript blocks\n  skipEmptyBlocks: true         # Ignore empty blocks\n  separator: \"\\n// ---\\n\"       # Between sections\n  excludePatterns: [\"test\", \"example\"]  # Skip these\n---\n\n\nConfiguration Options Explained\n\n| Option | Description | Default |\n|--------|-------------|---------|\n| combineCodeBlocks | Enable/disable feature | false |\n| combinedBlockLanguage | Language for syntax highlighting | text |\n| combinedBlockTitle | Custom title for combined block | Auto-generated |\n| includeBlockTitles | Add titles as comments | true |\n| includeOnlyLanguage | Filter by language | null (all) |\n| skipEmptyBlocks | Skip empty code blocks | true |\n| separator | Text between blocks | \\n// ---\\n |\n| excludePatterns | Title patterns to exclude | [] |\n\n\ud83d\udccb Real-World Examples\n\nTutorial Pattern\nPerfect for step-by-step tutorials:\n\n1. Setup section with imports\n2. Implementation with main code  \n3. Usage examples\n4. Combined complete code at the end\n\nAPI Documentation\n\nyaml title:\"API Documentation Config\"\n---\ncombineCodeBlocks: true\ncombinedBlockLanguage: python\ncombinedBlockTitle: \"Complete API Client\"\ncombinedBlockOptions:\n  includeOnlyLanguage: python\n  excludePatterns: [\"output\", \"response\"]\n---\n\n\n\ud83c\udfa8 Smart Features\n\nLanguage-Aware Comments\nThe system knows comment syntax for 30+ languages:\n- JavaScript/Java: // Comment\n- Python/Ruby: # Comment\n- HTML/XML: <!-- Comment -->\n- CSS: / Comment /\n- SQL: -- Comment\n\nFiltering Examples\n\nInclude Only JavaScript:\nyaml\ncombinedBlockOptions:\n  includeOnlyLanguage: javascript\n\n\nExclude Test Code:\nyaml\ncombinedBlockOptions:\n  excludePatterns: [\"test\", \"mock\", \"example\"]\n\n\nCustom Separators:\nyaml\ncombinedBlockOptions:\n  separator: \"\\n\\n/ ==================== /\\n\\n\"\n\n\n\ud83d\udca1 Best Practices\n\nUse Clear Titles\nGive your code blocks descriptive titles:\njavascript title:\"Database Connection\"\nconst db = await connect(config);\n\n\nOrganize by Purpose\nStructure your tutorial logically:\n1. Configuration\n2. Core functions\n3. Utilities\n4. Main execution\n\nLanguage Consistency\nWhen combining code:\n- Keep the same language throughout\n- Or use includeOnlyLanguage to filter\n- Set appropriate combinedBlockLanguage\n\n\ud83c\udfaf Use Cases\n\nComplete Applications\nBuild tutorials that result in a working app:\n- Show pieces step-by-step\n- Explain each section\n- Provide complete code at end\n\nConfiguration Files\nCombine multiple config snippets:\n- Environment variables\n- Database settings  \n- API configurations\n- Complete config file at end\n\nLearning Paths\nProgressive examples that build:\n- Basic concepts first\n- Advanced features next\n- Full implementation at end\n\n\ud83d\udd0d Visual Indicators\n\nThe combined code block has:\n- Distinctive Border: Dashed line separator\n- Special Styling: Stands out from regular blocks\n- Clear Title: Shows number of blocks combined\n- Full Features: Copy button, syntax highlighting, line numbers\n\n\u26a1 Workflow Tips\n\n1. Plan Your Structure: Organize code blocks logically\n2. Use Exclusions: Filter out example/test code\n3. Test the Output: Ensure combined code works\n4. Document Dependencies: Note requirements in text\n\n\ud83d\udd27 Troubleshooting\n\nNot Seeing Combined Block?\n- Check combineCodeBlocks: true in frontmatter\n- Ensure you have code blocks in the note\n- Verify no syntax errors in YAML\n\nWrong Blocks Included?\n- Check your filter settings\n- Use excludePatterns for unwanted blocks\n- Verify language specifications\n\n---\n\nNote: This very page has combined code blocks enabled! Check the bottom to see all the YAML configurations combined into one block. yaml Basic Setup ---\ntitle: My Tutorial\ncombineCodeBlocks: true\ncombinedBlockLanguage: javascript\n--- yaml Advanced Configuration ---\ntitle: React Tutorial\ncombineCodeBlocks: true\ncombinedBlockLanguage: javascript\ncombinedBlockTitle: \"Complete React App\"\ncombinedBlockOptions:\n  includeBlockTitles: true      # Add section comments\n  includeOnlyLanguage: javascript  # Only JavaScript blocks\n  skipEmptyBlocks: true         # Ignore empty blocks\n  separator: \"\\n// ---\\n\"       # Between sections\n  excludePatterns: [\"test\", \"example\"]  # Skip these\n--- yaml API Documentation Config ---\ncombineCodeBlocks: true\ncombinedBlockLanguage: python\ncombinedBlockTitle: \"Complete API Client\"\ncombinedBlockOptions:\n  includeOnlyLanguage: python\n  excludePatterns: [\"output\", \"response\"]\n--- combinedBlockOptions:\n  includeOnlyLanguage: javascript combinedBlockOptions:\n  excludePatterns: [\"test\", \"mock\", \"example\"] combinedBlockOptions:\n  separator: \"\\n\\n/* ==================== */\\n\\n\" javascript Database Connection const db = await connect(config);",
      "code_blocks_count": 7
    },
    {
      "path": "/notes/tutorials/features/images-media.md",
      "context": "tutorials",
      "metadata": {
        "title": "Image Usage Guide",
        "tags": [
          "documentation",
          "guide",
          "images"
        ],
        "created": "2025-01-06",
        "author": "Wiki Admin",
        "description": "How to add and use images in your notes",
        "updated": null,
        "category": null,
        "status": null
      },
      "content_preview": "This guide demonstrates how to add images to your notes using various methods and styling options.\n\n\n\n\nThe simplest way to add an image is using standard Markdown syntax:\n\nmarkdown\n!Alt text\n\n\nExample...",
      "searchable_content": "\nImage Usage Guide\n\nThis guide demonstrates how to add images to your notes using various methods and styling options.\n\nBasic Image Usage\n\nStandard Markdown Syntax\nThe simplest way to add an image is using standard Markdown syntax:\n\nmarkdown\n!Alt text\n\n\nExample:\nmarkdown\n!A beautiful sunset over the mountains\n\n\nHTML Image Syntax\nFor more control, use HTML img tags:\n\nhtml\n<img src=\"/images/example.jpg\" alt=\"Detailed description\" title=\"Hover tooltip text\">\n\n\nWith Click-to-Enlarge\nhtml\n<a href=\"/images/full-size/diagram.png\" target=\"blank\">\n  <img src=\"/images/thumbnails/diagram.png\" alt=\"System architecture diagram\">\n</a>\n\n\nImage Storage Organization\n\nRecommended Directory Structure\n\n/images/\n\u251c\u2500\u2500 notes/              # General note images\n\u251c\u2500\u2500 tutorials/          # Tutorial screenshots\n\u251c\u2500\u2500 reference/          # Charts, diagrams, references\n\u251c\u2500\u2500 projects/           # Project-specific images\n\u251c\u2500\u2500 screenshots/        # UI screenshots\n\u251c\u2500\u2500 diagrams/           # Technical diagrams\n\u251c\u2500\u2500 icons/             # Small icons and symbols\n\u251c\u2500\u2500 banners/           # Header/banner images\n\u251c\u2500\u2500 thumbnails/        # Smaller preview versions\n\u2514\u2500\u2500 originals/         # Full-resolution source images\n\n\nFile Naming Conventions\n- Use descriptive names: user-login-flow.png instead of img1.png\n- Include dimensions for variants: logo-256x256.png, logo-128x128.png\n- Use consistent format: project-namescreenshot2024-01-15.png\n\nImage Sizing and Alignment\n\nSize Control with Keywords\nUse size keywords in your alt text for automatic sizing:\n\nmarkdown\n!tiny: Small icon          # Max width: 100px\n!small: Medium image             # Max width: 300px  \n!medium: Standard image          # Max width: 600px\n!large: Full width image         # Max width: 900px\n!full: Container width           # 100% width\n!xlarge: Extra large             # Max width: 1200px\n\n\nAlignment Options\nControl image positioning with alignment keywords:\n\nmarkdown\n!left: Float left with text wrap\n!right: Float right with text wrap\n!center: Centered block image\n!inline: Inline with text\n\n\nCombining Size and Alignment\nmarkdown\n!left small: Small left-aligned image\n!right medium: Medium right-aligned image\n!center large: Large centered image\n\n\nCustom CSS Classes (HTML Method)\nhtml\n<img src=\"/images/example.jpg\" \n     alt=\"Description\" \n     class=\"img-responsive img-rounded img-shadow\"\n     style=\"max-width: 450px;\">\n\n\nAdvanced Image Layouts\n\nImages with Captions\nMultiple caption approaches:\n\nMethod 1: HTML Figure Element\nhtml\n<figure>\n  <img src=\"/images/architecture.png\" alt=\"System architecture overview\">\n  <figcaption>\n    <strong>Figure 1:</strong> High-level system architecture showing \n    microservices, databases, and external integrations.\n  </figcaption>\n</figure>\n\n\nMethod 2: Markdown with HTML Caption\nmarkdown\n!Database schema diagram\nFigure 2: Database relationship diagram showing all tables and foreign keys\n\n\nMethod 3: Enhanced Figure with Styling\nhtml\n<figure class=\"image-figure\">\n  <img src=\"/images/user-flow.png\" \n       alt=\"User registration and onboarding flow\" \n       title=\"Click to view full size\">\n  <figcaption>\n    <span class=\"figure-label\">User Flow Diagram</span><br>\n    Complete user journey from registration through first login, \n    including email verification and profile setup steps.\n  </figcaption>\n</figure>\n\n\nSide-by-Side Image Comparisons\nhtml\n<div class=\"image-comparison\">\n  <div class=\"comparison-item\">\n    <img src=\"/images/before.png\" alt=\"Before optimization\">\n    <p><strong>Before:</strong> Page load time 3.2 seconds</p>\n  </div>\n  <div class=\"comparison-item\">\n    <img src=\"/images/after.png\" alt=\"After optimization\">\n    <p><strong>After:</strong> Page load time 0.8 seconds</p>\n  </div>\n</div>\n\n\nImage Gallery Layout\nhtml\n<div class=\"image-gallery\">\n  <div class=\"gallery-item\">\n    <img src=\"/images/gallery/screenshot-1.png\" alt=\"Login screen\">\n    <span class=\"gallery-caption\">Login Interface</span>\n  </div>\n  <div class=\"gallery-item\">\n    <img src=\"/images/gallery/screenshot-2.png\" alt=\"Dashboard view\">\n    <span class=\"gallery-caption\">Main Dashboard</span>\n  </div>\n  <div class=\"gallery-item\">\n    <img src=\"/images/gallery/screenshot-3.png\" alt=\"Settings panel\">\n    <span class=\"gallery-caption\">Settings Panel</span>\n  </div>\n</div>\n\n\nImage Formats and Use Cases\n\nJPEG - Best for Photographs\nmarkdown\n!Mountain landscape photo\n\n- Use for: Photos, complex images with many colors\n- Compression: Lossy, smaller file sizes\n- Transparency: Not supported\n\nPNG - Best for Screenshots and Graphics\nmarkdown\n!User interface screenshot\n\n- Use for: Screenshots, logos, images with transparency\n- Compression: Lossless, larger file sizes\n- Transparency: Supported\n\nSVG - Best for Logos and Icons\nmarkdown\n!Company logo\n\n- Use for: Logos, icons, simple graphics\n- Scalability: Vector-based, infinite scaling\n- File size: Very small for simple graphics\n\nWebP - Modern Format\nhtml\n<picture>\n  <source srcset=\"/images/hero.webp\" type=\"image/webp\">\n  <img src=\"/images/hero.jpg\" alt=\"Hero image with fallback\">\n</picture>\n\n\nGIF - Animated Images\nmarkdown\n!Loading animation\n\n\nResponsive Image Techniques\n\nDifferent Sizes for Different Screens\nhtml\n<picture>\n  <source media=\"(max-width: 480px)\" srcset=\"/images/mobile/banner-480w.jpg\">\n  <source media=\"(max-width: 768px)\" srcset=\"/images/tablet/banner-768w.jpg\">\n  <source media=\"(max-width: 1200px)\" srcset=\"/images/desktop/banner-1200w.jpg\">\n  <img src=\"/images/desktop/banner-1200w.jpg\" alt=\"Responsive banner image\">\n</picture>\n\n\nHigh-DPI Display Support\nhtml\n<img src=\"/images/logo.png\" \n     srcset=\"/images/logo.png 1x, /images/logo@2x.png 2x\" \n     alt=\"Company logo\">\n\n\nLazy Loading for Performance\nhtml\n<img src=\"/images/placeholder.jpg\" \n     data-src=\"/images/large-image.jpg\" \n     alt=\"Large image with lazy loading\"\n     loading=\"lazy\">\n\n\nExternal vs Local Images\n\nLocal Images (Recommended)\nmarkdown\n<!-- Relative path from project root -->\n!Local screenshot\n\n<!-- Absolute path (if needed) -->\n!Local diagram\n\n\nExternal Images\nmarkdown\n<!-- Direct external URL -->\n!External image\n\n<!-- External with fallback -->\n!Profile photo\n\n\nCDN Images with Local Fallback\nhtml\n<img src=\"https://cdn.example.com/images/banner.jpg\" \n     alt=\"Banner image\" \n     onerror=\"this.src='/images/fallback/banner.jpg'\">\n\n\nAccessibility and SEO Optimization\n\nComprehensive Alt Text\nmarkdown\n<!-- Poor alt text -->\n!Image\n\n<!-- Good alt text -->\n!Bar chart showing 40% increase in user engagement over 6 months\n\n<!-- Context-specific alt text -->\n!Error: Form validation showing required email field highlighted in red\n\n\nTitle Attributes for Additional Context\nhtml\n<img src=\"/images/complex-diagram.png\" \n     alt=\"Database relationship diagram\" \n     title=\"Click to view full-size version with zoom capability\">\n\n\nARIA Labels for Enhanced Accessibility\nhtml\n<img src=\"/images/status-icon.png\" \n     alt=\"Success status\" \n     aria-label=\"Operation completed successfully\"\n     role=\"img\">\n\n\nDecorative Images\nhtml\n<!-- For purely decorative images -->\n<img src=\"/images/decorative-border.png\" alt=\"\" role=\"presentation\">\n\n\nImage Optimization Examples\n\nFile Size Optimization\nmarkdown\n<!-- Original: 2.5MB -->\n!Original photo\n\n<!-- Optimized: 250KB -->\n!Optimized photo\n\n<!-- Thumbnail: 15KB -->\n!Thumbnail preview\n\n\nProgressive Loading Strategy\nhtml\n<!-- Thumbnail loads first -->\n<img src=\"/images/thumbnails/preview.jpg\" \n     alt=\"Preview image\"\n     style=\"filter: blur(5px); transition: filter 0.3s;\">\n\n<!-- Full image loads in background -->\n<img src=\"/images/full/high-res.jpg\" \n     alt=\"Full resolution image\"\n     onload=\"this.previousElementSibling.style.filter='none';\"\n     style=\"position: absolute; opacity: 0; transition: opacity 0.3s;\">\n\n\nAdvanced Image Features\n\nImage Maps (Clickable Areas)\nhtml\n<img src=\"/images/office-layout.png\" alt=\"Office floor plan\" usemap=\"#office-map\">\n<map name=\"office-map\">\n  <area shape=\"rect\" coords=\"10,10,100,50\" href=\"#meeting-room\" alt=\"Conference Room A\">\n  <area shape=\"circle\" coords=\"150,75,25\" href=\"#kitchen\" alt=\"Kitchen Area\">\n  <area shape=\"poly\" coords=\"200,10,250,50,200,90,150,50\" href=\"#workspace\" alt=\"Open Workspace\">\n</map>\n\n\nImage Overlays and Annotations\nhtml\n<div class=\"image-container\">\n  <img src=\"/images/screenshot.png\" alt=\"Application interface\">\n  <div class=\"image-overlay\">\n    <div class=\"annotation\" style=\"top: 20%; left: 30%;\">\n      <span class=\"annotation-marker\">1</span>\n      <div class=\"annotation-tooltip\">Navigation menu</div>\n    </div>\n    <div class=\"annotation\" style=\"top: 50%; left: 70%;\">\n      <span class=\"annotation-marker\">2</span>\n      <div class=\"annotation-tooltip\">Main content area</div>\n    </div>\n  </div>\n</div>\n\n\nImage Carousels/Slideshows\nhtml\n<div class=\"image-slideshow\">\n  <div class=\"slide active\">\n    <img src=\"/images/slides/slide-1.jpg\" alt=\"Feature overview\">\n    <p class=\"slide-caption\">Main features and capabilities</p>\n  </div>\n  <div class=\"slide\">\n    <img src=\"/images/slides/slide-2.jpg\" alt=\"Implementation details\">\n    <p class=\"slide-caption\">Technical implementation</p>\n  </div>\n  <div class=\"slide\">\n    <img src=\"/images/slides/slide-3.jpg\" alt=\"Results and metrics\">\n    <p class=\"slide-caption\">Performance metrics and results</p>\n  </div>\n</div>\n\n\nExternal Images and Hosting\n\nGitHub Images\nmarkdown\n!README diagram\n\n\nGitLab Images  \nmarkdown\n!Architecture diagram\n\n\nImage Hosting Services\nmarkdown\n<!-- Imgur -->\n!Hosted image\n\n<!-- AWS S3 -->\n!S3 hosted\n\n<!-- Cloudinary -->\n!Cloudinary optimized\n\n\nBest Practices\n\n1. Use descriptive alt text - This helps with accessibility and SEO\n2. Optimize image sizes - Large images slow down page loading\n3. Use appropriate formats:\n   - JPEG for photographs\n   - PNG for screenshots and images with transparency\n   - SVG for logos and diagrams\n4. Organize images - Keep your images directory structure clean and logical\n\nImage Styling\n\nAll images automatically receive:\n- Rounded corners for a modern look\n- Subtle shadow on hover\n- Smooth transitions\n- Responsive sizing (never exceed container width)\n\nLive Example\n\nHere's a demonstration using a placeholder image:\n\n!Demo placeholder image\n\nExample Gallery\n\nHere's how you might create an image gallery using a combination of techniques:\n\nmarkdown\nProject Screenshots\n\n!small left: Login screen\nThe login screen features a clean, minimalist design with email and password fields.\n\n!small right: Dashboard view\nThe dashboard provides an overview of all key metrics and recent activity.\n\n<figure>\n  <img src=\"/images/projects/analytics.png\" alt=\"Analytics page showing graphs\">\n  <figcaption>The analytics page offers detailed insights with interactive charts and graphs.</figcaption>\n</figure>\n\n\nAlignment Examples\n\nLeft-aligned Image\n!left small: Sample image aligned to the left\nLorem ipsum dolor sit amet, consectetur adipiscing elit. This text wraps around the left-aligned image. The image is floated to the left with appropriate margins to create a nice visual flow. You can continue adding more text here and it will wrap around the image naturally.\n\nRight-aligned Image\n!right small: Sample image aligned to the right\nLorem ipsum dolor sit amet, consectetur adipiscing elit. This text wraps around the right-aligned image. The image is floated to the right with appropriate margins. This creates an interesting layout where text flows on the left side of the image.\n\nCentered Image with Caption\n<figure>\n  <img src=\"/images/notes/demo-placeholder.svg\" alt=\"medium: Centered demonstration image\">\n  <figcaption>This is a centered image with a caption. The caption provides additional context about the image content.</figcaption>\n</figure>\n\nTroubleshooting\n\nImage not showing?\n- Check the file path is correct\n- Ensure the image file exists in the /images/ directory\n- Verify the file extension matches (case-sensitive on some systems)\n\nImage too large?\n- Use the size keywords (small, medium, large)\n- Consider optimizing the image file itself\n- Use image compression tools before uploading\n\nText not wrapping properly?\n- Ensure you're using the correct alignment syntax\n- Add clear fixes after floated images if needed ![Alt text](path/to/image.jpg) ![A beautiful sunset over the mountains](/images/notes/sunset.jpg) <img src=\"/images/example.jpg\" alt=\"Detailed description\" title=\"Hover tooltip text\"> <a href=\"/images/full-size/diagram.png\" target=\"_blank\">\n  <img src=\"/images/thumbnails/diagram.png\" alt=\"System architecture diagram\">\n</a> /images/\n\u251c\u2500\u2500 notes/              # General note images\n\u251c\u2500\u2500 tutorials/          # Tutorial screenshots\n\u251c\u2500\u2500 reference/          # Charts, diagrams, references\n\u251c\u2500\u2500 projects/           # Project-specific images\n\u251c\u2500\u2500 screenshots/        # UI screenshots\n\u251c\u2500\u2500 diagrams/           # Technical diagrams\n\u251c\u2500\u2500 icons/             # Small icons and symbols\n\u251c\u2500\u2500 banners/           # Header/banner images\n\u251c\u2500\u2500 thumbnails/        # Smaller preview versions\n\u2514\u2500\u2500 originals/         # Full-resolution source images ![tiny: Small icon](/images/icons/settings.png)          # Max width: 100px\n![small: Medium image](/images/example.jpg)             # Max width: 300px  \n![medium: Standard image](/images/example.jpg)          # Max width: 600px\n![large: Full width image](/images/example.jpg)         # Max width: 900px\n![full: Container width](/images/example.jpg)           # 100% width\n![xlarge: Extra large](/images/example.jpg)             # Max width: 1200px ![left: Float left with text wrap](/images/example.jpg)\n![right: Float right with text wrap](/images/example.jpg)\n![center: Centered block image](/images/example.jpg)\n![inline: Inline with text](/images/small-icon.png) ![left small: Small left-aligned image](/images/thumb.jpg)\n![right medium: Medium right-aligned image](/images/screenshot.png)\n![center large: Large centered image](/images/banner.jpg) <img src=\"/images/example.jpg\" \n     alt=\"Description\" \n     class=\"img-responsive img-rounded img-shadow\"\n     style=\"max-width: 450px;\"> <figure>\n  <img src=\"/images/architecture.png\" alt=\"System architecture overview\">\n  <figcaption>\n    <strong>Figure 1:</strong> High-level system architecture showing \n    microservices, databases, and external integrations.\n  </figcaption>\n</figure> ![Database schema diagram](/images/database-schema.png)\n*Figure 2: Database relationship diagram showing all tables and foreign keys* <figure class=\"image-figure\">\n  <img src=\"/images/user-flow.png\" \n       alt=\"User registration and onboarding flow\" \n       title=\"Click to view full size\">\n  <figcaption>\n    <span class=\"figure-label\">User Flow Diagram</span><br>\n    Complete user journey from registration through first login, \n    including email verification and profile setup steps.\n  </figcaption>\n</figure> <div class=\"image-comparison\">\n  <div class=\"comparison-item\">\n    <img src=\"/images/before.png\" alt=\"Before optimization\">\n    <p><strong>Before:</strong> Page load time 3.2 seconds</p>\n  </div>\n  <div class=\"comparison-item\">\n    <img src=\"/images/after.png\" alt=\"After optimization\">\n    <p><strong>After:</strong> Page load time 0.8 seconds</p>\n  </div>\n</div> <div class=\"image-gallery\">\n  <div class=\"gallery-item\">\n    <img src=\"/images/gallery/screenshot-1.png\" alt=\"Login screen\">\n    <span class=\"gallery-caption\">Login Interface</span>\n  </div>\n  <div class=\"gallery-item\">\n    <img src=\"/images/gallery/screenshot-2.png\" alt=\"Dashboard view\">\n    <span class=\"gallery-caption\">Main Dashboard</span>\n  </div>\n  <div class=\"gallery-item\">\n    <img src=\"/images/gallery/screenshot-3.png\" alt=\"Settings panel\">\n    <span class=\"gallery-caption\">Settings Panel</span>\n  </div>\n</div> ![Mountain landscape photo](/images/landscapes/mountain-sunset.jpg) ![User interface screenshot](/images/screenshots/dashboard.png) ![Company logo](/images/logos/company-logo.svg) <picture>\n  <source srcset=\"/images/hero.webp\" type=\"image/webp\">\n  <img src=\"/images/hero.jpg\" alt=\"Hero image with fallback\">\n</picture> ![Loading animation](/images/animations/loading-spinner.gif) <picture>\n  <source media=\"(max-width: 480px)\" srcset=\"/images/mobile/banner-480w.jpg\">\n  <source media=\"(max-width: 768px)\" srcset=\"/images/tablet/banner-768w.jpg\">\n  <source media=\"(max-width: 1200px)\" srcset=\"/images/desktop/banner-1200w.jpg\">\n  <img src=\"/images/desktop/banner-1200w.jpg\" alt=\"Responsive banner image\">\n</picture> <img src=\"/images/logo.png\" \n     srcset=\"/images/logo.png 1x, /images/logo@2x.png 2x\" \n     alt=\"Company logo\"> <img src=\"/images/placeholder.jpg\" \n     data-src=\"/images/large-image.jpg\" \n     alt=\"Large image with lazy loading\"\n     loading=\"lazy\"> <!-- Relative path from project root -->\n![Local screenshot](/images/screenshots/interface.png)\n\n<!-- Absolute path (if needed) -->\n![Local diagram](../images/diagrams/flow-chart.svg) <!-- Direct external URL -->\n![External image](https://example.com/images/photo.jpg)\n\n<!-- External with fallback -->\n![Profile photo](https://avatars.githubusercontent.com/user123?s=200) <img src=\"https://cdn.example.com/images/banner.jpg\" \n     alt=\"Banner image\" \n     onerror=\"this.src='/images/fallback/banner.jpg'\"> <!-- Poor alt text -->\n![Image](/images/chart.png)\n\n<!-- Good alt text -->\n![Bar chart showing 40% increase in user engagement over 6 months](/images/engagement-chart.png)\n\n<!-- Context-specific alt text -->\n![Error: Form validation showing required email field highlighted in red](/images/form-error.png) <img src=\"/images/complex-diagram.png\" \n     alt=\"Database relationship diagram\" \n     title=\"Click to view full-size version with zoom capability\"> <img src=\"/images/status-icon.png\" \n     alt=\"Success status\" \n     aria-label=\"Operation completed successfully\"\n     role=\"img\"> <!-- For purely decorative images -->\n<img src=\"/images/decorative-border.png\" alt=\"\" role=\"presentation\"> <!-- Original: 2.5MB -->\n![Original photo](/images/originals/vacation-photo.jpg)\n\n<!-- Optimized: 250KB -->\n![Optimized photo](/images/optimized/vacation-photo-compressed.jpg)\n\n<!-- Thumbnail: 15KB -->\n![Thumbnail preview](/images/thumbnails/vacation-photo-thumb.jpg) <!-- Thumbnail loads first -->\n<img src=\"/images/thumbnails/preview.jpg\" \n     alt=\"Preview image\"\n     style=\"filter: blur(5px); transition: filter 0.3s;\">\n\n<!-- Full image loads in background -->\n<img src=\"/images/full/high-res.jpg\" \n     alt=\"Full resolution image\"\n     onload=\"this.previousElementSibling.style.filter='none';\"\n     style=\"position: absolute; opacity: 0; transition: opacity 0.3s;\"> <img src=\"/images/office-layout.png\" alt=\"Office floor plan\" usemap=\"#office-map\">\n<map name=\"office-map\">\n  <area shape=\"rect\" coords=\"10,10,100,50\" href=\"#meeting-room\" alt=\"Conference Room A\">\n  <area shape=\"circle\" coords=\"150,75,25\" href=\"#kitchen\" alt=\"Kitchen Area\">\n  <area shape=\"poly\" coords=\"200,10,250,50,200,90,150,50\" href=\"#workspace\" alt=\"Open Workspace\">\n</map> <div class=\"image-container\">\n  <img src=\"/images/screenshot.png\" alt=\"Application interface\">\n  <div class=\"image-overlay\">\n    <div class=\"annotation\" style=\"top: 20%; left: 30%;\">\n      <span class=\"annotation-marker\">1</span>\n      <div class=\"annotation-tooltip\">Navigation menu</div>\n    </div>\n    <div class=\"annotation\" style=\"top: 50%; left: 70%;\">\n      <span class=\"annotation-marker\">2</span>\n      <div class=\"annotation-tooltip\">Main content area</div>\n    </div>\n  </div>\n</div> <div class=\"image-slideshow\">\n  <div class=\"slide active\">\n    <img src=\"/images/slides/slide-1.jpg\" alt=\"Feature overview\">\n    <p class=\"slide-caption\">Main features and capabilities</p>\n  </div>\n  <div class=\"slide\">\n    <img src=\"/images/slides/slide-2.jpg\" alt=\"Implementation details\">\n    <p class=\"slide-caption\">Technical implementation</p>\n  </div>\n  <div class=\"slide\">\n    <img src=\"/images/slides/slide-3.jpg\" alt=\"Results and metrics\">\n    <p class=\"slide-caption\">Performance metrics and results</p>\n  </div>\n</div> ![README diagram](https://raw.githubusercontent.com/username/repo/main/docs/diagram.png) ![Architecture diagram](https://gitlab.com/username/project/-/raw/main/docs/architecture.png) <!-- Imgur -->\n![Hosted image](https://i.imgur.com/AbCdEfG.png)\n\n<!-- AWS S3 -->\n![S3 hosted](https://my-bucket.s3.amazonaws.com/images/photo.jpg)\n\n<!-- Cloudinary -->\n![Cloudinary optimized](https://res.cloudinary.com/account/image/upload/v1234/sample.jpg) ### Project Screenshots\n\n![small left: Login screen](/images/projects/login.png)\nThe login screen features a clean, minimalist design with email and password fields.\n\n![small right: Dashboard view](/images/projects/dashboard.png)\nThe dashboard provides an overview of all key metrics and recent activity.\n\n<figure>\n  <img src=\"/images/projects/analytics.png\" alt=\"Analytics page showing graphs\">\n  <figcaption>The analytics page offers detailed insights with interactive charts and graphs.</figcaption>\n</figure>",
      "code_blocks_count": 38
    },
    {
      "path": "/notes/tutorials/features/themes.md",
      "context": "tutorials",
      "metadata": {
        "title": "Theme Showcase & Test",
        "tags": [
          "themes",
          "demo",
          "showcase",
          "styling"
        ],
        "created": "2025-01-06",
        "author": "Wiki Admin",
        "description": "Comprehensive showcase of all 50 professional themes with various code examples",
        "updated": "2025-06-13",
        "category": null,
        "status": null
      },
      "content_preview": "This page showcases all 50 professional themes available in the Notes Wiki system. Each theme is carefully crafted to provide excellent readability and beautiful syntax highlighting.\n\n\n\n1. Open Theme ...",
      "searchable_content": "\nTheme Showcase & Test\n\nThis page showcases all 50 professional themes available in the Notes Wiki system. Each theme is carefully crafted to provide excellent readability and beautiful syntax highlighting.\n\nHow to Test Themes\n\n1. Open Theme Picker - Click the theme selector (\ud83c\udfa8) in the header\n2. Preview Themes - Hover over any theme card to see a live preview\n3. Apply Theme - Click a theme card to apply it permanently\n4. Auto Detection - Enable auto light/dark theme detection in settings\n\nComplete Theme Collection (50 Themes)\n\n\u2728 Classic Themes\n- Light - Clean, minimal light theme for daytime reading\n- Dark - Comfortable dark theme for extended coding sessions\n\n\ud83c\udfaf Editor-Inspired Themes\n- VSCode Dark Plus - The beloved VS Code default dark theme\n- One Dark Pro - Atom's iconic dark theme with enhanced colors\n- Monokai - The classic Sublime Text theme with vibrant syntax colors\n- Palenight - Material Theme's elegant purple-tinted dark theme\n- Material Ocean - Deep blue Material Design theme\n- Material Darker - Darker variant of Material theme\n- Material Palenight - Purple-hued Material theme variant\n\n\ud83c\udf38 Catppuccin Collection\n- Catppuccin Mocha - Warm, cozy dark theme with soft pastels\n- Catppuccin Latte - Light, cream-colored theme for bright environments\n\n\ud83c\udf39 Ros\u00e9 Pine Collection  \n- Ros\u00e9 Pine - Soho vibes with natural pine and faux fur tones\n- Ros\u00e9 Pine Dawn - Light variant with warm morning colors\n\n\ud83d\udc19 GitHub Themes\n- GitHub Light - GitHub's clean, professional light theme\n- GitHub Dark - GitHub's modern dark theme\n\n\ud83c\udf0a Solarized Collection\n- Solarized Light - Precision colors for machines and people (light)\n- Solarized Dark - The dark variant of the scientifically designed palette\n\n\ud83c\udfd4\ufe0f Nordic Themes\n- Nord - Arctic, north-bluish color palette inspired by the beauty of the arctic\n- Nordic - Scandinavian-inspired minimal theme\n\n\ud83c\udf42 Gruvbox Collection\n- Gruvbox Dark - Retro groove with warm, earthy dark colors\n- Gruvbox Light - Light variant with vintage paper tones\n\n\ud83c\udf03 Tokyo Night Collection\n- Tokyo Night - Inspired by the neon lights of Tokyo at night\n\n\ud83c\udfa8 Ayu Collection\n- Ayu Dark - Modern dark theme with carefully balanced colors\n- Ayu Mirage - Perfect balance between light and dark with muted colors\n- Ayu Light - Clean, bright theme with excellent contrast\n\n\ud83c\udf32 Nature-Inspired Themes\n- Everforest Dark - Forest-inspired theme with natural green tones\n- Kanagawa - Japanese aesthetic inspired by \"The Great Wave\"\n- Zenburn - Low contrast theme designed to reduce eye strain\n\n\u26a1 High-Tech Themes\n- Matrix - Enter the digital rain with green-on-black cyberpunk vibes\n- Cyberpunk - Neon-soaked future aesthetic with electric colors\n- 2077 - Inspired by futuristic cityscapes and neon lights\n- Hackthebox - Hacker terminal aesthetic with green accent colors\n\n\ud83c\udf08 Colorful & Unique Themes\n- Vaporwave - 80s retro-futuristic vibes with pink and purple gradients\n- Hotdog Stand - Windows 3.1 classic with bold red and yellow contrast\n- Shades of Purple - Rich purple theme with excellent syntax highlighting\n- Witch Hazel - Mystical purple theme with magical color combinations\n\n\ud83c\udf19 Tomorrow Collection\n- Tomorrow Night - Part of the popular Tomorrow theme family\n\n\ud83d\udc99 Blue-Tinted Themes\n- Cobalt2 - Wes Bos's popular blue-based dark theme\n- Bluloco Dark - Blue-focused dark theme with vibrant syntax colors\n- Bluloco Light - Light variant with blue accents\n- Spacegray - Space-inspired gray-blue theme\n\n\u2744\ufe0f Winter Themes\n- Winter Is Coming Dark - Dark theme inspired by winter landscapes\n- Winter Is Coming Light - Light winter theme with cool tones\n\n\ud83c\udfae Gaming & Entertainment\n- Lucario - Pok\u00e9mon-inspired blue and steel theme\n- Oxocarbon - IBM's modern design language theme\n- Noctis - Night-time inspired dark theme\n- Thinkultra - Minimalist theme with clean typography\n\n\ud83c\udfad Specialized Themes  \n- Atom One Light - Atom's default light theme\n- Protonmail - Inspired by ProtonMail's clean interface\n\nHow to Test\n\n1. Open the theme picker (sun/moon icon in header)\n2. Hover over each theme to preview it\n3. Click to apply the theme permanently\n4. Check that all code blocks below render correctly\n\nJavaScript Example\n\njavascript title:\"JavaScript Class Example\"\n// ES6 Class with various syntax elements\nclass ThemeManager {\n    constructor(options = {}) {\n        this.themes = options.themes || [];\n        this.currentTheme = options.defaultTheme || 'light';\n        this.callbacks = new Map();\n        this.initialized = false;\n    }\n\n    async initialize() {\n        try {\n            // Load saved theme from localStorage\n            const saved = localStorage.getItem('theme');\n            if (saved && this.themes.includes(saved)) {\n                this.currentTheme = saved;\n            }\n            \n            // Apply the theme\n            await this.applyTheme(this.currentTheme);\n            this.initialized = true;\n            \n            return { success: true, theme: this.currentTheme };\n        } catch (error) {\n            console.error('Failed to initialize theme:', error);\n            return { success: false, error: error.message };\n        }\n    }\n\n    applyTheme(themeName) {\n        // Validate theme exists\n        if (!this.themes.includes(themeName)) {\n            throw new Error(Theme \"${themeName}\" not found);\n        }\n\n        // Apply theme to DOM\n        document.documentElement.setAttribute('data-theme', themeName);\n        \n        // Save preference\n        localStorage.setItem('theme', themeName);\n        \n        // Trigger callbacks\n        this.callbacks.forEach(callback => callback(themeName));\n    }\n\n    // Arrow function property\n    onChange = (callback) => {\n        const id = Date.now();\n        this.callbacks.set(id, callback);\n        return () => this.callbacks.delete(id);\n    }\n}\n\n// Usage\nconst manager = new ThemeManager({\n    themes: ['light', 'dark', 'monokai'],\n    defaultTheme: 'dark'\n});\n\nmanager.initialize().then(result => {\n    console.log('Theme initialized:', result);\n});\n\n\nPython Example\n\npython title:\"Python Data Processing\"\nimport pandas as pd\nimport numpy as np\nfrom datetime import datetime, timedelta\nfrom typing import List, Dict, Optional, Union\nimport asyncio\n\nclass DataProcessor:\n    \"\"\"Process and analyze time series data with various transformations.\"\"\"\n    \n    def init(self, datapath: str, cachesize: int = 1000):\n        self.datapath = datapath\n        self.cachesize = cachesize\n        self.cache: Dict[str, pd.DataFrame] = {}\n        self.metadata = {\n            'created': datetime.now(),\n            'version': '1.0.0',\n            'author': 'System'\n        }\n    \n    @property\n    def iscached(self) -> bool:\n        \"\"\"Check if data is currently cached.\"\"\"\n        return len(self.cache) > 0\n    \n    async def loaddataasync(self, \n                            filepath: str, \n                            columns: Optional[List[str]] = None) -> pd.DataFrame:\n        \"\"\"Asynchronously load data from CSV file.\"\"\"\n        try:\n            # Simulate async operation\n            await asyncio.sleep(0.1)\n            \n            df = pd.readcsv(filepath, usecols=columns)\n            \n            # Cache the result\n            if len(self.cache) < self.cachesize:\n                self.cache[filepath] = df\n            \n            return df\n            \n        except FileNotFoundError as e:\n            print(f\"Error: File {filepath} not found\")\n            raise e\n        except Exception as e:\n            print(f\"Unexpected error: {str(e)}\")\n            raise\n    \n    def processtimeseries(self, \n                          df: pd.DataFrame, \n                          windowsize: int = 7,\n                          aggregation: str = 'mean') -> pd.DataFrame:\n        \"\"\"Apply rolling window calculations to time series data.\"\"\"\n        \n        # Validate inputs\n        if windowsize <= 0:\n            raise ValueError(\"Window size must be positive\")\n        \n        validaggregations = ['mean', 'sum', 'min', 'max', 'std']\n        if aggregation not in validaggregations:\n            raise ValueError(f\"Aggregation must be one of {validaggregations}\")\n        \n        # Apply rolling calculation\n        numericcols = df.selectdtypes(include=[np.number]).columns\n        \n        result = df.copy()\n        for col in numericcols:\n            if aggregation == 'mean':\n                result[f'{col}rolling{windowsize}d'] = df[col].rolling(windowsize).mean()\n            elif aggregation == 'sum':\n                result[f'{col}rolling{windowsize}d'] = df[col].rolling(windowsize).sum()\n            # ... etc\n        \n        return result\n    \n    @staticmethod\n    def generatesampledata(nrows: int = 1000) -> pd.DataFrame:\n        \"\"\"Generate sample time series data for testing.\"\"\"\n        dates = pd.daterange(\n            start='2024-01-01', \n            periods=nrows, \n            freq='D'\n        )\n        \n        data = {\n            'date': dates,\n            'value': np.random.randn(nrows).cumsum() + 100,\n            'volume': np.random.randint(1000, 10000, nrows),\n            'category': np.random.choice(['A', 'B', 'C'], nrows)\n        }\n        \n        return pd.DataFrame(data)\n\nExample usage\nif name == \"main\":\n    processor = DataProcessor(\"./data\")\n    \n    # Generate and process sample data\n    df = DataProcessor.generatesampledata(365)\n    processed = processor.processtimeseries(df, windowsize=30)\n    \n    print(f\"Data shape: {processed.shape}\")\n    print(f\"Columns: {list(processed.columns)}\")\n\n\nHTML/CSS Example\n\nhtml title:\"Responsive Card Component\"\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Theme Card Component</title>\n    <style>\n        / CSS Custom Properties for theming /\n        :root {\n            --card-bg: #ffffff;\n            --card-border: #e5e7eb;\n            --card-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n            --text-primary: #111827;\n            --text-secondary: #6b7280;\n            --accent-color: #3b82f6;\n        }\n\n        / Dark theme override /\n        [data-theme=\"dark\"] {\n            --card-bg: #1f2937;\n            --card-border: #374151;\n            --card-shadow: 0 4px 6px rgba(0, 0, 0, 0.3);\n            --text-primary: #f3f4f6;\n            --text-secondary: #9ca3af;\n            --accent-color: #60a5fa;\n        }\n\n        / Card component styles /\n        .card {\n            background-color: var(--card-bg);\n            border: 1px solid var(--card-border);\n            border-radius: 0.5rem;\n            box-shadow: var(--card-shadow);\n            padding: 1.5rem;\n            margin: 1rem;\n            transition: transform 0.2s ease, box-shadow 0.2s ease;\n        }\n\n        .card:hover {\n            transform: translateY(-2px);\n            box-shadow: 0 8px 12px rgba(0, 0, 0, 0.15);\n        }\n\n        .card-title {\n            color: var(--text-primary);\n            font-size: 1.25rem;\n            font-weight: 600;\n            margin: 0 0 0.5rem 0;\n        }\n\n        .card-description {\n            color: var(--text-secondary);\n            line-height: 1.5;\n            margin: 0 0 1rem 0;\n        }\n\n        .card-link {\n            color: var(--accent-color);\n            text-decoration: none;\n            font-weight: 500;\n            display: inline-flex;\n            align-items: center;\n            gap: 0.25rem;\n        }\n\n        .card-link:hover {\n            text-decoration: underline;\n        }\n\n        / Responsive grid /\n        .card-grid {\n            display: grid;\n            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n            gap: 1rem;\n            padding: 1rem;\n        }\n\n        @media (max-width: 768px) {\n            .card {\n                padding: 1rem;\n            }\n            \n            .card-grid {\n                grid-template-columns: 1fr;\n            }\n        }\n    </style>\n</head>\n<body>\n    <div class=\"card-grid\">\n        <article class=\"card\">\n            <h2 class=\"card-title\">Theme System</h2>\n            <p class=\"card-description\">\n                A comprehensive theming system with CSS custom properties \n                that supports multiple color schemes and automatic theme switching.\n            </p>\n            <a href=\"#\" class=\"card-link\">\n                Learn more\n                <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"currentColor\">\n                    <path d=\"M6.22 3.22a.75.75 0 011.06 0l4.25 4.25a.75.75 0 010 1.06l-4.25 4.25a.75.75 0 01-1.06-1.06L9.94 8 6.22 4.28a.75.75 0 010-1.06z\"/>\n                </svg>\n            </a>\n        </article>\n    </div>\n</body>\n</html>\n\n\nBash/Shell Example\n\nbash title:\"Deployment Script\"\n#!/bin/bash\nTheme deployment and build script\n\nset -euo pipefail\n\nColor output helpers\nRED='\\033[0;31m'\nGREEN='\\033[0;32m'\nYELLOW='\\033[1;33m'\nNC='\\033[0m' # No Color\n\nConfiguration\nTHEMESDIR=\"./themes\"\nBUILDDIR=\"./dist\"\nTHEMEFILES=(\n    \"light.css\"\n    \"dark.css\"\n    \"vscode-dark-plus.css\"\n    \"monokai.css\"\n    \"dracula.css\"\n    \"one-dark-pro.css\"\n    \"solarized-light.css\"\n    \"solarized-dark.css\"\n    \"github-light.css\"\n    \"github-dark.css\"\n    \"nord.css\"\n    \"gruvbox-dark.css\"\n    \"gruvbox-light.css\"\n    \"tokyo-night.css\"\n    \"palenight.css\"\n)\n\nFunction to print colored output\nlog() {\n    local level=$1\n    shift\n    case \"$level\" in\n        \"error\")\n            echo -e \"${RED}[ERROR]${NC} $\" >&2\n            ;;\n        \"success\")\n            echo -e \"${GREEN}[SUCCESS]${NC} $\"\n            ;;\n        \"warning\")\n            echo -e \"${YELLOW}[WARNING]${NC} $\"\n            ;;\n        )\n            echo \"[INFO] $\"\n            ;;\n    esac\n}\n\nValidate theme files exist\nvalidatethemes() {\n    log \"info\" \"Validating theme files...\"\n    \n    local missingthemes=()\n    \n    for theme in \"${THEMEFILES[@]}\"; do\n        if [[ ! -f \"$THEMESDIR/$theme\" ]]; then\n            missingthemes+=(\"$theme\")\n        fi\n    done\n    \n    if [[ ${#missingthemes[@]} -gt 0 ]]; then\n        log \"error\" \"Missing theme files:\"\n        printf '%s\\n' \"${missingthemes[@]}\"\n        return 1\n    fi\n    \n    log \"success\" \"All ${#THEMEFILES[@]} theme files found\"\n    return 0\n}\n\nMinify CSS files\nminifythemes() {\n    log \"info\" \"Minifying theme files...\"\n    \n    # Create build directory if it doesn't exist\n    mkdir -p \"$BUILDDIR/themes\"\n    \n    for theme in \"${THEMEFILES[@]}\"; do\n        local input=\"$THEMESDIR/$theme\"\n        local output=\"$BUILDDIR/themes/${theme%.css}.min.css\"\n        \n        # Simple CSS minification (remove comments and extra whitespace)\n        if command -v csso &> /dev/null; then\n            csso \"$input\" -o \"$output\"\n        else\n            # Fallback: basic minification with sed\n            sed -e 's/\\/\\[^]\\\\///g' \\\n                -e 's/\\s\\+/ /g' \\\n                -e 's/:\\s/:/g' \\\n                -e 's/;\\s/;/g' \\\n                -e 's/{\\s/{/g' \\\n                -e 's/}\\s/}/g' \\\n                -e 's/\\n//g' \\\n                \"$input\" > \"$output\"\n        fi\n        \n        log \"success\" \"Minified: ${theme%.css}.min.css\"\n    done\n}\n\nGenerate theme metadata\ngeneratemetadata() {\n    log \"info\" \"Generating theme metadata...\"\n    \n    cat > \"$BUILDDIR/themes/themes.json\" << EOF\n{\n    \"themes\": [\n        $(for i in \"${!THEMEFILES[@]}\"; do\n            theme=\"${THEMEFILES[$i]}\"\n            themeid=\"${theme%.css}\"\n            \n            # Add comma except for last item\n            if [[ $i -lt $((${#THEMEFILES[@]} - 1)) ]]; then\n                echo \"        \\\"$themeid\\\",\"\n            else\n                echo \"        \\\"$themeid\\\"\"\n            fi\n        done)\n    ],\n    \"count\": ${#THEMEFILES[@]},\n    \"generated\": \"$(date -u +\"%Y-%m-%dT%H:%M:%SZ\")\"\n}\nEOF\n    \n    log \"success\" \"Generated theme metadata\"\n}\n\nMain execution\nmain() {\n    log \"info\" \"Starting theme build process...\"\n    \n    # Validate themes\n    if ! validatethemes; then\n        log \"error\" \"Theme validation failed\"\n        exit 1\n    fi\n    \n    # Minify themes\n    minifythemes\n    \n    # Generate metadata\n    generatemetadata\n    \n    log \"success\" \"Theme build completed successfully!\"\n    log \"info\" \"Output directory: $BUILDDIR\"\n}\n\nRun main function\nmain \"$@\"\n\n\nJSON Configuration Example\n\njson title:\"Theme Configuration\"\n{\n    \"themes\": {\n        \"light\": {\n            \"id\": \"light\",\n            \"name\": \"Light\",\n            \"description\": \"Clean light theme for daytime use\",\n            \"type\": \"light\",\n            \"colors\": {\n                \"primary\": \"#3b82f6\",\n                \"secondary\": \"#10b981\",\n                \"background\": \"#ffffff\",\n                \"surface\": \"#f9fafb\",\n                \"text\": {\n                    \"primary\": \"#111827\",\n                    \"secondary\": \"#6b7280\",\n                    \"muted\": \"#9ca3af\"\n                },\n                \"syntax\": {\n                    \"keyword\": \"#2563eb\",\n                    \"string\": \"#059669\",\n                    \"number\": \"#dc2626\",\n                    \"function\": \"#7c3aed\",\n                    \"comment\": \"#6b7280\"\n                }\n            },\n            \"customizations\": {\n                \"scrollbar\": true,\n                \"selection\": true,\n                \"forms\": true\n            }\n        },\n        \"dracula\": {\n            \"id\": \"dracula\",\n            \"name\": \"Dracula\",\n            \"description\": \"Dark theme with vibrant colors\",\n            \"type\": \"dark\",\n            \"colors\": {\n                \"primary\": \"#bd93f9\",\n                \"secondary\": \"#50fa7b\",\n                \"background\": \"#282a36\",\n                \"surface\": \"#21222c\",\n                \"text\": {\n                    \"primary\": \"#f8f8f2\",\n                    \"secondary\": \"#6272a4\",\n                    \"muted\": \"#6272a4\"\n                },\n                \"syntax\": {\n                    \"keyword\": \"#ff79c6\",\n                    \"string\": \"#f1fa8c\",\n                    \"number\": \"#bd93f9\",\n                    \"function\": \"#50fa7b\",\n                    \"comment\": \"#6272a4\"\n                }\n            },\n            \"customizations\": {\n                \"scrollbar\": true,\n                \"selection\": true,\n                \"forms\": true\n            }\n        }\n    },\n    \"defaultTheme\": \"light\",\n    \"autoDetect\": true,\n    \"transitions\": {\n        \"enabled\": true,\n        \"duration\": \"250ms\",\n        \"easing\": \"ease-in-out\"\n    }\n}\n\n\nSQL Example\n\nsql title:\"Theme Usage Analytics\"\n-- Create tables for theme usage tracking\nCREATE TABLE IF NOT EXISTS themeusage (\n    id SERIAL PRIMARY KEY,\n    userid INTEGER NOT NULL,\n    themeid VARCHAR(50) NOT NULL,\n    appliedat TIMESTAMP DEFAULT CURRENTTIMESTAMP,\n    sessionduration INTEGER, -- in seconds\n    devicetype VARCHAR(20),\n    browser VARCHAR(50),\n    systemtheme VARCHAR(10) -- 'light' or 'dark'\n);\n\n-- Index for performance\nCREATE INDEX idxthemeusageusertheme ON themeusage(userid, themeid);\nCREATE INDEX idxthemeusageappliedat ON themeusage(appliedat);\n\n-- View for theme popularity\nCREATE OR REPLACE VIEW themepopularity AS\nSELECT \n    themeid,\n    COUNT(DISTINCT userid) as uniqueusers,\n    COUNT() as totalapplications,\n    AVG(sessionduration) as avgsessionduration,\n    MAX(appliedat) as lastused\nFROM themeusage\nWHERE appliedat >= CURRENTDATE - INTERVAL '30 days'\nGROUP BY themeid\nORDER BY uniqueusers DESC;\n\n-- Function to get user's theme history\nCREATE OR REPLACE FUNCTION getuserthemehistory(puserid INTEGER)\nRETURNS TABLE (\n    themeid VARCHAR(50),\n    appliedat TIMESTAMP,\n    durationhours NUMERIC,\n    devicetype VARCHAR(20)\n) AS $$\nBEGIN\n    RETURN QUERY\n    WITH themesessions AS (\n        SELECT \n            tu.themeid,\n            tu.appliedat,\n            tu.devicetype,\n            LEAD(tu.appliedat) OVER (\n                PARTITION BY tu.userid \n                ORDER BY tu.appliedat\n            ) as nextappliedat\n        FROM themeusage tu\n        WHERE tu.userid = puserid\n    )\n    SELECT \n        ts.themeid,\n        ts.appliedat,\n        ROUND(\n            EXTRACT(EPOCH FROM (\n                COALESCE(ts.nextappliedat, CURRENTTIMESTAMP) - ts.appliedat\n            )) / 3600, \n            2\n        ) as durationhours,\n        ts.devicetype\n    FROM themesessions ts\n    ORDER BY ts.appliedat DESC\n    LIMIT 50;\nEND;\n$$ LANGUAGE plpgsql;\n\n-- Query to find most popular themes by time of day\nWITH hourlyusage AS (\n    SELECT \n        themeid,\n        EXTRACT(HOUR FROM appliedat) as hourofday,\n        COUNT() as usagecount\n    FROM themeusage\n    WHERE appliedat >= CURRENTDATE - INTERVAL '7 days'\n    GROUP BY themeid, hourofday\n),\nrankedthemes AS (\n    SELECT \n        hourofday,\n        themeid,\n        usagecount,\n        ROWNUMBER() OVER (\n            PARTITION BY hourofday \n            ORDER BY usagecount DESC\n        ) as rank\n    FROM hourlyusage\n)\nSELECT \n    hourofday,\n    themeid as mostpopulartheme,\n    usagecount\nFROM rankedthemes\nWHERE rank = 1\nORDER BY hourofday;\n\n\nYAML Configuration\n\nyaml title:\"Theme Build Configuration\"\nTheme build configuration file\nversion: 1.0.0\nbuild:\n  inputdir: ./themes\n  outputdir: ./dist/themes\n  \n  # Minification settings\n  minify:\n    enabled: true\n    removecomments: true\n    removewhitespace: true\n    mergemediaqueries: true\n    \n  # Optimization settings\n  optimize:\n    mergesimilarrules: true\n    removeunusedcss: false\n    inlinecriticalcss: false\n\nTheme definitions\nthemes:\n  - id: light\n    file: light.css\n    type: light\n    default: true\n    \n  - id: dark\n    file: dark.css\n    type: dark\n    \n  - id: vscode-dark-plus\n    file: vscode-dark-plus.css\n    type: dark\n    category: editor\n    \n  - id: monokai\n    file: monokai.css\n    type: dark\n    category: editor\n    \n  - id: dracula\n    file: dracula.css\n    type: dark\n    category: popular\n    \n  - id: one-dark-pro\n    file: one-dark-pro.css\n    type: dark\n    category: editor\n    \n  - id: solarized-light\n    file: solarized-light.css\n    type: light\n    category: classic\n    \n  - id: solarized-dark\n    file: solarized-dark.css\n    type: dark\n    category: classic\n    \n  - id: github-light\n    file: github-light.css\n    type: light\n    category: git\n    \n  - id: github-dark\n    file: github-dark.css\n    type: dark\n    category: git\n    \n  - id: nord\n    file: nord.css\n    type: dark\n    category: nordic\n    \n  - id: gruvbox-dark\n    file: gruvbox-dark.css\n    type: dark\n    category: retro\n    \n  - id: gruvbox-light\n    file: gruvbox-light.css\n    type: light\n    category: retro\n    \n  - id: tokyo-night\n    file: tokyo-night.css\n    type: dark\n    category: modern\n    \n  - id: palenight\n    file: palenight.css\n    type: dark\n    category: material\n\nAuto theme detection\nautotheme:\n  enabled: true\n  lightthemes: [light, solarized-light, github-light, gruvbox-light]\n  darkthemes: [dark, vscode-dark-plus, monokai, dracula, one-dark-pro, \n                solarized-dark, github-dark, nord, gruvbox-dark, \n                tokyo-night, palenight]\n  \n  # Time-based switching (optional)\n  schedule:\n    enabled: false\n    lightstart: \"06:00\"\n    darkstart: \"18:00\"\n\nTheme preview settings\npreview:\n  delayms: 200\n  restoreonleave: true\n  showcolorswatches: true\n\n\nCollapsible Code Example\n\njavascript title:\"Collapsible Example\" collapse:\"true\"\n// This code block is collapsible!\n// Click the arrow to expand/collapse\n\nfunction generateThemeCSS(theme) {\n    const { colors, typography, spacing } = theme;\n    \n    return \n        :root[data-theme=\"${theme.id}\"] {\n            / Color System /\n            --color-primary: ${colors.primary};\n            --color-secondary: ${colors.secondary};\n            --color-accent: ${colors.accent};\n            --color-background: ${colors.background};\n            --color-surface: ${colors.surface};\n            --color-text: ${colors.text};\n            --color-text-muted: ${colors.textMuted};\n            \n            / Typography /\n            --font-family: ${typography.fontFamily};\n            --font-size-base: ${typography.sizeBase};\n            --line-height-base: ${typography.lineHeight};\n            \n            / Spacing /\n            --spacing-unit: ${spacing.unit};\n            --spacing-xs: calc(var(--spacing-unit)  0.25);\n            --spacing-sm: calc(var(--spacing-unit)  0.5);\n            --spacing-md: var(--spacing-unit);\n            --spacing-lg: calc(var(--spacing-unit)  1.5);\n            --spacing-xl: calc(var(--spacing-unit)  2);\n        }\n    ;\n}\n\n// Generate CSS for all themes\nconst themes = getThemeDefinitions();\nconst cssOutput = themes.map(generateThemeCSS).join('\\n\\n');\n\nconsole.log('Generated theme CSS:', cssOutput);\n\n\nTesting Notes\n\nWhen testing themes, pay attention to:\n\n1. Color Contrast - Ensure text is readable against backgrounds\n2. Syntax Highlighting - All token types should be distinguishable\n3. UI Elements - Buttons, links, and interactive elements should be visible\n4. Code Blocks - Headers, titles, and copy buttons should be styled appropriately\n5. Transitions - Theme switching should be smooth without flashing\n6. Hover States - Interactive elements should have clear hover feedback\n7. Selection Colors - Text selection should be visible and pleasant\n8. Scrollbars - Custom scrollbar styling should match the theme\n\nTheme Implementation Complete!\n\nAll 50+ professional themes have been successfully implemented with:\n\n- \u2705 Full CSS custom property definitions\n- \u2705 Comprehensive syntax highlighting for all languages\n- \u2705 Smooth theme preview on hover\n- \u2705 System theme detection (auto light/dark)\n- \u2705 Persistent theme selection\n- \u2705 Responsive design with smart context filtering\n- \u2705 Beautiful, consistent styling across all themes\n\nTry switching between themes using the theme picker in the header to see the magic happen! \ud83c\udfa8 javascript JavaScript Class Example // ES6 Class with various syntax elements\nclass ThemeManager {\n    constructor(options = {}) {\n        this.themes = options.themes || [];\n        this.currentTheme = options.defaultTheme || 'light';\n        this.callbacks = new Map();\n        this._initialized = false;\n    }\n\n    async initialize() {\n        try {\n            // Load saved theme from localStorage\n            const saved = localStorage.getItem('theme');\n            if (saved && this.themes.includes(saved)) {\n                this.currentTheme = saved;\n            }\n            \n            // Apply the theme\n            await this.applyTheme(this.currentTheme);\n            this._initialized = true;\n            \n            return { success: true, theme: this.currentTheme };\n        } catch (error) {\n            console.error('Failed to initialize theme:', error);\n            return { success: false, error: error.message };\n        }\n    }\n\n    applyTheme(themeName) {\n        // Validate theme exists\n        if (!this.themes.includes(themeName)) {\n            throw new Error(`Theme \"${themeName}\" not found`);\n        }\n\n        // Apply theme to DOM\n        document.documentElement.setAttribute('data-theme', themeName);\n        \n        // Save preference\n        localStorage.setItem('theme', themeName);\n        \n        // Trigger callbacks\n        this.callbacks.forEach(callback => callback(themeName));\n    }\n\n    // Arrow function property\n    onChange = (callback) => {\n        const id = Date.now();\n        this.callbacks.set(id, callback);\n        return () => this.callbacks.delete(id);\n    }\n}\n\n// Usage\nconst manager = new ThemeManager({\n    themes: ['light', 'dark', 'monokai'],\n    defaultTheme: 'dark'\n});\n\nmanager.initialize().then(result => {\n    console.log('Theme initialized:', result);\n}); python Python Data Processing import pandas as pd\nimport numpy as np\nfrom datetime import datetime, timedelta\nfrom typing import List, Dict, Optional, Union\nimport asyncio\n\nclass DataProcessor:\n    \"\"\"Process and analyze time series data with various transformations.\"\"\"\n    \n    def __init__(self, data_path: str, cache_size: int = 1000):\n        self.data_path = data_path\n        self.cache_size = cache_size\n        self._cache: Dict[str, pd.DataFrame] = {}\n        self._metadata = {\n            'created': datetime.now(),\n            'version': '1.0.0',\n            'author': 'System'\n        }\n    \n    @property\n    def is_cached(self) -> bool:\n        \"\"\"Check if data is currently cached.\"\"\"\n        return len(self._cache) > 0\n    \n    async def load_data_async(self, \n                            file_path: str, \n                            columns: Optional[List[str]] = None) -> pd.DataFrame:\n        \"\"\"Asynchronously load data from CSV file.\"\"\"\n        try:\n            # Simulate async operation\n            await asyncio.sleep(0.1)\n            \n            df = pd.read_csv(file_path, usecols=columns)\n            \n            # Cache the result\n            if len(self._cache) < self.cache_size:\n                self._cache[file_path] = df\n            \n            return df\n            \n        except FileNotFoundError as e:\n            print(f\"Error: File {file_path} not found\")\n            raise e\n        except Exception as e:\n            print(f\"Unexpected error: {str(e)}\")\n            raise\n    \n    def process_timeseries(self, \n                          df: pd.DataFrame, \n                          window_size: int = 7,\n                          aggregation: str = 'mean') -> pd.DataFrame:\n        \"\"\"Apply rolling window calculations to time series data.\"\"\"\n        \n        # Validate inputs\n        if window_size <= 0:\n            raise ValueError(\"Window size must be positive\")\n        \n        valid_aggregations = ['mean', 'sum', 'min', 'max', 'std']\n        if aggregation not in valid_aggregations:\n            raise ValueError(f\"Aggregation must be one of {valid_aggregations}\")\n        \n        # Apply rolling calculation\n        numeric_cols = df.select_dtypes(include=[np.number]).columns\n        \n        result = df.copy()\n        for col in numeric_cols:\n            if aggregation == 'mean':\n                result[f'{col}_rolling_{window_size}d'] = df[col].rolling(window_size).mean()\n            elif aggregation == 'sum':\n                result[f'{col}_rolling_{window_size}d'] = df[col].rolling(window_size).sum()\n            # ... etc\n        \n        return result\n    \n    @staticmethod\n    def generate_sample_data(n_rows: int = 1000) -> pd.DataFrame:\n        \"\"\"Generate sample time series data for testing.\"\"\"\n        dates = pd.date_range(\n            start='2024-01-01', \n            periods=n_rows, \n            freq='D'\n        )\n        \n        data = {\n            'date': dates,\n            'value': np.random.randn(n_rows).cumsum() + 100,\n            'volume': np.random.randint(1000, 10000, n_rows),\n            'category': np.random.choice(['A', 'B', 'C'], n_rows)\n        }\n        \n        return pd.DataFrame(data)\n\n# Example usage\nif __name__ == \"__main__\":\n    processor = DataProcessor(\"./data\")\n    \n    # Generate and process sample data\n    df = DataProcessor.generate_sample_data(365)\n    processed = processor.process_timeseries(df, window_size=30)\n    \n    print(f\"Data shape: {processed.shape}\")\n    print(f\"Columns: {list(processed.columns)}\") html Responsive Card Component <!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Theme Card Component</title>\n    <style>\n        /* CSS Custom Properties for theming */\n        :root {\n            --card-bg: #ffffff;\n            --card-border: #e5e7eb;\n            --card-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n            --text-primary: #111827;\n            --text-secondary: #6b7280;\n            --accent-color: #3b82f6;\n        }\n\n        /* Dark theme override */\n        [data-theme=\"dark\"] {\n            --card-bg: #1f2937;\n            --card-border: #374151;\n            --card-shadow: 0 4px 6px rgba(0, 0, 0, 0.3);\n            --text-primary: #f3f4f6;\n            --text-secondary: #9ca3af;\n            --accent-color: #60a5fa;\n        }\n\n        /* Card component styles */\n        .card {\n            background-color: var(--card-bg);\n            border: 1px solid var(--card-border);\n            border-radius: 0.5rem;\n            box-shadow: var(--card-shadow);\n            padding: 1.5rem;\n            margin: 1rem;\n            transition: transform 0.2s ease, box-shadow 0.2s ease;\n        }\n\n        .card:hover {\n            transform: translateY(-2px);\n            box-shadow: 0 8px 12px rgba(0, 0, 0, 0.15);\n        }\n\n        .card-title {\n            color: var(--text-primary);\n            font-size: 1.25rem;\n            font-weight: 600;\n            margin: 0 0 0.5rem 0;\n        }\n\n        .card-description {\n            color: var(--text-secondary);\n            line-height: 1.5;\n            margin: 0 0 1rem 0;\n        }\n\n        .card-link {\n            color: var(--accent-color);\n            text-decoration: none;\n            font-weight: 500;\n            display: inline-flex;\n            align-items: center;\n            gap: 0.25rem;\n        }\n\n        .card-link:hover {\n            text-decoration: underline;\n        }\n\n        /* Responsive grid */\n        .card-grid {\n            display: grid;\n            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n            gap: 1rem;\n            padding: 1rem;\n        }\n\n        @media (max-width: 768px) {\n            .card {\n                padding: 1rem;\n            }\n            \n            .card-grid {\n                grid-template-columns: 1fr;\n            }\n        }\n    </style>\n</head>\n<body>\n    <div class=\"card-grid\">\n        <article class=\"card\">\n            <h2 class=\"card-title\">Theme System</h2>\n            <p class=\"card-description\">\n                A comprehensive theming system with CSS custom properties \n                that supports multiple color schemes and automatic theme switching.\n            </p>\n            <a href=\"#\" class=\"card-link\">\n                Learn more\n                <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"currentColor\">\n                    <path d=\"M6.22 3.22a.75.75 0 011.06 0l4.25 4.25a.75.75 0 010 1.06l-4.25 4.25a.75.75 0 01-1.06-1.06L9.94 8 6.22 4.28a.75.75 0 010-1.06z\"/>\n                </svg>\n            </a>\n        </article>\n    </div>\n</body>\n</html> bash Deployment Script #!/bin/bash\n# Theme deployment and build script\n\nset -euo pipefail\n\n# Color output helpers\nRED='\\033[0;31m'\nGREEN='\\033[0;32m'\nYELLOW='\\033[1;33m'\nNC='\\033[0m' # No Color\n\n# Configuration\nTHEMES_DIR=\"./themes\"\nBUILD_DIR=\"./dist\"\nTHEME_FILES=(\n    \"light.css\"\n    \"dark.css\"\n    \"vscode-dark-plus.css\"\n    \"monokai.css\"\n    \"dracula.css\"\n    \"one-dark-pro.css\"\n    \"solarized-light.css\"\n    \"solarized-dark.css\"\n    \"github-light.css\"\n    \"github-dark.css\"\n    \"nord.css\"\n    \"gruvbox-dark.css\"\n    \"gruvbox-light.css\"\n    \"tokyo-night.css\"\n    \"palenight.css\"\n)\n\n# Function to print colored output\nlog() {\n    local level=$1\n    shift\n    case \"$level\" in\n        \"error\")\n            echo -e \"${RED}[ERROR]${NC} $*\" >&2\n            ;;\n        \"success\")\n            echo -e \"${GREEN}[SUCCESS]${NC} $*\"\n            ;;\n        \"warning\")\n            echo -e \"${YELLOW}[WARNING]${NC} $*\"\n            ;;\n        *)\n            echo \"[INFO] $*\"\n            ;;\n    esac\n}\n\n# Validate theme files exist\nvalidate_themes() {\n    log \"info\" \"Validating theme files...\"\n    \n    local missing_themes=()\n    \n    for theme in \"${THEME_FILES[@]}\"; do\n        if [[ ! -f \"$THEMES_DIR/$theme\" ]]; then\n            missing_themes+=(\"$theme\")\n        fi\n    done\n    \n    if [[ ${#missing_themes[@]} -gt 0 ]]; then\n        log \"error\" \"Missing theme files:\"\n        printf '%s\\n' \"${missing_themes[@]}\"\n        return 1\n    fi\n    \n    log \"success\" \"All ${#THEME_FILES[@]} theme files found\"\n    return 0\n}\n\n# Minify CSS files\nminify_themes() {\n    log \"info\" \"Minifying theme files...\"\n    \n    # Create build directory if it doesn't exist\n    mkdir -p \"$BUILD_DIR/themes\"\n    \n    for theme in \"${THEME_FILES[@]}\"; do\n        local input=\"$THEMES_DIR/$theme\"\n        local output=\"$BUILD_DIR/themes/${theme%.css}.min.css\"\n        \n        # Simple CSS minification (remove comments and extra whitespace)\n        if command -v csso &> /dev/null; then\n            csso \"$input\" -o \"$output\"\n        else\n            # Fallback: basic minification with sed\n            sed -e 's/\\/\\*[^*]*\\*\\///g' \\\n                -e 's/\\s\\+/ /g' \\\n                -e 's/:\\s/:/g' \\\n                -e 's/;\\s/;/g' \\\n                -e 's/{\\s/{/g' \\\n                -e 's/}\\s/}/g' \\\n                -e 's/\\n//g' \\\n                \"$input\" > \"$output\"\n        fi\n        \n        log \"success\" \"Minified: ${theme%.css}.min.css\"\n    done\n}\n\n# Generate theme metadata\ngenerate_metadata() {\n    log \"info\" \"Generating theme metadata...\"\n    \n    cat > \"$BUILD_DIR/themes/themes.json\" << EOF\n{\n    \"themes\": [\n        $(for i in \"${!THEME_FILES[@]}\"; do\n            theme=\"${THEME_FILES[$i]}\"\n            theme_id=\"${theme%.css}\"\n            \n            # Add comma except for last item\n            if [[ $i -lt $((${#THEME_FILES[@]} - 1)) ]]; then\n                echo \"        \\\"$theme_id\\\",\"\n            else\n                echo \"        \\\"$theme_id\\\"\"\n            fi\n        done)\n    ],\n    \"count\": ${#THEME_FILES[@]},\n    \"generated\": \"$(date -u +\"%Y-%m-%dT%H:%M:%SZ\")\"\n}\nEOF\n    \n    log \"success\" \"Generated theme metadata\"\n}\n\n# Main execution\nmain() {\n    log \"info\" \"Starting theme build process...\"\n    \n    # Validate themes\n    if ! validate_themes; then\n        log \"error\" \"Theme validation failed\"\n        exit 1\n    fi\n    \n    # Minify themes\n    minify_themes\n    \n    # Generate metadata\n    generate_metadata\n    \n    log \"success\" \"Theme build completed successfully!\"\n    log \"info\" \"Output directory: $BUILD_DIR\"\n}\n\n# Run main function\nmain \"$@\" json Theme Configuration {\n    \"themes\": {\n        \"light\": {\n            \"id\": \"light\",\n            \"name\": \"Light\",\n            \"description\": \"Clean light theme for daytime use\",\n            \"type\": \"light\",\n            \"colors\": {\n                \"primary\": \"#3b82f6\",\n                \"secondary\": \"#10b981\",\n                \"background\": \"#ffffff\",\n                \"surface\": \"#f9fafb\",\n                \"text\": {\n                    \"primary\": \"#111827\",\n                    \"secondary\": \"#6b7280\",\n                    \"muted\": \"#9ca3af\"\n                },\n                \"syntax\": {\n                    \"keyword\": \"#2563eb\",\n                    \"string\": \"#059669\",\n                    \"number\": \"#dc2626\",\n                    \"function\": \"#7c3aed\",\n                    \"comment\": \"#6b7280\"\n                }\n            },\n            \"customizations\": {\n                \"scrollbar\": true,\n                \"selection\": true,\n                \"forms\": true\n            }\n        },\n        \"dracula\": {\n            \"id\": \"dracula\",\n            \"name\": \"Dracula\",\n            \"description\": \"Dark theme with vibrant colors\",\n            \"type\": \"dark\",\n            \"colors\": {\n                \"primary\": \"#bd93f9\",\n                \"secondary\": \"#50fa7b\",\n                \"background\": \"#282a36\",\n                \"surface\": \"#21222c\",\n                \"text\": {\n                    \"primary\": \"#f8f8f2\",\n                    \"secondary\": \"#6272a4\",\n                    \"muted\": \"#6272a4\"\n                },\n                \"syntax\": {\n                    \"keyword\": \"#ff79c6\",\n                    \"string\": \"#f1fa8c\",\n                    \"number\": \"#bd93f9\",\n                    \"function\": \"#50fa7b\",\n                    \"comment\": \"#6272a4\"\n                }\n            },\n            \"customizations\": {\n                \"scrollbar\": true,\n                \"selection\": true,\n                \"forms\": true\n            }\n        }\n    },\n    \"defaultTheme\": \"light\",\n    \"autoDetect\": true,\n    \"transitions\": {\n        \"enabled\": true,\n        \"duration\": \"250ms\",\n        \"easing\": \"ease-in-out\"\n    }\n} sql Theme Usage Analytics -- Create tables for theme usage tracking\nCREATE TABLE IF NOT EXISTS theme_usage (\n    id SERIAL PRIMARY KEY,\n    user_id INTEGER NOT NULL,\n    theme_id VARCHAR(50) NOT NULL,\n    applied_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    session_duration INTEGER, -- in seconds\n    device_type VARCHAR(20),\n    browser VARCHAR(50),\n    system_theme VARCHAR(10) -- 'light' or 'dark'\n);\n\n-- Index for performance\nCREATE INDEX idx_theme_usage_user_theme ON theme_usage(user_id, theme_id);\nCREATE INDEX idx_theme_usage_applied_at ON theme_usage(applied_at);\n\n-- View for theme popularity\nCREATE OR REPLACE VIEW theme_popularity AS\nSELECT \n    theme_id,\n    COUNT(DISTINCT user_id) as unique_users,\n    COUNT(*) as total_applications,\n    AVG(session_duration) as avg_session_duration,\n    MAX(applied_at) as last_used\nFROM theme_usage\nWHERE applied_at >= CURRENT_DATE - INTERVAL '30 days'\nGROUP BY theme_id\nORDER BY unique_users DESC;\n\n-- Function to get user's theme history\nCREATE OR REPLACE FUNCTION get_user_theme_history(p_user_id INTEGER)\nRETURNS TABLE (\n    theme_id VARCHAR(50),\n    applied_at TIMESTAMP,\n    duration_hours NUMERIC,\n    device_type VARCHAR(20)\n) AS $$\nBEGIN\n    RETURN QUERY\n    WITH theme_sessions AS (\n        SELECT \n            tu.theme_id,\n            tu.applied_at,\n            tu.device_type,\n            LEAD(tu.applied_at) OVER (\n                PARTITION BY tu.user_id \n                ORDER BY tu.applied_at\n            ) as next_applied_at\n        FROM theme_usage tu\n        WHERE tu.user_id = p_user_id\n    )\n    SELECT \n        ts.theme_id,\n        ts.applied_at,\n        ROUND(\n            EXTRACT(EPOCH FROM (\n                COALESCE(ts.next_applied_at, CURRENT_TIMESTAMP) - ts.applied_at\n            )) / 3600, \n            2\n        ) as duration_hours,\n        ts.device_type\n    FROM theme_sessions ts\n    ORDER BY ts.applied_at DESC\n    LIMIT 50;\nEND;\n$$ LANGUAGE plpgsql;\n\n-- Query to find most popular themes by time of day\nWITH hourly_usage AS (\n    SELECT \n        theme_id,\n        EXTRACT(HOUR FROM applied_at) as hour_of_day,\n        COUNT(*) as usage_count\n    FROM theme_usage\n    WHERE applied_at >= CURRENT_DATE - INTERVAL '7 days'\n    GROUP BY theme_id, hour_of_day\n),\nranked_themes AS (\n    SELECT \n        hour_of_day,\n        theme_id,\n        usage_count,\n        ROW_NUMBER() OVER (\n            PARTITION BY hour_of_day \n            ORDER BY usage_count DESC\n        ) as rank\n    FROM hourly_usage\n)\nSELECT \n    hour_of_day,\n    theme_id as most_popular_theme,\n    usage_count\nFROM ranked_themes\nWHERE rank = 1\nORDER BY hour_of_day; yaml Theme Build Configuration # Theme build configuration file\nversion: 1.0.0\nbuild:\n  input_dir: ./themes\n  output_dir: ./dist/themes\n  \n  # Minification settings\n  minify:\n    enabled: true\n    remove_comments: true\n    remove_whitespace: true\n    merge_media_queries: true\n    \n  # Optimization settings\n  optimize:\n    merge_similar_rules: true\n    remove_unused_css: false\n    inline_critical_css: false\n\n# Theme definitions\nthemes:\n  - id: light\n    file: light.css\n    type: light\n    default: true\n    \n  - id: dark\n    file: dark.css\n    type: dark\n    \n  - id: vscode-dark-plus\n    file: vscode-dark-plus.css\n    type: dark\n    category: editor\n    \n  - id: monokai\n    file: monokai.css\n    type: dark\n    category: editor\n    \n  - id: dracula\n    file: dracula.css\n    type: dark\n    category: popular\n    \n  - id: one-dark-pro\n    file: one-dark-pro.css\n    type: dark\n    category: editor\n    \n  - id: solarized-light\n    file: solarized-light.css\n    type: light\n    category: classic\n    \n  - id: solarized-dark\n    file: solarized-dark.css\n    type: dark\n    category: classic\n    \n  - id: github-light\n    file: github-light.css\n    type: light\n    category: git\n    \n  - id: github-dark\n    file: github-dark.css\n    type: dark\n    category: git\n    \n  - id: nord\n    file: nord.css\n    type: dark\n    category: nordic\n    \n  - id: gruvbox-dark\n    file: gruvbox-dark.css\n    type: dark\n    category: retro\n    \n  - id: gruvbox-light\n    file: gruvbox-light.css\n    type: light\n    category: retro\n    \n  - id: tokyo-night\n    file: tokyo-night.css\n    type: dark\n    category: modern\n    \n  - id: palenight\n    file: palenight.css\n    type: dark\n    category: material\n\n# Auto theme detection\nauto_theme:\n  enabled: true\n  light_themes: [light, solarized-light, github-light, gruvbox-light]\n  dark_themes: [dark, vscode-dark-plus, monokai, dracula, one-dark-pro, \n                solarized-dark, github-dark, nord, gruvbox-dark, \n                tokyo-night, palenight]\n  \n  # Time-based switching (optional)\n  schedule:\n    enabled: false\n    light_start: \"06:00\"\n    dark_start: \"18:00\"\n\n# Theme preview settings\npreview:\n  delay_ms: 200\n  restore_on_leave: true\n  show_color_swatches: true",
      "code_blocks_count": 7
    },
    {
      "path": "/notes/tutorials/features/markdown-callouts.md",
      "context": "tutorials",
      "metadata": {
        "title": "Callouts Demonstration",
        "tags": [
          "demo",
          "documentation",
          "callouts"
        ],
        "created": "2024-01-15",
        "author": "Wiki Admin",
        "description": "Demonstration of all available callout types and their usage",
        "updated": null,
        "category": null,
        "status": null
      },
      "content_preview": "This page demonstrates all available callout types in the wiki system. Callouts are special blockquotes that provide visual emphasis for important information.\n\n\n\nTo create a callout, use the followin...",
      "searchable_content": "\nCallouts Demonstration\n\nThis page demonstrates all available callout types in the wiki system. Callouts are special blockquotes that provide visual emphasis for important information.\n\nBasic Syntax\n\nTo create a callout, use the following syntax:\n\nmarkdown\n> [!TYPE] Optional Title\n> Content of the callout\n> Can span multiple lines\n\n\nAvailable Callout Types\n\nWarning\n\n> [!WARNING] Potential Data Loss Risk\n> Always backup your important notes before making bulk changes to the wiki system. \n> Operations like theme customization, bulk file moves, or index rebuilding could \n> potentially affect your content if not done carefully.\n\n> [!WARNING] Browser Compatibility Notice\n> Some advanced features may not work properly in Internet Explorer or very old browser versions. \n> For the best experience, use Chrome 66+, Firefox 63+, Edge 79+, or Safari 13.1+.\n\nInfo\n\n> [!INFO] Search Index Updates\n> The search index is automatically rebuilt when you add or modify notes. This process \n> runs in the background and typically completes within a few seconds. If search results \n> seem outdated, you can manually rebuild the index using the build.py script.\n\n> [!INFO] Theme System Architecture\n> The wiki includes 50+ professional themes that use CSS custom properties for dynamic \n> switching. Each theme provides comprehensive styling for syntax highlighting, UI elements, \n> and responsive design across all device types.\n\nTip\n\n> [!TIP] Keyboard Shortcuts for Productivity\n> Press ? at any time to see all available keyboard shortcuts. Popular shortcuts include:\n> - Ctrl+K for quick search\n> - Ctrl+T for new tab\n> - Ctrl+F for tag filtering\n> - / for instant search focus\n\n> [!TIP] Advanced Search Techniques\n> Use search operators for precise results: \"exact phrase\" for exact matches, \n> tag:javascript to filter by tags, author:name for author filtering, and \n> -exclude to exclude terms from results.\n\nNote\n\n> [!NOTE] Content Organization Best Practices\n> Organize your notes in logical folder structures within the /notes/ directory. \n> Use consistent naming conventions, add descriptive YAML frontmatter, and apply \n> relevant tags for easy discovery and filtering.\n\n> [!NOTE] Responsive Context Filtering\n> In v2.9.0, context categories automatically switch to a dropdown menu on mobile \n> devices or when you have 6+ categories. This ensures optimal navigation experience \n> across all screen sizes.\n\nDanger\n\n> [!DANGER] Critical System Files\n> Never delete or modify these essential files: index.html, script.js, style.css, \n> build.py, or any files in the /libs/ directory. These files are required for \n> the wiki to function properly and corruption could render your wiki inaccessible.\n\n> [!DANGER] Custom CSS Injection Risks\n> When adding custom CSS in Settings \u2192 Advanced, avoid modifying core layout properties \n> or overriding security-related styles. Incorrect CSS can break the interface or \n> compromise the responsive design system.\n\nImportant\n\n> [!IMPORTANT] Regular Backup Strategy\n> Your wiki data is stored locally in browser storage and as files. Implement a regular \n> backup strategy by:\n> - Exporting settings periodically\n> - Keeping git repository backups\n> - Downloading important notes locally\n\n> [!IMPORTANT] Memory Management for Large Wikis\n> If your wiki contains hundreds of notes, monitor browser memory usage. Consider:\n> - Closing unused tabs regularly\n> - Using the tab limit settings\n> - Clearing browser cache periodically\n\nCaution\n\n> [!CAUTION] Plugin and Extension Compatibility\n> Some browser extensions (especially ad blockers or script blockers) may interfere \n> with wiki functionality. If you experience issues, try disabling extensions or \n> adding your wiki domain to the allowlist.\n\n> [!CAUTION] Large File Uploads\n> While the wiki can handle various image formats, large files (>5MB) may slow down \n> page loading. Optimize images before uploading and consider using external hosting \n> for very large media files.\n\nSuccess\n\n> [!SUCCESS] Deployment Complete!\n> Your wiki has been successfully deployed and is fully operational. All features \n> including search, themes, tabs, and responsive navigation are working correctly. \n> Start adding your content to the /notes/ directory!\n\n> [!SUCCESS] Performance Optimization Achieved\n> The wiki achieves excellent performance with:\n> - <100ms load times on average hardware\n> - <5MB total download size including all themes\n> - 100% offline capability after initial load\n\nQuestion\n\n> [!QUESTION] Need Help with Advanced Features?\n> Explore the demo notes to learn about advanced features like:\n> - Custom callouts and rich formatting\n> - Advanced search operators and filtering\n> - Keyboard shortcuts and productivity tips\n> - Theme customization and CSS injection\n\n> [!QUESTION] Looking for Integration Options?\n> The wiki can be integrated with various workflows:\n> - GitHub/GitLab Pages for automatic deployment\n> - Custom domains and SSL certificates\n> - Analytics and monitoring tools\n> - Team collaboration workflows\n\nExample\n\n> [!EXAMPLE] Creating a Project Wiki\n> File Structure:\n> \n> /notes/projects/my-app/\n> \u251c\u2500\u2500 overview.md (project description)\n> \u251c\u2500\u2500 setup.md (installation guide)\n> \u251c\u2500\u2500 api.md (API documentation)\n> \u2514\u2500\u2500 troubleshooting.md (common issues)\n> \n> \n> YAML Frontmatter:\n> yaml\n> ---\n> title: Project Overview\n> tags: [project, documentation, my-app]\n> author: Team Lead\n> status: active\n> ---\n> \n\n> [!EXAMPLE] Code Documentation Template\n> Use this template for documenting code:\n> \n> javascript title:\"Function Example\"\n> /\n>   Calculates user productivity score\n>   @param {number} tasksCompleted - Tasks finished\n>   @param {number} timeSpent - Hours worked\n>   @returns {number} Productivity score (0-100)\n>  /\n> function calculateProductivity(tasksCompleted, timeSpent) {\n>     return Math.min(100, (tasksCompleted / timeSpent)  10);\n> }\n> \n\nQuote\n\n> [!QUOTE] Documentation Best Practices\n> \"The best documentation is the one that doesn't need to exist because the system \n> is so intuitive. The second best is the one that makes complex things feel simple.\"\n> \n> \u2014 Notes Wiki Philosophy\n\n> [!QUOTE] User Testimonial\n> \"This wiki system transformed our team's knowledge sharing. The combination of \n> powerful search, beautiful themes, and zero maintenance overhead made it our \n> go-to documentation platform.\"\n> \n> \u2014 Development Team, Tech Startup\n\nBug\n\n> [!BUG] Known Issue: Safari Private Mode\n> Issue: Local storage limitations in Safari private browsing mode may prevent \n> settings from persisting between sessions.\n> \n> Workaround: Use normal browsing mode or export/import settings manually.\n> \n> Status: Under investigation for future releases.\n\n> [!BUG] Edge Case: Very Long Note Titles\n> Issue: Note titles longer than 100 characters may be truncated in tab headers \n> on mobile devices with narrow screens.\n> \n> Impact: Visual only, functionality not affected.\n> \n> Fix: Implemented responsive text truncation with hover tooltips.\n\nTodo\n\n> [!TODO] Content Migration Checklist\n> - [ ] Import existing documentation from old system\n> - [ ] Set up consistent tagging system\n> - [ ] Create navigation structure in /notes/\n> - [ ] Configure team access permissions\n> - [ ] Set up automated backups\n> - [ ] Train team members on wiki features\n\n> [!TODO] Wiki Enhancement Ideas\n> - [ ] Add custom theme creation guide\n> - [ ] Implement advanced export features  \n> - [ ] Create integration with external tools\n> - [ ] Set up analytics and usage tracking\n> - [ ] Develop mobile app companion\n> - [ ] Add collaborative editing features\n\nAdvanced Usage\n\nCallouts with Complex Content\n\n> [!INFO] Callouts Support Rich Content\n> Callouts can contain various types of content:\n> - Lists like this one\n> - Bold text and italic text\n> - Links to other pages\n> \n> They can even contain code blocks:\n> javascript\n> console.log(\"Hello from a callout!\");\n> \n\nNested Callouts\n\n> [!WARNING] Parent Callout\n> This is the main callout.\n> \n> > [!INFO] Nested Callout\n> > Callouts can be nested inside other callouts for complex information hierarchy.\n\nMultiple Paragraphs\n\n> [!NOTE] Long Content Example\n> This is the first paragraph of the callout. It contains some introductory information.\n> \n> This is the second paragraph. Notice how the callout maintains proper spacing between paragraphs.\n> \n> And here's a third paragraph with a list:\n> 1. First item\n> 2. Second item\n> 3. Third item\n\nBest Practices\n\n> [!TIP] When to Use Callouts\n> - Use callouts sparingly to maintain their effectiveness\n> - Choose the appropriate type based on the content\n> - Keep callout content concise when possible\n> - Use custom titles to provide context\n\n> [!CAUTION] Avoid Overuse\n> Too many callouts on a single page can be overwhelming and reduce their impact. Use them strategically to highlight truly important information.\n\nTheme Compatibility\n\n> [!SUCCESS] Works with All Themes!\n> The callout system is designed to work seamlessly with all 15+ built-in themes. Colors and styles automatically adapt to maintain readability and visual consistency. > [!TYPE] Optional Title\n> Content of the callout\n> Can span multiple lines > /notes/projects/my-app/\n> \u251c\u2500\u2500 overview.md (project description)\n> \u251c\u2500\u2500 setup.md (installation guide)\n> \u251c\u2500\u2500 api.md (API documentation)\n> \u2514\u2500\u2500 troubleshooting.md (common issues)\n> > ---\n> title: Project Overview\n> tags: [project, documentation, my-app]\n> author: Team Lead\n> status: active\n> ---\n> javascript Function Example > /**\n>  * Calculates user productivity score\n>  * @param {number} tasksCompleted - Tasks finished\n>  * @param {number} timeSpent - Hours worked\n>  * @returns {number} Productivity score (0-100)\n>  */\n> function calculateProductivity(tasksCompleted, timeSpent) {\n>     return Math.min(100, (tasksCompleted / timeSpent) * 10);\n> }\n> > console.log(\"Hello from a callout!\");\n>",
      "code_blocks_count": 5
    }
  ],
  "tags": {
    "home": 1,
    "index": 1,
    "documentation": 3,
    "tutorial": 11,
    "getting-started": 2,
    "markdown": 2,
    "frontmatter": 1,
    "demo": 8,
    "tabs": 2,
    "productivity": 6,
    "navigation": 8,
    "search": 2,
    "operators": 1,
    "filtering": 1,
    "shortcuts": 1,
    "settings": 1,
    "customization": 1,
    "configuration": 1,
    "pomodoro": 1,
    "focus": 2,
    "timer": 1,
    "recent-files": 1,
    "pinning": 1,
    "organization": 3,
    "callouts": 1,
    "guide": 1,
    "images": 1,
    "themes": 1,
    "showcase": 1,
    "styling": 1,
    "toc": 1,
    "links": 1,
    "reading": 2,
    "code": 2,
    "syntax-highlighting": 1,
    "bookmarks": 1,
    "contexts": 1,
    "interface": 2,
    "quick-notes": 1,
    "advanced": 1,
    "automation": 1
  },
  "authors": [
    "Wiki Team",
    "Wiki Admin"
  ],
  "categories": [],
  "contexts": [
    {
      "id": "tutorials",
      "name": "Tutorials",
      "noteCount": 22
    }
  ],
  "generated": "2025-06-18T18:05:37.125241",
  "totalNotes": 23
}