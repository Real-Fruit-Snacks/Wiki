{
  "notes": [
    {
      "path": "/notes/tutorials/features/search-guide.md",
      "context": "tutorials",
      "metadata": {
        "title": "Advanced Search Features",
        "tags": [
          "demo",
          "search",
          "operators",
          "filtering"
        ],
        "created": "2025-06-13",
        "author": "Wiki Admin",
        "description": "Complete guide to advanced search features including operators, tag filtering, and search techniques",
        "updated": null,
        "category": null,
        "status": null,
        "aliases": [],
        "related": [],
        "dependencies": [],
        "keywords": [],
        "tableOfContents": "auto",
        "hideFromSearch": false
      },
      "content_preview": "The Notes Wiki includes a powerful search system that goes far beyond simple text matching. Learn how to use advanced operators, tag filtering, and search techniques to find exactly what you're lookin...",
      "searchable_content": "\nAdvanced Search Features\n\nThe Notes Wiki includes a powerful search system that goes far beyond simple text matching. Learn how to use advanced operators, tag filtering, and search techniques to find exactly what you're looking for.\n\n\ud83d\udd0d Quick Search Access\n\n- Header Search: Click the search icon or search box in the header\n- Keyboard Shortcut: Press <kbd>Ctrl</kbd>+<kbd>K</kbd> to focus search instantly\n- URL Search: Use #/search/your+search+term for direct search links\n\n\ud83c\udfaf Search Operators\n\nExact Phrase Search\nUse quotes for exact phrase matching:\n\n\n\"machine learning algorithms\"\n\"Notes Wiki system\" \n\"CSS counter-based line numbers\"\n\n\nExample Results:\n- \u2705 \"machine learning algorithms for beginners\"\n- \u274c \"machine algorithms for learning\"\n\nExclusion Operator\nUse minus (-) to exclude terms:\n\n\njavascript -angular\npython -django\ntheme -dark\n\n\nExample:\n- javascript -angular finds JavaScript content but excludes Angular-related notes\n- css -framework finds CSS notes excluding framework-specific content\n\nTag Filtering\nUse tag: to search within specific tags:\n\n\ntag:javascript\ntag:tutorial\ntag:personal\ntag:code-blocks\n\n\nMultiple Tags:\n\ntag:javascript tag:tutorial\ntag:css tag:demo\n\n\nAuthor Filtering  \nUse author: to find notes by specific authors:\n\n\nauthor:\"Wiki Admin\"\nauthor:\"John Doe\"\nauthor:System\n\n\nCombining Operators\nCreate powerful queries by combining operators:\n\n\ntag:javascript \"async await\" -promise\nauthor:\"Wiki Admin\" tag:demo -test\n\"code blocks\" tag:tutorial -basic\n\n\n\ud83c\udff7\ufe0f Tag-Based Filtering\n\nTag Filter Interface\n- Click Filter button or press <kbd>Ctrl</kbd>+<kbd>F</kbd>\n- Select multiple tags for filtering\n- Choose between OR/AND logic\n\nTag Logic\nTag filtering uses simple matching:\n- Multiple tags selected work as OR logic by default\n- Shows notes that match any of the selected tags\n- Use search operators for precise tag combinations\n\n\ud83c\udfa8 Smart Search Features\n\nSearch History\nYour recent searches are saved automatically:\n- Up to 50 recent searches stored locally\n- Previous searches remembered across sessions\n- Access history through browser localStorage\n\n\ud83d\udcca Search Results\n\nResult Ordering\nResults appear in the order they exist in the search index:\n- No relevance ranking or scoring applied\n- All matching notes displayed in index order\n- Pagination available for large result sets (20 per page)\n\nResult Information\nEach result shows:\n- Title - Note title with highlighting\n- Description - Brief content summary\n- Tags - Associated tags\n- Author - Note author\n- Preview - Content snippet with search terms highlighted\n\nQuick Actions\nFrom search results:\n- Click title - Open note in current tab\n- Ctrl+Click - Open in new tab\n- Click tags - Filter by that tag\n- Click author - Filter by author\n\n\ud83d\ude80 Advanced Search Techniques\n\nContent Type Searches\nFind specific types of content:\n\n\ntag:code-blocks \"function\"\ntag:tutorial \"step by step\"  \ntag:reference \"cheat sheet\"\ntag:personal \"daily\"\n\n\nDate-Based Searches\nSearch metadata includes dates:\n\n\nauthor:System \"2025\"\n\"created: 2025-01\" \n\"updated\" tag:demo\n\n\nTechnical Content Searches\nFind programming content:\n\n\n\"javascript\" tag:demo\n\"code block\" \"line numbers\"\n\"syntax highlighting\" -test\ntag:css \"theme\" \"color\"\n\n\nDocumentation Searches\nFind specific documentation:\n\n\n\"how to\" tag:tutorial\n\"getting started\" -test\n\"configuration\" tag:settings\n\"keyboard shortcuts\" tag:demo\n\n\n\ud83d\udca1 Search Best Practices\n\nEffective Search Strategies\n\n1. Start Broad, Then Narrow\n\nStep 1: javascript\nStep 2: javascript tutorial  \nStep 3: javascript tutorial -advanced\nStep 4: tag:tutorial \"javascript\" \"beginner\"\n\n\n2. Use Multiple Search Methods\n- Try tag filtering first for categorical searches\n- Use text search for specific content\n- Combine both for precise results\n\n3. Leverage Exclusions\n\ntheme -test -debug\ntutorial -\"work in progress\"\njavascript -framework -library\n\n\nCommon Search Patterns\n\nFinding Examples:\n\ntag:demo \"example\"\n\"code example\" tag:tutorial\n\"sample\" -test\n\n\nFinding Documentation:\n\n\"how to\" OR \"guide\" OR \"tutorial\"\ntag:documentation -draft\n\"getting started\" tag:beginner\n\n\nFinding Reference Material:\n\ntag:reference OR tag:cheatsheet\n\"reference\" OR \"cheat sheet\"\n\"commands\" tag:reference\n\n\n\ud83d\udd17 Search URLs & Sharing\n\nDirect Search Links\nShare searches with URL patterns:\n\n\n#/search/javascript+tutorial\n#/search/\"code+blocks\"+tag:demo\n#/search/tag:css+-test\n\n\nBookmarkable Searches\nCreate bookmarks for frequent searches:\n- Weekly Reviews: tag:personal \"weekly\"\n- Code References: tag:reference \"code\"\n- Learning Material: tag:tutorial -completed\n\nSearch in New Tabs\n- <kbd>Ctrl</kbd>+<kbd>Click</kbd> search results to open in new tabs\n- Use <kbd>Ctrl</kbd>+<kbd>T</kbd> then search for research sessions\n\n\ud83c\udfaf Search Examples\n\nReal-World Search Scenarios\n\nScenario 1: Learning JavaScript\n\nSearch: tag:javascript tag:tutorial -advanced\nFilter: Include [beginner], [examples]\nResult: Beginner-friendly JavaScript tutorials with examples\n\n\nScenario 2: Theme Customization\n\nSearch: \"theme\" OR \"css\" tag:demo\nExclude: test, debug\nResult: Theme and CSS demos excluding test files\n\n\nScenario 3: Code Block Features\n\nSearch: \"code block\" OR \"syntax highlighting\" OR \"line numbers\"\nFilter: Include [demo], [features]\nResult: All code block feature documentation\n\n\nScenario 4: Personal Project Notes\n  \nSearch: author:\"Your Name\" tag:personal tag:projects\nFilter: Exclude [archive], [completed]\nResult: Your active personal project notes\n\n\n\ud83d\udd27 Search Configuration\n\nSearch Behavior\nThe search system uses these built-in behaviors:\n\n- Search delay - 150ms debounce before search executes\n- Results per page - 20 results with pagination\n- Content inclusion - Searches titles, descriptions, content, and tags\n- Case insensitive - All searches ignore letter case\n- Exact matching - No fuzzy matching or approximation\n\nPerformance Tips\n\nFor Large Wikis:\n- Use tag filtering first to narrow results\n- Prefer specific terms over general ones\n- Use exclusions to eliminate noise\n- Limit searches to relevant sections\n\nFor Quick Finding:\n- Use recent search history\n- Bookmark frequent searches  \n- Learn common tag patterns\n- Use keyboard shortcuts for speed\n\n---\n\nMaster Search with Practice\n\nThe search system becomes more powerful as you learn your content patterns. Experiment with different operators and develop search strategies that match your workflow!\n\nPro Tip: Use <kbd>Ctrl</kbd>+<kbd>K</kbd> for instant search access, and don't forget that search results can be opened in multiple tabs with <kbd>Ctrl</kbd>+<kbd>Click</kbd> for research sessions. \"machine learning algorithms\"\n\"Notes Wiki system\" \n\"CSS counter-based line numbers\" javascript -angular\npython -django\ntheme -dark tag:javascript\ntag:tutorial\ntag:personal\ntag:code-blocks tag:javascript tag:tutorial\ntag:css tag:demo author:\"Wiki Admin\"\nauthor:\"John Doe\"\nauthor:System tag:javascript \"async await\" -promise\nauthor:\"Wiki Admin\" tag:demo -test\n\"code blocks\" tag:tutorial -basic tag:code-blocks \"function\"\ntag:tutorial \"step by step\"  \ntag:reference \"cheat sheet\"\ntag:personal \"daily\" author:System \"2025\"\n\"created: 2025-01\" \n\"updated\" tag:demo \" ### Documentation Searches\nFind specific documentation: ## \ud83d\udca1 Search Best Practices\n\n### Effective Search Strategies\n\n**1. Start Broad, Then Narrow** **2. Use Multiple Search Methods**\n- Try tag filtering first for categorical searches\n- Use text search for specific content\n- Combine both for precise results\n\n**3. Leverage Exclusions** ### Common Search Patterns\n\n**Finding Examples:** **Finding Documentation:** **Finding Reference Material:** ## \ud83d\udd17 Search URLs & Sharing\n\n### Direct Search Links\nShare searches with URL patterns: ### Bookmarkable Searches\nCreate bookmarks for frequent searches:\n- **Weekly Reviews**: `tag:personal \"weekly\"`\n- **Code References**: `tag:reference \"code\"`\n- **Learning Material**: `tag:tutorial -completed`\n\n### Search in New Tabs\n- <kbd>Ctrl</kbd>+<kbd>Click</kbd> search results to open in new tabs\n- Use <kbd>Ctrl</kbd>+<kbd>T</kbd> then search for research sessions\n\n## \ud83c\udfaf Search Examples\n\n### Real-World Search Scenarios\n\n**Scenario 1: Learning JavaScript** **Scenario 2: Theme Customization** **Scenario 3: Code Block Features** **Scenario 4: Personal Project Notes**",
      "code_blocks_count": 20
    },
    {
      "path": "/notes/tutorials/features/keyboard-shortcuts.md",
      "context": "tutorials",
      "metadata": {
        "title": "Keyboard Shortcuts Guide",
        "tags": [
          "demo",
          "shortcuts",
          "productivity",
          "navigation"
        ],
        "created": "2025-06-13",
        "author": "Wiki Admin",
        "description": "Complete guide to all available keyboard shortcuts",
        "updated": null,
        "category": null,
        "status": null,
        "aliases": [],
        "related": [],
        "dependencies": [],
        "keywords": [],
        "tableOfContents": "auto",
        "hideFromSearch": false
      },
      "content_preview": "The Notes Wiki includes keyboard shortcuts to boost your productivity. Press <kbd>?</kbd> at any time to see the shortcuts cheatsheet!\n\n\n\n| Shortcut | Action | Description |\n|----------|--------|-----...",
      "searchable_content": "\nKeyboard Shortcuts Guide\n\nThe Notes Wiki includes keyboard shortcuts to boost your productivity. Press <kbd>?</kbd> at any time to see the shortcuts cheatsheet!\n\n\ud83c\udfaf Quick Access\n\n| Shortcut | Action | Description |\n|----------|--------|-------------|\n| <kbd>?</kbd> | Show shortcuts cheatsheet | Opens the complete shortcuts overlay |\n| <kbd>Esc</kbd> | Close modals | Closes any open modals, overlays, or dialogs |\n| <kbd>F</kbd> | Focus mode | Toggle distraction-free reading mode |\n\n\ud83d\udd0d Search & Navigation\n\n| Shortcut | Action | Description |\n|----------|--------|-------------|\n| <kbd>Ctrl</kbd>+<kbd>K</kbd> | Search | Open global search (Mac: <kbd>\u2318</kbd>+<kbd>K</kbd>) |\n| <kbd>Ctrl</kbd>+<kbd>F</kbd> | Filter by tags | Open tag filtering interface (Mac: <kbd>\u2318</kbd>+<kbd>F</kbd>) |\n| <kbd>Ctrl</kbd>+<kbd>D</kbd> | Bookmark note | Bookmark the current note (Mac: <kbd>\u2318</kbd>+<kbd>D</kbd>) |\n\n\ud83d\udcd1 Tab Management\n\nPrimary Shortcuts\n| Shortcut | Action | Description |\n|----------|--------|-------------|\n| <kbd>Ctrl</kbd>+<kbd>T</kbd> | New tab | Open a new empty tab (Mac: <kbd>\u2318</kbd>+<kbd>T</kbd>) |\n| <kbd>Ctrl</kbd>+<kbd>W</kbd> | Close tab | Close the current tab (Mac: <kbd>\u2318</kbd>+<kbd>W</kbd>) |\n| <kbd>Ctrl</kbd>+<kbd>Shift</kbd>+<kbd>W</kbd> | Close all tabs | Close all open tabs (Mac: <kbd>\u2318</kbd>+<kbd>Shift</kbd>+<kbd>W</kbd>) |\n| <kbd>Ctrl</kbd>+<kbd>1</kbd>-<kbd>9</kbd> | Switch to tab | Jump to tab by number (1-9) (Mac: <kbd>\u2318</kbd>+<kbd>1</kbd>-<kbd>9</kbd>) |\n| <kbd>Ctrl</kbd>+<kbd>PageUp</kbd> | Previous tab | Switch to the previous tab (Mac: <kbd>\u2318</kbd>+<kbd>PageUp</kbd>) |\n| <kbd>Ctrl</kbd>+<kbd>PageDown</kbd> | Next tab | Switch to the next tab (Mac: <kbd>\u2318</kbd>+<kbd>PageDown</kbd>) |\n\nAlternative Shortcuts\n| Shortcut | Action | Description |\n|----------|--------|-------------|\n| <kbd>Alt</kbd>+<kbd>T</kbd> | New tab | Alternative shortcut for new tab |\n| <kbd>Alt</kbd>+<kbd>W</kbd> | Close tab | Alternative shortcut for closing tab |\n| <kbd>Alt</kbd>+<kbd>P</kbd> | Pin/unpin tab | Toggle pin status of current tab |\n| <kbd>Alt</kbd>+<kbd>1</kbd>-<kbd>9</kbd> | Switch to tab | Alternative tab switching |\n| <kbd>Alt</kbd>+<kbd>PageUp</kbd> | Previous tab | Alternative previous tab shortcut |\n| <kbd>Alt</kbd>+<kbd>PageDown</kbd> | Next tab | Alternative next tab shortcut |\n\n\u2699\ufe0f Settings & Features\n\n| Shortcut | Action | Description |\n|----------|--------|-------------|\n| <kbd>Ctrl</kbd>+<kbd>,</kbd> | Open settings | Access all application settings (Mac: <kbd>\u2318</kbd>+<kbd>,</kbd>) |\n| <kbd>Ctrl</kbd>+<kbd>Shift</kbd>+<kbd>S</kbd> | Create sticky note | Create a new floating sticky note (Mac: <kbd>\u2318</kbd>+<kbd>Shift</kbd>+<kbd>S</kbd>) |\n\n\ud83d\udca1 Tips\n\nPlatform Compatibility\n- Windows/Linux: Use <kbd>Ctrl</kbd> key for shortcuts\n- Mac: Use <kbd>\u2318</kbd> (Command) key instead of <kbd>Ctrl</kbd>\n\nCustomizable Shortcuts\nYou can customize some keyboard shortcuts in Settings \u2192 Advanced \u2192 Keyboard Shortcuts. The following shortcuts can be customized:\n- New tab\n- Search  \n- Settings\n- Tag filtering\n- Bookmark note\n\nBrowser Compatibility\nSome shortcuts may conflict with browser defaults. The wiki provides alternative shortcuts (using <kbd>Alt</kbd>) to avoid conflicts.\n\n---\n\nRemember: <kbd>?</kbd> Shows All Shortcuts\n\nThe most important shortcut to remember is <kbd>?</kbd> - it will show you the complete, up-to-date shortcuts cheatsheet whenever you need it!\n\nCustomize available shortcuts in Settings \u2192 Advanced \u2192 Keyboard Shortcuts to match your workflow.",
      "code_blocks_count": 0
    },
    {
      "path": "/notes/tutorials/features/tab-management.md",
      "context": "tutorials",
      "metadata": {
        "title": "Tab Management Guide",
        "tags": [
          "demo",
          "tabs",
          "productivity",
          "navigation"
        ],
        "created": "2025-06-13",
        "author": "Wiki Admin",
        "description": "Complete guide to tab management features including drag-and-drop, keyboard shortcuts, and multi-tab workflows",
        "updated": null,
        "category": null,
        "status": null,
        "aliases": [],
        "related": [],
        "dependencies": [],
        "keywords": [],
        "tableOfContents": "auto",
        "hideFromSearch": false
      },
      "content_preview": "The Notes Wiki includes a powerful tab system that enables efficient multi-document workflows. Open multiple notes simultaneously, reorder tabs with drag-and-drop, and navigate quickly with keyboard s...",
      "searchable_content": "\nTab Management Guide\n\nThe Notes Wiki includes a powerful tab system that enables efficient multi-document workflows. Open multiple notes simultaneously, reorder tabs with drag-and-drop, and navigate quickly with keyboard shortcuts.\n\n\ud83d\udcd1 Tab Basics\n\nOpening Tabs\n\nNew Empty Tab:\n- Click the + button in the tab bar\n- Press <kbd>Ctrl</kbd>+<kbd>T</kbd>\n- Right-click tab bar \u2192 \"New Tab\"\n\nOpen Note in New Tab:\n- <kbd>Ctrl</kbd>+<kbd>Click</kbd> any note link\n- <kbd>Ctrl</kbd>+<kbd>Click</kbd> search results\n- <kbd>Ctrl</kbd>+<kbd>Click</kbd> sidebar items\n- Right-click note \u2192 \"Open in New Tab\"\n\nDuplicate Current Tab:\n- Press <kbd>Ctrl</kbd>+<kbd>D</kbd>\n- Right-click tab \u2192 \"Duplicate\"\n\nTab Navigation\n\nKeyboard Shortcuts:\n- <kbd>Ctrl</kbd>+<kbd>1</kbd>-<kbd>9</kbd> - Jump to tab by number\n- <kbd>Ctrl</kbd>+<kbd>Tab</kbd> - Next tab\n- <kbd>Ctrl</kbd>+<kbd>Shift</kbd>+<kbd>Tab</kbd> - Previous tab\n\nMouse Navigation:\n- Click tab - Switch to tab\n- Middle-click tab - Close tab\n- Scroll on tab bar - Scroll through many tabs\n\nClosing Tabs\n\nSingle Tab:\n- Click the \u00d7 button on tab\n- Press <kbd>Ctrl</kbd>+<kbd>W</kbd>\n- Middle-click the tab\n\nMultiple Tabs:\n- <kbd>Ctrl</kbd>+<kbd>Shift</kbd>+<kbd>W</kbd> - Close all tabs\n- Right-click tab \u2192 \"Close Other Tabs\"\n- Right-click tab \u2192 \"Close Tabs to Right\"\n\nPinning Tabs\n\nPin Important Tabs:\n- Press <kbd>Alt</kbd>+<kbd>P</kbd> to pin/unpin current tab\n- Right-click tab \u2192 \"Pin Tab\"\n- Click the pin icon on the tab (when available)\n\nPinned Tab Features:\n- Protection from closure - Pinned tabs cannot be accidentally closed\n- Visual indicator - Pin icon shows tab is pinned\n- Persistent position - Pinned tabs stay at the beginning of the tab bar\n- Session persistence - Pinned tabs are restored when reopening the wiki\n- No accidental closure - Close button disabled on pinned tabs\n\n\ud83c\udfaf Drag-and-Drop Features\n\nReordering Tabs\nDrag tabs to reorder them for better organization:\n\n1. Click and hold on a tab\n2. Drag to desired position\n3. Drop to reorder\n\nVisual Feedback:\n- Tab being dragged becomes semi-transparent\n- Drop zone indicators show valid positions\n- Smooth animations provide feedback\n\nAdvanced Drag Operations\n\nDrag to Specific Positions:\n- Beginning - Drag to leftmost position\n- Between tabs - Drop between any two tabs\n- End - Drag to rightmost position\n\nMulti-Tab Dragging (Future Feature):\n- Select multiple tabs with <kbd>Ctrl</kbd>+<kbd>Click</kbd>\n- Drag entire selection to new position\n\n\ud83d\ude80 Tab Workflows\n\nResearch Workflow\nPerfect for gathering information from multiple sources:\n\n\n1. Start with main topic note\n2. Ctrl+Click related links \u2192 Open in background tabs\n3. Ctrl+1-9 to jump between tabs\n4. Drag tabs to group related content\n5. Pin reference tabs with Alt+P to keep them accessible\n\n\nExample Research Session:\n\nTab 1: \"JavaScript Basics\" (main topic)\nTab 2: \"Array Methods Reference\" (reference)\nTab 3: \"Async/Await Tutorial\" (related)\nTab 4: \"Code Examples\" (examples)\nTab 5: \"Best Practices\" (guidelines)\n\n\nWriting Workflow\nIdeal for content creation with references:\n\n\n1. Open draft in main tab\n2. Open reference materials in background tabs\n3. Use Ctrl+Tab to cycle between draft and references\n4. Pin style guide tab with Alt+P for persistent access\n5. Use duplicate tabs for before/after comparisons\n\n\nStudy Workflow\nOrganize learning materials efficiently:\n\n\n1. Course overview in first tab\n2. Current lesson in second tab  \n3. Practice exercises in third tab\n4. Reference materials in remaining tabs\n5. Reorder tabs by learning sequence\n\n\n\ud83c\udfa8 Tab Appearance & Indicators\n\nTab States\n\nActive Tab:\n- Highlighted background\n- Full opacity\n- Bold title text\n\nInactive Tabs:\n- Dimmed background\n- Reduced opacity\n- Normal title text\n\nLoading Tab:\n- Loading spinner icon\n- \"Loading...\" text\n- Disabled interaction\n\nVisual Indicators\n\nIcons:\n- \ud83d\udcc4 - Regular note\n- \ud83c\udfe0 - Home/Index page\n- \ud83d\udd0d - Search results\n- \u2699\ufe0f - Settings page\n- \ud83d\udccb - Empty/New tab\n\nStatus Indicators:\n- Modified - Dot indicator for unsaved changes\n- Pinned - \ud83d\udccc Pin icon for persistent tabs (protected from closure)\n- Shared - Share icon for shared content\n\nTab Titles\nTab titles are intelligently shortened:\n\n- Full title - \"JavaScript Advanced Concepts Tutorial\"\n- Shortened - \"JavaScript Advanced...\"\n- Minimal - \"JavaScript...\"\n- Icon only - When space is very limited\n\n\ud83d\udd27 Tab Management Features\n\nTab Persistence\nTabs are preserved across sessions:\n\n- Automatic saving - Open tabs saved to localStorage\n- Restore on startup - Previous session tabs restored\n- Crash recovery - Tabs recovered after browser crashes\n\nTab Limits\nManage performance with tab limits:\n\n- Default limit - 10 tabs (configurable)\n- Warning threshold - 8 tabs\n- Auto-close - Oldest unused tabs closed when limit reached\n- Exempt tabs - Pinned tabs are never auto-closed and don't count toward the limit\n\nTab Groups (Future Feature)\nOrganize tabs into logical groups:\n\n- Color coding - Assign colors to tab groups\n- Group names - Label groups for easy identification\n- Collapse groups - Hide/show entire groups\n- Group operations - Close/duplicate entire groups\n\n\u2699\ufe0f Tab Settings\n\nCustomization Options\nConfigure tab behavior in Settings \u2192 Tabs:\n\nAppearance:\n- Tab width - Minimum and maximum tab width\n- Show icons - Display icons in tabs\n- Show close buttons - Always/on hover/never\n- Animation speed - Tab transition animations\n\nBehavior:\n- Tab limit - Maximum number of open tabs\n- Auto-close - Close unused tabs automatically\n- Middle-click action - Close tab/new tab/custom\n- Scroll behavior - Mouse wheel scrolling in tab bar\n\nKeyboard:\n- Cycle order - Recently used vs. visual order\n- New tab position - End/after current/custom\n- Close tab focus - Previous/next/recent\n\n\ud83d\udca1 Tab Best Practices\n\nEfficient Tab Organization\n\nGroup Related Content:\n\nResearch tabs: Tab 1-3 (drag together)\nReference tabs: Tab 4-6 (keep at end)\nDraft tabs: Tab 7-8 (keep accessible)\n\n\nUse Descriptive Workflows:\n\nWorkflow 1: Learning new technology\n- Overview \u2192 Tutorial \u2192 Examples \u2192 Reference\n\nWorkflow 2: Project planning  \n- Requirements \u2192 Design \u2192 Research \u2192 Notes\n\nWorkflow 3: Content creation\n- Outline \u2192 Draft \u2192 References \u2192 Style guide\n\n\nPerformance Tips\n\nManage Tab Count:\n- Close unused tabs regularly\n- Use bookmarks for long-term references\n- Pin frequently accessed tabs with Alt+P\n- Set reasonable tab limits\n- Pinned tabs are protected from accidental closure\n\nOptimize for Your Screen:\n- Larger screens - More tabs visible\n- Smaller screens - Fewer tabs, more scrolling\n- Mobile - Limited tab functionality\n\nKeyboard Efficiency\n\nMaster Tab Shortcuts:\n\nCtrl+T - New tab (most important)\nCtrl+W - Close tab (second most important)\nAlt+P - Pin/unpin tab (protect important tabs)\nCtrl+1-9 - Jump to specific tabs\nCtrl+Tab - Cycle through tabs\n\n\nPower User Tips:\n\nCtrl+Shift+T - Reopen closed tab (future)\nCtrl+Shift+N - New private tab (future)\nCtrl+Shift+Tab - Reverse tab cycling\n\n\n\ud83c\udfaf Advanced Tab Techniques\n\nTab Templates\nCreate templates for common workflows:\n\nResearch Template:\n1. Main topic tab\n2. Reference tab  \n3. Notes tab\n4. Examples tab\n\nWriting Template:\n1. Outline tab\n2. Draft tab\n3. Style guide tab\n4. References tab\n\nTab Automation (Future)\nAutomate tab management with rules:\n\n- Auto-pin - Pin tabs matching patterns\n- Auto-close - Close tabs after inactivity\n- Auto-group - Group tabs by domain/topic\n- Auto-restore - Restore specific tab sets\n\nCross-Session Workflows\nMaintain workflows across browser sessions:\n\n1. Save tab sessions - Export current tab set\n2. Name sessions - \"Research Project Alpha\"\n3. Restore sessions - Load saved tab sets\n4. Share sessions - Export for team collaboration\n\n---\n\nTab Management Mastery\n\nEffective tab management transforms your note-taking workflow. Start with basic shortcuts, develop organization patterns, and gradually adopt advanced techniques that match your work style.\n\nRemember: The goal is productivity, not having the most tabs open. Find the balance that works for your workflow and screen size!\n\nQuick Start: Try opening 3-4 related notes in tabs right now and practice using <kbd>Ctrl</kbd>+<kbd>1</kbd>-<kbd>4</kbd> to jump between them. 1. Start with main topic note\n2. Ctrl+Click related links \u2192 Open in background tabs\n3. Ctrl+1-9 to jump between tabs\n4. Drag tabs to group related content\n5. Pin reference tabs with Alt+P to keep them accessible Tab 1: \"JavaScript Basics\" (main topic)\nTab 2: \"Array Methods Reference\" (reference)\nTab 3: \"Async/Await Tutorial\" (related)\nTab 4: \"Code Examples\" (examples)\nTab 5: \"Best Practices\" (guidelines) 1. Open draft in main tab\n2. Open reference materials in background tabs\n3. Use Ctrl+Tab to cycle between draft and references\n4. Pin style guide tab with Alt+P for persistent access\n5. Use duplicate tabs for before/after comparisons 1. Course overview in first tab\n2. Current lesson in second tab  \n3. Practice exercises in third tab\n4. Reference materials in remaining tabs\n5. Reorder tabs by learning sequence Research tabs: Tab 1-3 (drag together)\nReference tabs: Tab 4-6 (keep at end)\nDraft tabs: Tab 7-8 (keep accessible) Workflow 1: Learning new technology\n- Overview \u2192 Tutorial \u2192 Examples \u2192 Reference\n\nWorkflow 2: Project planning  \n- Requirements \u2192 Design \u2192 Research \u2192 Notes\n\nWorkflow 3: Content creation\n- Outline \u2192 Draft \u2192 References \u2192 Style guide Ctrl+T - New tab (most important)\nCtrl+W - Close tab (second most important)\nAlt+P - Pin/unpin tab (protect important tabs)\nCtrl+1-9 - Jump to specific tabs\nCtrl+Tab - Cycle through tabs Ctrl+Shift+T - Reopen closed tab (future)\nCtrl+Shift+N - New private tab (future)\nCtrl+Shift+Tab - Reverse tab cycling",
      "code_blocks_count": 8
    },
    {
      "path": "/notes/tutorials/features/tag-filtering.md",
      "context": "tutorials",
      "metadata": {
        "title": "Tag Filtering",
        "tags": [
          "search",
          "organization",
          "filtering",
          "tags",
          "navigation"
        ],
        "created": "2025-01-23",
        "author": "NotesWiki Team",
        "description": "Master the powerful tag filtering system to quickly find related content",
        "updated": "2025-01-23",
        "category": null,
        "status": null,
        "aliases": [],
        "related": [],
        "dependencies": [],
        "keywords": [],
        "tableOfContents": "auto",
        "hideFromSearch": false
      },
      "content_preview": "Tag filtering is a powerful way to quickly narrow down your notes to specific topics or categories. Unlike text search, tag filtering lets you browse and combine tags visually, making it perfect for e...",
      "searchable_content": "\nTag Filtering\n\nTag filtering is a powerful way to quickly narrow down your notes to specific topics or categories. Unlike text search, tag filtering lets you browse and combine tags visually, making it perfect for exploring related content or finding notes by category.\n\nOpening the Tag Filter\n\nAccess the tag filter in two ways:\n\n1. Keyboard Shortcut: Press Ctrl + F\n2. Tag Filter Button: Click the tag icon (\ud83c\udff7\ufe0f) in the header\n\nThis opens the visual tag filter modal showing all available tags.\n\nUnderstanding the Tag Filter Interface\n\nTag Display\n- Tag badges show each tag with its note count\n- Color coding indicates tag state:\n  - Normal (gray) - Available for selection\n  - Selected (blue) - Included in filter\n  - Excluded (red) - Explicitly excluded from results\n\nTag Search\n- Search box at the top to quickly find specific tags\n- Type to filter the tag list in real-time\n- Useful when you have many tags\n\nFilter Information\n- Active filter count shows number of selected tags\n- Results preview indicates how many notes match\n- Filter mode shows AND/OR logic (if applicable)\n\nBasic Tag Selection\n\nIncluding Tags (OR Logic)\n\n1. Click any tag to include it in your filter\n2. Tag turns blue indicating selection\n3. Results show notes with ANY of the selected tags\n4. Click additional tags to expand results\n\nExample: Selecting \"javascript\" and \"tutorial\" shows all notes tagged with either.\n\nExcluding Tags\n\n1. Right-click any tag to exclude it\n2. Tag turns red indicating exclusion\n3. Results hide notes with that tag\n4. Useful for filtering out unwanted content\n\nAlternative: Hold Ctrl while clicking to exclude\n\nExample: Select \"tutorial\" but exclude \"advanced\" to find beginner tutorials.\n\nAdvanced Filtering Techniques\n\nCombining Includes and Excludes\n\nCreate precise filters by combining both:\n\n1. Include tags for topics you want\n2. Exclude tags for content to avoid\n3. Results show included tags minus excluded ones\n\nExample Use Case:\n- Include: \"python\", \"tutorial\"\n- Exclude: \"deprecated\", \"draft\"\n- Result: Current Python tutorials only\n\nMulti-Tag Workflows\n\nResearch Workflow:\n1. Include all relevant topic tags\n2. Exclude \"archived\" or \"outdated\"\n3. Browse filtered results\n\nProject Organization:\n1. Include your project tag\n2. Include status tags like \"active\" or \"todo\"\n3. Exclude \"completed\" if focusing on current work\n\nTag Filter Controls\n\nClear Filters\n- Clear All button removes all tag selections\n- Resets to show all notes\n- Keyboard: Escape also clears and closes\n\nApply Filter\n- Apply button activates the filter\n- Updates the note list immediately\n- Filter remains active until cleared\n\nVisual Indicators\n- Badge numbers show note count per tag\n- Highlighted tags show current selection\n- Strikethrough on excluded tags (in some themes)\n\nSearch Operators vs Tag Filter\n\nWhen to Use Tag Filter\n\nUse tag filtering when you want to:\n- Browse by category without specific keywords\n- Combine multiple topics visually\n- Exclude categories of content\n- Explore available tags in your wiki\n\nWhen to Use Search\n\nUse text search (Ctrl + K) when you:\n- Know specific keywords\n- Need full-text search\n- Want to combine text and tag queries\n- Need advanced operators\n\nCombining Both\n\nPower user tip: Use search with tag operators:\n\ntag:javascript tag:tutorial -tag:advanced react\n\nThis searches for \"react\" in JavaScript tutorials, excluding advanced ones.\n\nPractical Examples\n\n1. Finding Learning Resources\n\nInclude: tutorial, guide, howto\nExclude: advanced, reference\n\n\n2. Project Management\n\nInclude: project-x, active\nExclude: completed, archived\n\n\n3. Knowledge Areas\n\nInclude: programming, web-dev\nExclude: deprecated, outdated\n\n\n4. Time-Based Filtering\n\nInclude: 2024, current\nExclude: archived, historical\n\n\nTag Organization Best Practices\n\nHierarchical Tagging\nConsider using prefixes for organization:\n- project-website\n- project-mobile\n- status-active\n- status-completed\n- type-tutorial\n- type-reference\n\nConsistent Naming\n- Use lowercase for consistency\n- Use hyphens for multi-word tags\n- Avoid special characters\n- Keep tags concise but descriptive\n\nTag Categories\nOrganize tags by purpose:\n- Topics: javascript, python, docker\n- Types: tutorial, reference, snippet\n- Status: draft, review, published\n- Projects: project-a, project-b\n- Dates: 2024, q1-2024\n\nPerformance Tips\n\nWith Many Tags\n- Use the search box to quickly find tags\n- Organize tags with consistent prefixes\n- Regular cleanup of unused tags\n- Consider tag hierarchies\n\nLarge Note Collections\n- Start with broad categories\n- Progressively narrow with excludes\n- Save common filter combinations\n- Use search for very specific queries\n\nKeyboard Shortcuts\n\n| Action | Shortcut |\n|--------|----------|\n| Open Tag Filter | Ctrl + F |\n| Clear and Close | Escape |\n| Toggle Tag | Click |\n| Exclude Tag | Right-click or Ctrl + Click |\n\nRelated Features\n\n- [[Search Guide]] - Full-text search and operators\n- [[Bookmarks]] - Save frequently accessed notes\n- [[Context Filtering]] - Filter by folders\n- [[Recent Files & Bookmarks|Recent Files]] - Quick access to recent work\n\nTips and Tricks\n\n1. Quick Exclude: Right-click is fastest for exclusions\n2. Bulk Select: Click multiple tags rapidly without waiting\n3. Preview Results: Watch the count update as you select\n4. Escape to Reset: Quick way to start over\n5. Combine Methods: Use both tag filter and search for precision\n\nCommon Issues\n\nQ: No tags appear in the filter\nA: Ensure your notes have tags in their frontmatter\n\nQ: Filter isn't applying\nA: Click the Apply button after making selections\n\nQ: Too many tags to browse\nA: Use the search box to filter the tag list\n\nQ: Can't see excluded tags clearly\nA: Some themes show exclusions better than others tag:javascript tag:tutorial -tag:advanced react Include: tutorial, guide, howto\nExclude: advanced, reference Include: project-x, active\nExclude: completed, archived Include: programming, web-dev\nExclude: deprecated, outdated Include: 2024, current\nExclude: archived, historical",
      "code_blocks_count": 5
    },
    {
      "path": "/notes/tutorials/features/custom-css.md",
      "context": "tutorials",
      "metadata": {
        "title": "Custom CSS",
        "tags": [
          "customization",
          "advanced",
          "styling",
          "css",
          "themes"
        ],
        "created": "2025-01-23",
        "author": "NotesWiki Team",
        "description": "Customize NotesWiki's appearance with your own CSS styles",
        "updated": "2025-01-23",
        "category": null,
        "status": null,
        "aliases": [],
        "related": [],
        "dependencies": [],
        "keywords": [],
        "tableOfContents": "auto",
        "hideFromSearch": false
      },
      "content_preview": "Custom CSS allows you to personalize NotesWiki beyond the built-in themes and settings. Whether you want to tweak a few colors, adjust spacing, or create an entirely unique look, custom CSS gives you ...",
      "searchable_content": "\nCustom CSS\n\nCustom CSS allows you to personalize NotesWiki beyond the built-in themes and settings. Whether you want to tweak a few colors, adjust spacing, or create an entirely unique look, custom CSS gives you complete control over the visual appearance.\n\nAccessing Custom CSS\n\n1. Open Settings (\u2699\ufe0f) or press Ctrl + ,\n2. Navigate to the Advanced tab\n3. Find the Custom CSS section\n4. Enter your CSS in the text editor\n5. Click Save to apply changes\n\nChanges take effect immediately without needing to refresh.\n\nCSS Variables\n\nNotesWiki uses CSS custom properties (variables) for theming. You can override any of these:\n\nCore Color Variables\ncss\n:root {\n  / Backgrounds /\n  --bg-primary: #1a1a1a;\n  --bg-secondary: #252525;\n  --bg-sidebar: #1e1e1e;\n  \n  / Text Colors /\n  --text-primary: #ffffff;\n  --text-secondary: #cccccc;\n  --text-muted: #999999;\n  \n  / Accent Colors /\n  --accent-primary: #007acc;\n  --accent-secondary: #0098ff;\n  --accent-error: #ff6b6b;\n  --accent-warning: #ffa500;\n  --accent-success: #4caf50;\n}\n\n\nCommon Customizations\n\n1. Change Accent Color\ncss\n:root {\n  --accent-primary: #ff6b6b;\n  --accent-secondary: #ff8787;\n  --link-color: #ff6b6b;\n}\n\n\n2. Adjust Spacing\ncss\n:root {\n  --spacing-xs: 0.5rem;\n  --spacing-sm: 1rem;\n  --spacing-md: 1.5rem;\n  --spacing-lg: 2rem;\n}\n\n\n3. Modify Fonts\ncss\n:root {\n  --font-family: 'Georgia', serif;\n  --font-mono: 'Fira Code', monospace;\n}\n\n\nComponent Styling\n\nNavigation Sidebar\ncss\n/ Wider sidebar /\n.sidebar {\n  width: 300px !important;\n}\n\n/ Custom folder colors /\n.folder-name {\n  color: #ffa500;\n}\n\n/ Highlight active file /\n.tree-item.active {\n  background-color: rgba(255, 255, 255, 0.1);\n  font-weight: bold;\n}\n\n\nTabs\ncss\n/ Rounded tabs /\n.tab {\n  border-radius: 8px 8px 0 0;\n  margin: 0 2px;\n}\n\n/ Colorful pinned tabs /\n.tab.pinned {\n  background-color: #ff6b6b;\n}\n\n/ Tab hover effect /\n.tab:hover {\n  transform: translateY(-2px);\n  transition: transform 0.2s;\n}\n\n\nContent Area\ncss\n/ Custom heading styles /\n.content h1 {\n  border-bottom: 3px solid var(--accent-primary);\n  padding-bottom: 0.5rem;\n}\n\n/ Styled blockquotes /\nblockquote {\n  border-left: 4px solid #ffa500;\n  background-color: rgba(255, 165, 0, 0.1);\n  font-style: italic;\n}\n\n/ Code block enhancements /\npre {\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.3);\n  border-radius: 8px;\n}\n\n\nAdvanced Customizations\n\nCustom Callouts\ncss\n/ Create a custom callout type /\n.callout-custom {\n  background-color: #e3f2fd;\n  border-color: #2196f3;\n  color: #0d47a1;\n}\n\n.callout-custom .callout-icon::before {\n  content: \"\ud83d\udca1\";\n}\n\n\nAnimation Effects\ncss\n/ Smooth transitions /\n {\n  transition: background-color 0.3s ease;\n}\n\n/ Animated links /\na {\n  position: relative;\n  text-decoration: none;\n}\n\na::after {\n  content: '';\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 0;\n  height: 2px;\n  background-color: var(--accent-primary);\n  transition: width 0.3s;\n}\n\na:hover::after {\n  width: 100%;\n}\n\n\nFocus Mode Enhancements\ncss\n/ Ultra-focused reading mode /\nbody.focus-mode .content {\n  max-width: 650px;\n  font-size: 1.2em;\n  line-height: 1.8;\n}\n\nbody.focus-mode {\n  background-color: #fafafa;\n}\n\n\nTheme Overrides\n\nOverride specific theme elements while keeping the base theme:\n\ncss\n/ Override theme colors while keeping theme structure /\n[data-theme=\"ayu-mirage\"] {\n  --bg-primary: #1f2430;\n  --accent-primary: #ffcc66;\n}\n\n/ Conditional styling based on theme /\n[data-theme=\"dark\"] .content {\n  text-shadow: 0 0 2px rgba(0, 0, 0, 0.5);\n}\n\n\nResponsive Customizations\n\ncss\n/ Mobile-specific styles /\n@media (max-width: 768px) {\n  .sidebar {\n    width: 100% !important;\n  }\n  \n  .content {\n    padding: 1rem !important;\n  }\n}\n\n/ Large screen optimizations /\n@media (min-width: 1400px) {\n  .content {\n    max-width: 1200px;\n  }\n}\n\n\nBest Practices\n\n1. Use CSS Variables\ncss\n/ Good - uses variables /\n.custom-element {\n  color: var(--text-primary);\n  background: var(--bg-secondary);\n}\n\n/ Avoid - hardcoded colors /\n.custom-element {\n  color: #ffffff;\n  background: #252525;\n}\n\n\n2. Maintain Specificity\ncss\n/ Use specific selectors /\n.sidebar .tree-item.active {\n  / styles /\n}\n\n/ Avoid !important when possible /\n.tree-item {\n  color: red !important; / Try to avoid /\n}\n\n\n3. Test Across Themes\nAlways test your custom CSS with multiple themes:\n- Light themes\n- Dark themes\n- High contrast themes\n\nCommon Use Cases\n\n1. Brand Colors\ncss\n:root {\n  --accent-primary: #your-brand-color;\n  --accent-secondary: #your-secondary-color;\n}\n\n\n2. Improved Readability\ncss\n.content {\n  font-size: 18px;\n  line-height: 1.7;\n  letter-spacing: 0.02em;\n}\n\n\n3. Custom Syntax Highlighting\ncss\n/ Override Prism.js theme colors /\n.token.keyword {\n  color: #ff79c6;\n}\n\n.token.string {\n  color: #f1fa8c;\n}\n\n\n4. Hide Elements\ncss\n/ Hide elements you don't use /\n.pomodoro-timer {\n  display: none;\n}\n\n/ Hide breadcrumbs /\n.breadcrumb {\n  display: none;\n}\n\n\nDebugging Tips\n\n1. Use Browser DevTools\n- Right-click \u2192 Inspect Element\n- Test CSS changes live\n- Copy working styles to custom CSS\n\n2. Check Specificity\nIf styles aren't applying:\ncss\n/ Increase specificity /\nbody .content h1 {\n  / styles /\n}\n\n/ Or use !important as last resort /\n.element {\n  color: red !important;\n}\n\n\n3. Validate CSS\nEnsure your CSS is valid:\n- No missing semicolons\n- Proper bracket matching\n- Valid property names\n\nSafety and Performance\n\nDo's\n- \u2705 Override CSS variables when possible\n- \u2705 Test with multiple themes\n- \u2705 Keep custom CSS organized\n- \u2705 Comment complex sections\n- \u2705 Back up your custom CSS\n\nDon'ts\n- \u274c Don't hide critical UI elements\n- \u274c Avoid breaking layouts with position changes\n- \u274c Don't use excessive animations\n- \u274c Avoid very large CSS files\n\nExamples Gallery\n\nMinimal Writer Theme\ncss\n/ Clean, distraction-free writing /\n:root {\n  --bg-primary: #fafafa;\n  --text-primary: #333;\n  --accent-primary: #333;\n}\n\n.sidebar { width: 200px; }\n.header { border-bottom: none; }\n.content { max-width: 650px; }\n\n\nNeon Glow Effect\ncss\n/ Cyberpunk-style glow /\n.tab.active {\n  box-shadow: 0 0 20px var(--accent-primary);\n}\n\nh1, h2 {\n  text-shadow: 0 0 10px currentColor;\n}\n\n\nPaper Notebook Style\ncss\n/ Lined paper effect /\n.content {\n  background-image: repeating-linear-gradient(\n    transparent,\n    transparent 1.5rem,\n    #e0e0e0 1.5rem,\n    #e0e0e0 calc(1.5rem + 1px)\n  );\n  line-height: 1.5rem;\n}\n\n\nRelated Features\n\n- [[Themes]] - Built-in theme system\n- [[Typography and Fonts|Typography]] - Font customization\n- [[Settings Customization]] - Other customization options\n- [[Focus Mode]] - Distraction-free writing\n- [[Print Mode|Print Styles]] - Custom print styling\n\nSharing Custom CSS\n\nShare your custom CSS with others:\n1. Copy your CSS from settings\n2. Save to a .css file\n3. Share via GitHub Gist or similar\n4. Others can paste into their custom CSS\n\nRemember: Custom CSS is stored locally and needs to be manually backed up! :root {\n  /* Backgrounds */\n  --bg-primary: #1a1a1a;\n  --bg-secondary: #252525;\n  --bg-sidebar: #1e1e1e;\n  \n  /* Text Colors */\n  --text-primary: #ffffff;\n  --text-secondary: #cccccc;\n  --text-muted: #999999;\n  \n  /* Accent Colors */\n  --accent-primary: #007acc;\n  --accent-secondary: #0098ff;\n  --accent-error: #ff6b6b;\n  --accent-warning: #ffa500;\n  --accent-success: #4caf50;\n} :root {\n  --accent-primary: #ff6b6b;\n  --accent-secondary: #ff8787;\n  --link-color: #ff6b6b;\n} :root {\n  --spacing-xs: 0.5rem;\n  --spacing-sm: 1rem;\n  --spacing-md: 1.5rem;\n  --spacing-lg: 2rem;\n} :root {\n  --font-family: 'Georgia', serif;\n  --font-mono: 'Fira Code', monospace;\n} /* Wider sidebar */\n.sidebar {\n  width: 300px !important;\n}\n\n/* Custom folder colors */\n.folder-name {\n  color: #ffa500;\n}\n\n/* Highlight active file */\n.tree-item.active {\n  background-color: rgba(255, 255, 255, 0.1);\n  font-weight: bold;\n} /* Rounded tabs */\n.tab {\n  border-radius: 8px 8px 0 0;\n  margin: 0 2px;\n}\n\n/* Colorful pinned tabs */\n.tab.pinned {\n  background-color: #ff6b6b;\n}\n\n/* Tab hover effect */\n.tab:hover {\n  transform: translateY(-2px);\n  transition: transform 0.2s;\n} /* Custom heading styles */\n.content h1 {\n  border-bottom: 3px solid var(--accent-primary);\n  padding-bottom: 0.5rem;\n}\n\n/* Styled blockquotes */\nblockquote {\n  border-left: 4px solid #ffa500;\n  background-color: rgba(255, 165, 0, 0.1);\n  font-style: italic;\n}\n\n/* Code block enhancements */\npre {\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.3);\n  border-radius: 8px;\n} /* Create a custom callout type */\n.callout-custom {\n  background-color: #e3f2fd;\n  border-color: #2196f3;\n  color: #0d47a1;\n}\n\n.callout-custom .callout-icon::before {\n  content: \"\ud83d\udca1\";\n} /* Smooth transitions */\n* {\n  transition: background-color 0.3s ease;\n}\n\n/* Animated links */\na {\n  position: relative;\n  text-decoration: none;\n}\n\na::after {\n  content: '';\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 0;\n  height: 2px;\n  background-color: var(--accent-primary);\n  transition: width 0.3s;\n}\n\na:hover::after {\n  width: 100%;\n} /* Ultra-focused reading mode */\nbody.focus-mode .content {\n  max-width: 650px;\n  font-size: 1.2em;\n  line-height: 1.8;\n}\n\nbody.focus-mode {\n  background-color: #fafafa;\n} /* Override theme colors while keeping theme structure */\n[data-theme=\"ayu-mirage\"] {\n  --bg-primary: #1f2430;\n  --accent-primary: #ffcc66;\n}\n\n/* Conditional styling based on theme */\n[data-theme*=\"dark\"] .content {\n  text-shadow: 0 0 2px rgba(0, 0, 0, 0.5);\n} /* Mobile-specific styles */\n@media (max-width: 768px) {\n  .sidebar {\n    width: 100% !important;\n  }\n  \n  .content {\n    padding: 1rem !important;\n  }\n}\n\n/* Large screen optimizations */\n@media (min-width: 1400px) {\n  .content {\n    max-width: 1200px;\n  }\n} /* Good - uses variables */\n.custom-element {\n  color: var(--text-primary);\n  background: var(--bg-secondary);\n}\n\n/* Avoid - hardcoded colors */\n.custom-element {\n  color: #ffffff;\n  background: #252525;\n} /* Use specific selectors */\n.sidebar .tree-item.active {\n  /* styles */\n}\n\n/* Avoid !important when possible */\n.tree-item {\n  color: red !important; /* Try to avoid */\n} :root {\n  --accent-primary: #your-brand-color;\n  --accent-secondary: #your-secondary-color;\n} .content {\n  font-size: 18px;\n  line-height: 1.7;\n  letter-spacing: 0.02em;\n} /* Override Prism.js theme colors */\n.token.keyword {\n  color: #ff79c6;\n}\n\n.token.string {\n  color: #f1fa8c;\n} /* Hide elements you don't use */\n.pomodoro-timer {\n  display: none;\n}\n\n/* Hide breadcrumbs */\n.breadcrumb {\n  display: none;\n} /* Increase specificity */\nbody .content h1 {\n  /* styles */\n}\n\n/* Or use !important as last resort */\n.element {\n  color: red !important;\n} /* Clean, distraction-free writing */\n:root {\n  --bg-primary: #fafafa;\n  --text-primary: #333;\n  --accent-primary: #333;\n}\n\n.sidebar { width: 200px; }\n.header { border-bottom: none; }\n.content { max-width: 650px; } /* Cyberpunk-style glow */\n.tab.active {\n  box-shadow: 0 0 20px var(--accent-primary);\n}\n\nh1, h2 {\n  text-shadow: 0 0 10px currentColor;\n} /* Lined paper effect */\n.content {\n  background-image: repeating-linear-gradient(\n    transparent,\n    transparent 1.5rem,\n    #e0e0e0 1.5rem,\n    #e0e0e0 calc(1.5rem + 1px)\n  );\n  line-height: 1.5rem;\n}",
      "code_blocks_count": 22
    },
    {
      "path": "/notes/index.md",
      "context": null,
      "metadata": {
        "title": "Notes Wiki - Home",
        "tags": [
          "home",
          "index",
          "documentation"
        ],
        "created": "2025-01-18",
        "author": "Wiki Team",
        "description": "Your personal knowledge management system - start here!",
        "updated": null,
        "category": null,
        "status": null,
        "aliases": [],
        "related": [],
        "dependencies": [],
        "keywords": [],
        "tableOfContents": "auto",
        "hideFromSearch": false
      },
      "content_preview": "Your powerful, offline-first personal knowledge management system. Everything you need to organize, search, and access your notes efficiently.\n\n\n\nNew to Notes Wiki? Start here:\n1. [[tutorials/getting-...",
      "searchable_content": "\nWelcome to Notes Wiki \ud83c\udf89\n\nYour powerful, offline-first personal knowledge management system. Everything you need to organize, search, and access your notes efficiently.\n\n\ud83d\ude80 Quick Start\n\nNew to Notes Wiki? Start here:\n1. [[tutorials/getting-started/welcome|Welcome Guide]] - 5-minute introduction\n2. [[tutorials/getting-started/creating-notes|Creating Notes]] - Learn note structure and organization\n3. [[tutorials/features/search-guide|Search Guide]] - Master the powerful search system\n4. [[tutorials/features/keyboard-shortcuts|Keyboard Shortcuts]] - Speed up your workflow\n\n\ud83d\udcda Feature Tutorials\n\n\ud83d\udcdd Core Features\n- [[tutorials/features/tab-management|Tab Management]] - Multi-tab browsing system\n- [[tutorials/features/search-guide|Advanced Search]] - Powerful search with operators\n- [[tutorials/features/themes|Themes Gallery]] - 70 beautiful themes\n- [[tutorials/features/settings-customization|Settings & Customization]] - Make it yours\n\n\ud83e\udded Navigation & Organization  \n- [[tutorials/features/table-of-contents|Table of Contents]] - Auto-generated navigation\n- [[tutorials/features/wiki-links|Wiki-Style Links]] - Connect your notes\n- [[tutorials/features/bookmarks|Bookmarks]] - Save favorite notes\n- [[tutorials/features/recent-files-bookmarks|Recent Files & Pinning]] - Quick access to files\n- [[tutorials/features/context-filtering|Context Filtering]] - Organize by categories\n\n\ud83d\udcd6 Reading Experience\n- [[tutorials/features/focus-mode|Focus Mode]] - Distraction-free reading\n- [[tutorials/features/reading-progress|Reading Progress]] - Track your position\n- [[tutorials/features/in-note-search|In-Note Search]] - Find text within notes\n\n\ud83d\udcbb Content Creation\n- [[tutorials/features/code-blocks|Code Blocks]] - Syntax highlighting & features\n- [[tutorials/features/markdown-callouts|Markdown Callouts]] - Highlight important info\n- [[tutorials/features/images-media|Images & Media]] - Embed visual content\n\n\ud83d\udee0\ufe0f Productivity Tools\n- [[tutorials/features/pomodoro-timer|Pomodoro Timer]] - Built-in focus timer\n- [[tutorials/features/split-view|Split View]] - Work with multiple notes side-by-side\n- [[tutorials/features/sticky-notes|Sticky Notes]] - Floating mini-notes for quick thoughts\n- [[tutorials/features/keyboard-shortcuts|Keyboard Shortcuts]] - Complete shortcut guide\n\n\ud83d\ude80 Advanced Features\n\n- [[tutorials/advanced/combined-code-blocks|Combined Code Blocks]] - Auto-aggregate code from notes\n\n\ud83c\udfaf Common Workflows\n\n\ud83d\udcda Knowledge Management\n1. Create structured notes with frontmatter\n2. Organize with folders and tags\n3. Link related notes with wiki-links\n4. Search and filter as needed\n\n\ud83d\udc68\u200d\ud83d\udcbb Technical Documentation\n1. Use code blocks with syntax highlighting\n2. Create tutorials with combined code blocks\n3. Add callouts for important information\n4. Organize by project or technology\n\n\ud83d\udcdd Personal Notes\n1. Create daily journal entries\n2. Tag for easy retrieval\n3. Use bookmarks for frequent access\n4. Track reading progress on long notes\n\n\ud83d\udd27 Technical Information\n\nSystem Requirements\n- \u2705 Any modern web browser\n- \u2705 No installation required\n- \u2705 Works offline after first load\n- \u2705 No server dependencies\n\nBrowser Compatibility\n- Chrome 57+\n- Firefox 52+\n- Safari 10.1+\n- Edge 16+\n\nKey Technologies\n- Vanilla JavaScript (no framework dependencies)\n- Markdown rendering with marked.js\n- Syntax highlighting with Prism.js\n- Pure CSS themes\n\n\ud83d\udcca Feature Overview\n\n| Category | Features |\n|----------|----------|\n| Navigation | Tabs, Search, TOC, Wiki Links, Bookmarks |\n| Editing | Markdown, Code Blocks, Callouts, Frontmatter |\n| Customization | 50+ Themes, Settings, Keyboard Shortcuts |\n| Productivity | Focus Mode, Timer, Recent Files, Progress Tracking |\n| Organization | Tags, Contexts, Folders, Search Operators |\n\n\ud83c\udd98 Need Help?\n\n- Keyboard Help: Press ? anytime to see all shortcuts\n- Search Tips: Use \"quotes\" for exact phrases\n- Navigation: Ctrl+K for quick search\n- Settings: Ctrl+, to customize\n\n\ud83c\udf89 Tips for Success\n\n1. Start Simple: Create a few notes to get familiar\n2. Use Tags: They make finding notes much easier\n3. Link Notes: Build connections with wiki-links\n4. Customize: Find a theme and settings you love\n5. Keyboard Shortcuts: Learn a few to speed up\n\n---\n\nReady to start? Create your first note or explore the tutorials above. Welcome to your new knowledge management system!",
      "code_blocks_count": 0
    },
    {
      "path": "/notes/tutorials/getting-started/welcome.md",
      "context": "tutorials",
      "metadata": {
        "title": "Welcome to Notes Wiki",
        "tags": [
          "tutorial",
          "getting-started"
        ],
        "created": "2025-01-18",
        "author": "Wiki Team",
        "description": "Your comprehensive guide to getting started with Notes Wiki",
        "updated": null,
        "category": null,
        "status": null,
        "aliases": [],
        "related": [],
        "dependencies": [],
        "keywords": [],
        "tableOfContents": "auto",
        "hideFromSearch": false
      },
      "content_preview": "Welcome to your personal knowledge management system! This guide will help you get started with Notes Wiki in just a few minutes.\n\n\n\n\n\n1. Navigate Notes: Click on any note in the sidebar to open it\n2....",
      "searchable_content": "\nWelcome to Notes Wiki\n\nWelcome to your personal knowledge management system! This guide will help you get started with Notes Wiki in just a few minutes.\n\n\ud83d\ude80 Quick Start\n\nFirst Steps\n\n1. Navigate Notes: Click on any note in the sidebar to open it\n2. Search Everything: Press Ctrl+K or / to search across all notes\n3. Open Multiple Tabs: Middle-click or Ctrl+click notes to open in new tabs\n4. Switch Themes: Press Ctrl+, to open settings and choose from 70 themes\n\nEssential Features at a Glance\n\n- \ud83d\udcd1 Multi-tab browsing - Work with multiple notes simultaneously\n- \ud83d\udd0d Powerful search - Find anything instantly with advanced operators\n- \ud83c\udfa8 70 themes - Customize your reading experience\n- \ud83d\udcf1 Fully responsive - Works on desktop, tablet, and mobile\n- \ud83d\udd12 Privacy-first - Everything runs locally in your browser\n\n\ud83d\udcc2 Understanding the Interface\n\nSidebar Navigation\n- Contexts: Top-level folders that organize your notes (Personal, Technical, etc.)\n- File Tree: Expandable folders showing your note structure\n- Recent Files: Quick access to recently viewed notes\n- Filter by Tags: Click tags to filter the file tree\n\nMain Content Area\n- Tabs: Each open note appears as a tab (drag to reorder)\n- Note Content: The main reading area with full markdown support\n- Table of Contents: Auto-generated outline for easy navigation\n- Reading Progress: Track your position in longer notes\n\nHeader Actions\n- Search (Ctrl+K): Global search across all notes\n- Context Filter: Switch between note categories\n- Settings (Ctrl+,): Customize your experience\n\n\ud83c\udfaf Core Concepts\n\nNotes Are Markdown Files\nAll notes are written in Markdown with YAML frontmatter:\n\nyaml\n---\ntitle: My Note Title\ntags: [tag1, tag2]\nauthor: Your Name\ncreated: 2025-01-18\n---\n\nNote content starts here\n\n\nEverything Is Searchable\nThe search indexes:\n- Note titles and content\n- Code blocks\n- Tags and metadata\n- File paths\n\nOffline-First Design\nOnce loaded, Notes Wiki works completely offline. Your notes are stored as simple markdown files that you can edit with any text editor.\n\n\ud83d\ude80 Next Steps\n\nExplore these tutorials to master Notes Wiki:\n\n1. [[../features/search-guide|Master the Search]] - Learn advanced search techniques\n2. [[../features/tab-management|Tab Management]] - Work efficiently with multiple notes\n3. [[../features/keyboard-shortcuts|Keyboard Shortcuts]] - Speed up your workflow\n4. [[../features/themes|Themes Gallery]] - Customize your appearance\n\n\ud83d\udca1 Pro Tips\n\n- Press ? anytime to see all keyboard shortcuts\n- Press F to enter focus mode for distraction-free reading\n- Use Ctrl+F to search within the current note\n- Drag and drop tabs to reorder them\n- Right-click tabs for more options\n\n\ud83c\udd98 Getting Help\n\n- Keyboard Shortcuts: Press ? to see all available shortcuts\n- This Tutorial: Return here anytime by clicking \"Welcome\" in the tutorials\n- Report Issues: Found a bug? Report it on our GitHub page\n\n---\n\nReady to dive in? Start by exploring the features tutorials or just begin taking notes. Welcome to your new knowledge management system! \ud83c\udf89 ---\ntitle: My Note Title\ntags: [tag1, tag2]\nauthor: Your Name\ncreated: 2025-01-18\n---\n\n# Note content starts here",
      "code_blocks_count": 1
    },
    {
      "path": "/notes/tutorials/getting-started/creating-notes.md",
      "context": "tutorials",
      "metadata": {
        "title": "Creating and Organizing Notes",
        "tags": [
          "tutorial",
          "getting-started",
          "markdown",
          "frontmatter"
        ],
        "created": "2025-01-18",
        "author": "Wiki Team",
        "description": "Learn how to create, structure, and organize your notes effectively",
        "updated": null,
        "category": null,
        "status": null,
        "aliases": [],
        "related": [],
        "dependencies": [],
        "keywords": [],
        "tableOfContents": "auto",
        "hideFromSearch": false
      },
      "content_preview": "Learn how to create well-structured notes with proper metadata, organize them effectively, and make them searchable.\n\n\n\n\nEvery note consists of two parts:\n1. Frontmatter: Metadata in YAML format\n2. Co...",
      "searchable_content": "\nCreating and Organizing Notes\n\nLearn how to create well-structured notes with proper metadata, organize them effectively, and make them searchable.\n\n\ud83d\udcdd Note Structure\n\nBasic Anatomy\nEvery note consists of two parts:\n1. Frontmatter: Metadata in YAML format\n2. Content: Your actual note in Markdown\n\nExample Note\n\nmarkdown\n---\ntitle: My First Note\ntags: [personal, ideas]\nauthor: Your Name\ncreated: 2025-01-18\ndescription: A brief description for search results\n---\n\nMy First Note\n\nYour content starts here...\n\n\n\ud83d\udccb Frontmatter Explained\n\nRequired Fields\n\nTitle\nThe display name for your note:\nyaml\ntitle: JavaScript Array Methods\n\n\nRecommended Fields\n\nTags\nCategorize your notes for easy filtering:\nyaml\ntags: [javascript, programming, tutorial]\n\n\nAuthor\nTrack who created the note:\nyaml\nauthor: John Doe\n\n\nCreated Date\nWhen the note was first written:\nyaml\ncreated: 2025-01-18\n\n\nDescription\nBrief summary for search results:\nyaml\ndescription: Complete guide to JavaScript array methods with examples\n\n\nOptional Fields\n\nUpdated Date\nTrack last modification:\nyaml\nupdated: 2025-01-19\n\n\nCategory\nAdditional organization:\nyaml\ncategory: tutorials\n\n\nStatus\nTrack note completion:\nyaml\nstatus: draft  # or 'complete', 'review'\n\n\n\ud83d\udcc1 File Organization\n\nDirectory Structure\nOrganize notes in logical folders:\n\nnotes/\n\u251c\u2500\u2500 personal/\n\u2502   \u251c\u2500\u2500 journal/\n\u2502   \u2514\u2500\u2500 ideas/\n\u251c\u2500\u2500 work/\n\u2502   \u251c\u2500\u2500 projects/\n\u2502   \u2514\u2500\u2500 meetings/\n\u251c\u2500\u2500 learning/\n\u2502   \u251c\u2500\u2500 courses/\n\u2502   \u2514\u2500\u2500 books/\n\u2514\u2500\u2500 reference/\n    \u251c\u2500\u2500 code-snippets/\n    \u2514\u2500\u2500 cheatsheets/\n\n\nNaming Conventions\n\nFile Names\n- Use descriptive names: docker-deployment-guide.md\n- Avoid spaces: use hyphens or underscores\n- Keep lowercase for consistency\n- Include dates for time-sensitive notes: 2025-01-18-meeting-notes.md\n\nFolder Names\n- Short and descriptive\n- Use singular or plural consistently\n- Group related content logically\n\n\ud83c\udff7\ufe0f Effective Tagging\n\nTag Strategy\n\nHierarchical Tags\nCreate tag hierarchies:\nyaml\ntags: [programming, programming/javascript, programming/javascript/react]\n\n\nConsistent Naming\n- Choose singular or plural: book vs books\n- Use consistent separators: machine-learning vs machinelearning\n- Document your conventions\n\nCommon Tag Categories\n- Topic: javascript, docker, react\n- Type: tutorial, reference, journal\n- Status: draft, complete, needs-review\n- Project: project-x, client-y\n\n\ud83c\udfa8 Content Best Practices\n\nUse Markdown Features\n\nHeadings for Structure\nmarkdown\nMain Title\nSection\nSubsection\n\n\nLists for Organization\nmarkdown\n- Bullet points for unordered items\n1. Numbered lists for sequences\n   - Nested items with indentation\n\n\nCode Blocks with Language\nmarkdown\njavascript\nconst example = \"Always specify the language\";\n\n\n\nLinks and References\nmarkdown\nExternal Link\n[[Internal Wiki Link]]\n\n\n\ud83d\udd0d Making Notes Searchable\n\nOptimize for Search\n\nUse Descriptive Titles\n- \u2705 \"Docker Compose Multi-Container Setup\"\n- \u274c \"Docker Notes\"\n\nInclude Keywords\nAdd relevant terms in your content naturally\n\nWrite Clear Descriptions\nThe description field appears in search results\n\nTag Thoroughly\nMore tags = easier to find\n\n\ud83d\udca1 Organization Tips\n\nPersonal Knowledge Management\n\nDaily Notes\nyaml\ntitle: Daily Note - 2025-01-18\ntags: [journal, daily]\n\n\nProject Documentation\nyaml\ntitle: Project X - Architecture Overview\ntags: [project-x, architecture, documentation]\n\n\nLearning Notes\nyaml\ntitle: React Hooks - Study Notes\ntags: [learning, react, javascript, frontend]\n\n\nContext-Based Organization\n\nUse Contexts\nTop-level folders as contexts:\n- personal/ - Private notes\n- work/ - Professional content\n- reference/ - Quick lookup materials\n- learning/ - Educational content\n\n\ud83d\ude80 Workflow Examples\n\nMeeting Notes Template\nmarkdown\n---\ntitle: Team Meeting - 2025-01-18\ntags: [meeting, team, project-x]\nauthor: Your Name\ncreated: 2025-01-18\n---\n\nTeam Meeting - 2025-01-18\n\nAttendees\n- John Doe\n- Jane Smith\n\nAgenda\n1. Project updates\n2. Blockers\n3. Next steps\n\nNotes\n...\n\nAction Items\n- [ ] Task 1 - @John\n- [ ] Task 2 - @Jane\n\n\nTechnical Documentation\nmarkdown\n---\ntitle: API Authentication Guide\ntags: [api, authentication, documentation]\nauthor: Tech Team\ncreated: 2025-01-18\nupdated: 2025-01-19\nstatus: complete\n---\n\nAPI Authentication Guide\n\nOverview\n...\n\nImplementation\n...\n\n\n\ud83d\udd27 Building the Index\n\nAfter creating or modifying notes:\nbash\nnpm run build\n\n\nThis updates the search index with your new content.\n\n---\n\nWell-organized notes are the foundation of an effective knowledge management system. Start with good structure, and your future self will thank you! ---\ntitle: My First Note\ntags: [personal, ideas]\nauthor: Your Name\ncreated: 2025-01-18\ndescription: A brief description for search results\n---\n\n# My First Note\n\nYour content starts here... title: JavaScript Array Methods tags: [javascript, programming, tutorial] author: John Doe created: 2025-01-18 description: Complete guide to JavaScript array methods with examples updated: 2025-01-19 category: tutorials status: draft  # or 'complete', 'review' notes/\n\u251c\u2500\u2500 personal/\n\u2502   \u251c\u2500\u2500 journal/\n\u2502   \u2514\u2500\u2500 ideas/\n\u251c\u2500\u2500 work/\n\u2502   \u251c\u2500\u2500 projects/\n\u2502   \u2514\u2500\u2500 meetings/\n\u251c\u2500\u2500 learning/\n\u2502   \u251c\u2500\u2500 courses/\n\u2502   \u2514\u2500\u2500 books/\n\u2514\u2500\u2500 reference/\n    \u251c\u2500\u2500 code-snippets/\n    \u2514\u2500\u2500 cheatsheets/ tags: [programming, programming/javascript, programming/javascript/react] # Main Title\n## Section\n### Subsection - Bullet points for unordered items\n1. Numbered lists for sequences\n   - Nested items with indentation   [External Link](https://example.com)\n[[Internal Wiki Link]] title: Daily Note - 2025-01-18\ntags: [journal, daily] title: Project X - Architecture Overview\ntags: [project-x, architecture, documentation] title: React Hooks - Study Notes\ntags: [learning, react, javascript, frontend] ---\ntitle: Team Meeting - 2025-01-18\ntags: [meeting, team, project-x]\nauthor: Your Name\ncreated: 2025-01-18\n---\n\n# Team Meeting - 2025-01-18\n\n## Attendees\n- John Doe\n- Jane Smith\n\n## Agenda\n1. Project updates\n2. Blockers\n3. Next steps\n\n## Notes\n...\n\n## Action Items\n- [ ] Task 1 - @John\n- [ ] Task 2 - @Jane ---\ntitle: API Authentication Guide\ntags: [api, authentication, documentation]\nauthor: Tech Team\ncreated: 2025-01-18\nupdated: 2025-01-19\nstatus: complete\n---\n\n# API Authentication Guide\n\n## Overview\n...\n\n## Implementation\n... npm run build",
      "code_blocks_count": 22
    },
    {
      "path": "/notes/tutorials/features/code-blocks.md",
      "context": "tutorials",
      "metadata": {
        "title": "Code Blocks & Syntax Highlighting",
        "tags": [
          "tutorial",
          "code",
          "markdown",
          "syntax-highlighting"
        ],
        "created": "2025-01-18",
        "author": "Wiki Team",
        "description": "Master code blocks with syntax highlighting, line numbers, and advanced features",
        "updated": null,
        "category": null,
        "status": null,
        "aliases": [],
        "related": [],
        "dependencies": [],
        "keywords": [],
        "tableOfContents": "auto",
        "hideFromSearch": false
      },
      "content_preview": "Display code beautifully with syntax highlighting for 100+ programming languages, line numbers, custom titles, and more.\n\n\n\n\nWrap code in triple backticks:\n\nmarkdown\n\nfunction hello() {\n    console.lo...",
      "searchable_content": "\nCode Blocks & Syntax Highlighting\n\nDisplay code beautifully with syntax highlighting for 100+ programming languages, line numbers, custom titles, and more.\n\n\ud83d\udcdd Basic Code Blocks\n\nSimple Code Block\nWrap code in triple backticks:\n\nmarkdown\n\nfunction hello() {\n    console.log(\"Hello, World!\");\n}\n\n\n\nWith Language Specification\nAdd the language for syntax highlighting:\n\nmarkdown\njavascript\nfunction hello() {\n    console.log(\"Hello, World!\");\n}\n\n\n\n\ud83c\udfa8 Syntax Highlighting\n\nSupported Languages\nThe wiki supports 100+ languages including:\n- Web: HTML, CSS, JavaScript, TypeScript\n- Backend: Python, Java, Go, Rust, C++\n- Data: SQL, JSON, YAML, XML\n- Scripting: Bash, PowerShell, Ruby\n- And many more!\n\nExamples\n\npython\nPython example\ndef fibonacci(n):\n    if n <= 1:\n        return n\n    return fibonacci(n-1) + fibonacci(n-2)\n\n\nsql\n-- SQL example\nSELECT users.name, COUNT(orders.id) as ordercount\nFROM users\nLEFT JOIN orders ON users.id = orders.userid\nGROUP BY users.id\nHAVING ordercount > 5;\n\n\n\ud83c\udff7\ufe0f Advanced Features\n\nCustom Titles\nAdd descriptive titles to code blocks:\n\nmarkdown\njavascript title:\"API Configuration\"\nconst config = {\n    apiUrl: 'https://api.example.com',\n    timeout: 5000\n};\n\n\n\nResult:\njavascript title:\"API Configuration\"\nconst config = {\n    apiUrl: 'https://api.example.com',\n    timeout: 5000\n};\n\n\nCollapsible Code Blocks\nMake long code blocks collapsible:\n\nmarkdown\npython title:\"Long Example\" collapse:true\nThis code block starts collapsed\ndef longfunction():\n    # ... lots of code ...\n    pass\n\n\n\n\ud83d\udd22 Line Numbers\n\nEnable Globally\n1. Open Settings (Ctrl+,)\n2. Toggle \"Show line numbers\"\n3. All code blocks now display line numbers\n\nBenefits\n- Easy reference to specific lines\n- Better for tutorials and documentation\n- Maintains alignment with word wrap\n\n\ud83d\udd27 Code Block Actions\n\nCopy Button\nEvery code block has a copy button:\n- Hover over any code block\n- Click the \ud83d\udccb copy icon\n- Code is copied to clipboard\n\nExpand/Collapse\nFor collapsible blocks:\n- Click the toggle button\n- State is preserved while viewing\n\n\ud83d\udca1 Best Practices\n\nChoose the Right Language\nAlways specify the language for better highlighting:\n- \u2705  javascript\n- \u274c  js (might work but less reliable)\n- \u274c  text (no highlighting)\n\nUse Descriptive Titles\nHelp readers understand the code's purpose:\nbash title:\"Install Dependencies\"\nnpm install express mongoose dotenv\n\n\nOrganize Long Code\nFor lengthy examples:\n1. Use collapsible blocks\n2. Break into multiple blocks with explanations\n3. Add titles to each section\n\n\ud83c\udfaf Special Features\n\nFile Names in Titles\nShow file paths in titles:\njavascript title:\"src/components/Header.jsx\"\nexport function Header() {\n    return <h1>My App</h1>;\n}\n\n\nTerminal Output\nUse bash or shell for command line:\nbash\n$ npm run build\nBuilding project...\n\u2713 Build complete!\n\n\nDiff Highlighting\nShow code changes:\ndiff\n- const old = \"red\";\n+ const new = \"green\";\n\n\n\u2699\ufe0f Settings & Customization\n\nLine Numbers Toggle\n- Global setting affects all code blocks\n- Applies immediately without refresh\n- CSS-based implementation (no JavaScript overhead)\n\nTheme Integration\n- Syntax colors adapt to your chosen theme\n- Dark themes have appropriate contrast\n- Light themes remain readable\n\n\ud83d\ude80 Pro Tips\n\n1. Language Aliases: Both yml and yaml work\n2. No Language: Use  text for plain text\n3. JSON Formatting: JSON is automatically pretty-printed\n4. Copy Preserves Format: Copied code maintains proper indentation\n\n\ud83d\udd0d Troubleshooting\n\nNo Syntax Highlighting?\n- Check if language is specified correctly\n- Some languages have multiple names (e.g., c++, cpp)\n- Use  text if language isn't supported\n\nLine Numbers Not Showing?\n- Verify setting is enabled\n- Refresh the page if needed\n- Check if theme supports line numbers\n\n---\n\nCode blocks are essential for technical documentation. Master these features to create beautiful, readable code examples!     # Python example\ndef fibonacci(n):\n    if n <= 1:\n        return n\n    return fibonacci(n-1) + fibonacci(n-2) -- SQL example\nSELECT users.name, COUNT(orders.id) as order_count\nFROM users\nLEFT JOIN orders ON users.id = orders.user_id\nGROUP BY users.id\nHAVING order_count > 5;   javascript API Configuration const config = {\n    apiUrl: 'https://api.example.com',\n    timeout: 5000\n};   bash Install Dependencies npm install express mongoose dotenv javascript src/components/Header.jsx export function Header() {\n    return <h1>My App</h1>;\n} $ npm run build\nBuilding project...\n\u2713 Build complete! - const old = \"red\";\n+ const new = \"green\";",
      "code_blocks_count": 15
    },
    {
      "path": "/notes/tutorials/features/bookmarks.md",
      "context": "tutorials",
      "metadata": {
        "title": "Bookmarks - Save Your Favorite Notes",
        "tags": [
          "tutorial",
          "bookmarks",
          "organization",
          "navigation"
        ],
        "created": "2025-01-18",
        "author": "Wiki Team",
        "description": "Learn how to bookmark important notes for quick access",
        "updated": null,
        "category": null,
        "status": null,
        "aliases": [],
        "related": [],
        "dependencies": [],
        "keywords": [],
        "tableOfContents": "auto",
        "hideFromSearch": false
      },
      "content_preview": "Keep your most important notes at your fingertips with the bookmarking system. Save, organize, and quickly access your favorite content.\n\n\n\n\nWhile viewing any note:\n1. Click the star icon (\u2606) in the n...",
      "searchable_content": "\nBookmarks - Save Your Favorite Notes\n\nKeep your most important notes at your fingertips with the bookmarking system. Save, organize, and quickly access your favorite content.\n\n\u2b50 Creating Bookmarks\n\nQuick Bookmark\nWhile viewing any note:\n1. Click the star icon (\u2606) in the note header\n2. The star fills (\u2605) indicating it's bookmarked\n3. Note is instantly added to your bookmarks\n\nKeyboard Shortcut\nPress Ctrl+D to toggle bookmark for current note\n\nVisual Feedback\n- Empty star (\u2606): Not bookmarked\n- Filled star (\u2605): Bookmarked\n- Animation: Smooth transition when toggling\n\n\ud83d\udcda Accessing Bookmarks\n\nFrom the Header\n1. Click the Bookmarks button in the header\n2. Dropdown shows all bookmarked notes\n3. Click any bookmark to open it\n\nQuick Access\n- Recent bookmarks appear at the top\n- Shows note title and description\n- Hover for full path tooltip\n\n\ud83d\uddc2\ufe0f Managing Bookmarks\n\nRemove Bookmarks\nSeveral ways to remove:\n1. Toggle: Click the star icon again on bookmarked note\n2. From List: Click the \u2715 next to bookmark in dropdown\n3. Keyboard: Press Ctrl+D on bookmarked note\n\nBookmark Limit\n- Default: 50 bookmarks maximum\n- Oldest bookmarks auto-removed when limit reached\n- Prevents bookmark overload\n\n\ud83c\udfaf Smart Features\n\nBookmark Persistence\n- Saved in browser's local storage\n- Survives page refreshes\n- Syncs across tabs instantly\n- No account needed\n\nBookmark Information\nEach bookmark stores:\n- Note title - For display\n- File path - For navigation\n- Description - Quick preview\n- Bookmark date - For sorting\n\nVisual Indicators\n- In File Tree: Bookmarked notes show star icon\n- In Search Results: Bookmarks highlighted\n- In Tabs: Tab shows bookmark indicator\n\n\ud83d\udca1 Use Cases\n\nQuick Reference\nBookmark these types of notes:\n- \ud83d\udccb Daily templates\n- \ud83d\udd27 Configuration guides\n- \ud83d\udcda Index/overview pages\n- \ud83c\udfaf Current projects\n- \ud83d\udcdd Frequently edited notes\n\nWorkflow Integration\n1. Project Work: Bookmark all project-related notes\n2. Learning Path: Bookmark tutorial sequence\n3. Daily Routine: Bookmark daily/weekly notes\n4. Reference: Bookmark cheat sheets and guides\n\n\u26a1 Pro Tips\n\nBookmark Organization\n1. Use descriptive titles - Easy to identify in list\n2. Add descriptions - Help future you remember why\n3. Regular cleanup - Remove outdated bookmarks\n4. Project grouping - Bookmark related notes together\n\nKeyboard Workflow\n1. Open note: Ctrl+K \u2192 search \u2192 Enter\n2. Bookmark it: Ctrl+D\n3. Access bookmarks: Click header dropdown\n4. Quick switching between bookmarked notes\n\n\ud83d\udd27 Troubleshooting\n\nBookmarks Not Saving?\n- Check browser's local storage isn't full\n- Ensure cookies/storage enabled\n- Try different browser if issues persist\n\nLost Bookmarks?\n- Bookmarks are browser-specific\n- Clear browser data removes bookmarks\n- Use same browser for consistency\n\nCan't Bookmark?\n- Ensure you're viewing a note\n- Check if bookmark limit reached\n- Try refreshing the page\n\n\ud83c\udfa8 Visual Design\n\nTheme Integration\n- Star color matches theme accent\n- Dropdown styled consistently\n- Smooth animations throughout\n- High contrast for accessibility\n\nMobile Experience\n- Touch-friendly bookmark button\n- Responsive dropdown menu\n- Same features as desktop\n- Swipe gestures supported\n\n\ud83d\udd0d Related Features\n\nComplements These Tools\n- Recent Files: Auto-tracked history\n- Search: Find any note quickly\n- Tags: Organize by topics\n- Wiki Links: Connect related notes\n\nBookmark vs Recent Files\n| Feature | Bookmarks | Recent Files |\n|---------|-----------|--------------|\n| Manual | \u2713 Yes | \u2717 Auto |\n| Persistent | \u2713 Forever |  Limited |\n| Limit | 50 notes | 20 notes |\n| Purpose | Favorites | History |\n\n\ud83d\udcbe Data Management\n\nExport Bookmarks\nCurrently bookmarks are browser-only. Future features may include:\n- Export to JSON\n- Sync across devices\n- Backup/restore options\n\nPrivacy\n- All bookmarks stored locally\n- No server communication\n- No tracking or analytics\n- Complete user control\n\n---\n\nStart bookmarking your important notes now! Click the star icon on this tutorial to try it out.",
      "code_blocks_count": 0
    },
    {
      "path": "/notes/tutorials/features/split-view.md",
      "context": "tutorials",
      "metadata": {
        "title": "Split View",
        "tags": [
          "interface",
          "productivity",
          "tabs"
        ],
        "created": "2025-01-18",
        "author": "Wiki Admin",
        "description": "Work with multiple notes side-by-side using split view functionality",
        "updated": null,
        "category": null,
        "status": null,
        "aliases": [],
        "related": [],
        "dependencies": [],
        "keywords": [],
        "tableOfContents": "auto",
        "hideFromSearch": false
      },
      "content_preview": "Split view allows you to view and edit multiple notes side-by-side, dramatically improving your productivity when working with related content.\n\n\n\nThere are several ways to enable split view:\n\n\nClick ...",
      "searchable_content": "\nSplit View\n\nSplit view allows you to view and edit multiple notes side-by-side, dramatically improving your productivity when working with related content.\n\nActivating Split View\n\nThere are several ways to enable split view:\n\n\ud83d\uddb1\ufe0f Button Click\nClick the split view icon (two rectangles) in the header navigation bar.\n\n\u2328\ufe0f Future Shortcut\nA keyboard shortcut will be available in future updates.\n\nHow Split View Works\n\nWhen split view is enabled:\n\n1. Two Panes: Your workspace is divided into left and right panes\n2. Active Pane: One pane is \"active\" (highlighted with a colored border)\n3. Independent Content: Each pane can display different notes\n4. Resizable: Drag the divider to adjust pane sizes\n\nUsing Split View\n\n\ud83d\udccb Opening Notes\n- Click any note to open it in the active pane\n- Drag and drop notes from sidebar directly into any pane\n- Click a pane to make it active\n- Visual feedback: Panes highlight when dragging notes over them\n\n\ud83d\udccf Resizing Panes\n- Drag the divider between panes to adjust widths\n- Minimum width: 300px per pane\n- Visual feedback: Divider changes color on hover\n\n\ud83c\udfaf Active Pane\n- The active pane has a colored border\n- New notes open in the active pane\n- Click any pane to make it active\n\n\ud83d\uddb1\ufe0f Drag & Drop\n- Drag notes from the sidebar file tree into any pane\n- Visual feedback: Notes show grab cursor when draggable\n- Drop zones: Panes highlight with colored border during drag\n- Auto-activate: Dropping a note automatically makes that pane active\n\nUse Cases\n\n\ud83d\udcda Research & Writing\n- Open reference material in one pane\n- Write notes in the other pane\n\n\ud83d\udd17 Cross-Referencing\n- Compare different versions of documents\n- View related notes simultaneously\n\n\ud83d\udcd6 Learning\n- Tutorial in one pane\n- Practice notes in the other\n\n\ud83d\udee0\ufe0f Development\n- Documentation in one pane\n- Code examples in the other\n\nMobile Experience\n\nOn mobile devices:\n- Split view automatically becomes single pane\n- Only the active pane is shown\n- Tap to switch between panes\n\nTips & Tricks\n\n\u26a1 Efficiency Tips\n1. Bookmark frequently compared notes for quick access\n2. Use wiki links to jump between related content\n3. Resize panes based on content importance\n4. Focus mode works in split view too\n\n\ud83c\udfa8 Visual Organization\n- Different themes help distinguish panes\n- Use the table of contents in longer documents\n- Search within notes works in both panes\n\nDisabling Split View\n\nTo return to single-pane view:\n1. Click the split view button again\n2. The interface returns to normal layout\n3. Your current note remains active\n\nTechnical Notes\n\n\ud83e\udde0 Memory Management\n- Split view uses minimal additional memory\n- Each pane maintains its own scroll position\n- Tab system works independently in each pane\n\n\ud83d\udcbe Settings Persistence\n- Split view state is saved automatically\n- Pane sizes are remembered between sessions\n- Preferences sync across tabs\n\nSplit view transforms your note-taking workflow, making it easy to work with multiple documents efficiently!",
      "code_blocks_count": 0
    },
    {
      "path": "/notes/tutorials/advanced/combined-code-blocks.md",
      "context": "tutorials",
      "metadata": {
        "title": "Combined Code Blocks - Automatic Code Aggregation",
        "tags": [
          "tutorial",
          "code",
          "advanced",
          "automation"
        ],
        "created": "2025-01-18",
        "author": "Wiki Team",
        "description": "Automatically combine all code blocks from a page into a single, copyable block",
        "updated": null,
        "category": null,
        "status": null,
        "aliases": [],
        "related": [],
        "dependencies": [],
        "keywords": [],
        "tableOfContents": "auto",
        "hideFromSearch": false
      },
      "content_preview": "Transform your tutorials and documentation by automatically combining all code blocks into a single, complete code file at the end of your note.\n\n\n\nThe combined code blocks feature:\n- Collects all cod...",
      "searchable_content": "\nCombined Code Blocks - Automatic Code Aggregation\n\nTransform your tutorials and documentation by automatically combining all code blocks into a single, complete code file at the end of your note.\n\n\ud83c\udfaf What It Does\n\nThe combined code blocks feature:\n- Collects all code blocks from your note\n- Filters based on your criteria\n- Combines them into one copyable block\n- Adds section markers and comments\n- Appears automatically at the note's end\n\n\u2699\ufe0f Basic Configuration\n\nAdd this to your note's frontmatter:\n\nyaml title:\"Basic Setup\"\n---\ntitle: My Tutorial\ncombineCodeBlocks: true\ncombinedBlockLanguage: javascript\n---\n\n\nThis will combine all code blocks into a JavaScript code block at the bottom.\n\n\ud83d\udee0\ufe0f Advanced Configuration\n\nFull Options Example\n\nyaml title:\"Advanced Configuration\"\n---\ntitle: React Tutorial\ncombineCodeBlocks: true\ncombinedBlockLanguage: javascript\ncombinedBlockTitle: \"Complete React App\"\ncombinedBlockOptions:\n  includeBlockTitles: true      # Add section comments\n  includeOnlyLanguage: javascript  # Only JavaScript blocks\n  skipEmptyBlocks: true         # Ignore empty blocks\n  separator: \"\\n// ---\\n\"       # Between sections\n  excludePatterns: [\"test\", \"example\"]  # Skip these\n---\n\n\nConfiguration Options Explained\n\n| Option | Description | Default |\n|--------|-------------|---------|\n| combineCodeBlocks | Enable/disable feature | false |\n| combinedBlockLanguage | Language for syntax highlighting | text |\n| combinedBlockTitle | Custom title for combined block | Auto-generated |\n| includeBlockTitles | Add titles as comments | true |\n| includeOnlyLanguage | Filter by language | null (all) |\n| skipEmptyBlocks | Skip empty code blocks | true |\n| separator | Text between blocks | \\n// ---\\n |\n| excludePatterns | Title patterns to exclude | [] |\n\n\ud83d\udccb Real-World Examples\n\nTutorial Pattern\nPerfect for step-by-step tutorials:\n\n1. Setup section with imports\n2. Implementation with main code  \n3. Usage examples\n4. Combined complete code at the end\n\nAPI Documentation\n\nyaml title:\"API Documentation Config\"\n---\ncombineCodeBlocks: true\ncombinedBlockLanguage: python\ncombinedBlockTitle: \"Complete API Client\"\ncombinedBlockOptions:\n  includeOnlyLanguage: python\n  excludePatterns: [\"output\", \"response\"]\n---\n\n\n\ud83c\udfa8 Smart Features\n\nLanguage-Aware Comments\nThe system knows comment syntax for 30+ languages:\n- JavaScript/Java: // Comment\n- Python/Ruby: # Comment\n- HTML/XML: <!-- Comment -->\n- CSS: / Comment /\n- SQL: -- Comment\n\nFiltering Examples\n\nInclude Only JavaScript:\nyaml\ncombinedBlockOptions:\n  includeOnlyLanguage: javascript\n\n\nExclude Test Code:\nyaml\ncombinedBlockOptions:\n  excludePatterns: [\"test\", \"mock\", \"example\"]\n\n\nCustom Separators:\nyaml\ncombinedBlockOptions:\n  separator: \"\\n\\n/ ==================== /\\n\\n\"\n\n\n\ud83d\udca1 Best Practices\n\nUse Clear Titles\nGive your code blocks descriptive titles:\njavascript title:\"Database Connection\"\nconst db = await connect(config);\n\n\nOrganize by Purpose\nStructure your tutorial logically:\n1. Configuration\n2. Core functions\n3. Utilities\n4. Main execution\n\nLanguage Consistency\nWhen combining code:\n- Keep the same language throughout\n- Or use includeOnlyLanguage to filter\n- Set appropriate combinedBlockLanguage\n\n\ud83c\udfaf Use Cases\n\nComplete Applications\nBuild tutorials that result in a working app:\n- Show pieces step-by-step\n- Explain each section\n- Provide complete code at end\n\nConfiguration Files\nCombine multiple config snippets:\n- Environment variables\n- Database settings  \n- API configurations\n- Complete config file at end\n\nLearning Paths\nProgressive examples that build:\n- Basic concepts first\n- Advanced features next\n- Full implementation at end\n\n\ud83d\udd0d Visual Indicators\n\nThe combined code block has:\n- Distinctive Border: Dashed line separator\n- Special Styling: Stands out from regular blocks\n- Clear Title: Shows number of blocks combined\n- Full Features: Copy button, syntax highlighting, line numbers\n\n\u26a1 Workflow Tips\n\n1. Plan Your Structure: Organize code blocks logically\n2. Use Exclusions: Filter out example/test code\n3. Test the Output: Ensure combined code works\n4. Document Dependencies: Note requirements in text\n\n\ud83d\udd27 Troubleshooting\n\nNot Seeing Combined Block?\n- Check combineCodeBlocks: true in frontmatter\n- Ensure you have code blocks in the note\n- Verify no syntax errors in YAML\n\nWrong Blocks Included?\n- Check your filter settings\n- Use excludePatterns for unwanted blocks\n- Verify language specifications\n\n---\n\nNote: This very page has combined code blocks enabled! Check the bottom to see all the YAML configurations combined into one block. yaml Basic Setup ---\ntitle: My Tutorial\ncombineCodeBlocks: true\ncombinedBlockLanguage: javascript\n--- yaml Advanced Configuration ---\ntitle: React Tutorial\ncombineCodeBlocks: true\ncombinedBlockLanguage: javascript\ncombinedBlockTitle: \"Complete React App\"\ncombinedBlockOptions:\n  includeBlockTitles: true      # Add section comments\n  includeOnlyLanguage: javascript  # Only JavaScript blocks\n  skipEmptyBlocks: true         # Ignore empty blocks\n  separator: \"\\n// ---\\n\"       # Between sections\n  excludePatterns: [\"test\", \"example\"]  # Skip these\n--- yaml API Documentation Config ---\ncombineCodeBlocks: true\ncombinedBlockLanguage: python\ncombinedBlockTitle: \"Complete API Client\"\ncombinedBlockOptions:\n  includeOnlyLanguage: python\n  excludePatterns: [\"output\", \"response\"]\n--- combinedBlockOptions:\n  includeOnlyLanguage: javascript combinedBlockOptions:\n  excludePatterns: [\"test\", \"mock\", \"example\"] combinedBlockOptions:\n  separator: \"\\n\\n/* ==================== */\\n\\n\" javascript Database Connection const db = await connect(config);",
      "code_blocks_count": 7
    },
    {
      "path": "/notes/tutorials/features/images-media.md",
      "context": "tutorials",
      "metadata": {
        "title": "Image Usage Guide",
        "tags": [
          "documentation",
          "guide",
          "images"
        ],
        "created": "2025-01-06",
        "author": "Wiki Admin",
        "description": "How to add and use images in your notes",
        "updated": null,
        "category": null,
        "status": null,
        "aliases": [],
        "related": [],
        "dependencies": [],
        "keywords": [],
        "tableOfContents": "auto",
        "hideFromSearch": false
      },
      "content_preview": "This guide demonstrates how to add images to your notes using various methods and styling options.\n\n\n\n\nThe simplest way to add an image is using standard Markdown syntax:\n\nmarkdown\n!Alt text\n\n\nExample...",
      "searchable_content": "\nImage Usage Guide\n\nThis guide demonstrates how to add images to your notes using various methods and styling options.\n\nBasic Image Usage\n\nStandard Markdown Syntax\nThe simplest way to add an image is using standard Markdown syntax:\n\nmarkdown\n!Alt text\n\n\nExample:\nmarkdown\n!A beautiful sunset over the mountains\n\n\nHTML Image Syntax\nFor more control, use HTML img tags:\n\nhtml\n<img src=\"/images/example.jpg\" alt=\"Detailed description\" title=\"Hover tooltip text\">\n\n\nWith Click-to-Enlarge\nhtml\n<a href=\"/images/full-size/diagram.png\" target=\"blank\">\n  <img src=\"/images/thumbnails/diagram.png\" alt=\"System architecture diagram\">\n</a>\n\n\nImage Storage Organization\n\nRecommended Directory Structure\n\n/images/\n\u251c\u2500\u2500 notes/              # General note images\n\u251c\u2500\u2500 tutorials/          # Tutorial screenshots\n\u251c\u2500\u2500 reference/          # Charts, diagrams, references\n\u251c\u2500\u2500 projects/           # Project-specific images\n\u251c\u2500\u2500 screenshots/        # UI screenshots\n\u251c\u2500\u2500 diagrams/           # Technical diagrams\n\u251c\u2500\u2500 icons/             # Small icons and symbols\n\u251c\u2500\u2500 banners/           # Header/banner images\n\u251c\u2500\u2500 thumbnails/        # Smaller preview versions\n\u2514\u2500\u2500 originals/         # Full-resolution source images\n\n\nFile Naming Conventions\n- Use descriptive names: user-login-flow.png instead of img1.png\n- Include dimensions for variants: logo-256x256.png, logo-128x128.png\n- Use consistent format: project-namescreenshot2024-01-15.png\n\nImage Sizing and Alignment\n\nSize Control with Keywords\nUse size keywords in your alt text for automatic sizing:\n\nmarkdown\n!tiny: Small icon          # Max width: 100px\n!small: Medium image             # Max width: 300px  \n!medium: Standard image          # Max width: 600px\n!large: Full width image         # Max width: 900px\n!full: Container width           # 100% width\n!xlarge: Extra large             # Max width: 1200px\n\n\nAlignment Options\nControl image positioning with alignment keywords:\n\nmarkdown\n!left: Float left with text wrap\n!right: Float right with text wrap\n!center: Centered block image\n!inline: Inline with text\n\n\nCombining Size and Alignment\nmarkdown\n!left small: Small left-aligned image\n!right medium: Medium right-aligned image\n!center large: Large centered image\n\n\nCustom CSS Classes (HTML Method)\nhtml\n<img src=\"/images/example.jpg\" \n     alt=\"Description\" \n     class=\"img-responsive img-rounded img-shadow\"\n     style=\"max-width: 450px;\">\n\n\nAdvanced Image Layouts\n\nImages with Captions\nMultiple caption approaches:\n\nMethod 1: HTML Figure Element\nhtml\n<figure>\n  <img src=\"/images/architecture.png\" alt=\"System architecture overview\">\n  <figcaption>\n    <strong>Figure 1:</strong> High-level system architecture showing \n    microservices, databases, and external integrations.\n  </figcaption>\n</figure>\n\n\nMethod 2: Markdown with HTML Caption\nmarkdown\n!Database schema diagram\nFigure 2: Database relationship diagram showing all tables and foreign keys\n\n\nMethod 3: Enhanced Figure with Styling\nhtml\n<figure class=\"image-figure\">\n  <img src=\"/images/user-flow.png\" \n       alt=\"User registration and onboarding flow\" \n       title=\"Click to view full size\">\n  <figcaption>\n    <span class=\"figure-label\">User Flow Diagram</span><br>\n    Complete user journey from registration through first login, \n    including email verification and profile setup steps.\n  </figcaption>\n</figure>\n\n\nSide-by-Side Image Comparisons\nhtml\n<div class=\"image-comparison\">\n  <div class=\"comparison-item\">\n    <img src=\"/images/before.png\" alt=\"Before optimization\">\n    <p><strong>Before:</strong> Page load time 3.2 seconds</p>\n  </div>\n  <div class=\"comparison-item\">\n    <img src=\"/images/after.png\" alt=\"After optimization\">\n    <p><strong>After:</strong> Page load time 0.8 seconds</p>\n  </div>\n</div>\n\n\nImage Gallery Layout\nhtml\n<div class=\"image-gallery\">\n  <div class=\"gallery-item\">\n    <img src=\"/images/gallery/screenshot-1.png\" alt=\"Login screen\">\n    <span class=\"gallery-caption\">Login Interface</span>\n  </div>\n  <div class=\"gallery-item\">\n    <img src=\"/images/gallery/screenshot-2.png\" alt=\"Dashboard view\">\n    <span class=\"gallery-caption\">Main Dashboard</span>\n  </div>\n  <div class=\"gallery-item\">\n    <img src=\"/images/gallery/screenshot-3.png\" alt=\"Settings panel\">\n    <span class=\"gallery-caption\">Settings Panel</span>\n  </div>\n</div>\n\n\nImage Formats and Use Cases\n\nJPEG - Best for Photographs\nmarkdown\n!Mountain landscape photo\n\n- Use for: Photos, complex images with many colors\n- Compression: Lossy, smaller file sizes\n- Transparency: Not supported\n\nPNG - Best for Screenshots and Graphics\nmarkdown\n!User interface screenshot\n\n- Use for: Screenshots, logos, images with transparency\n- Compression: Lossless, larger file sizes\n- Transparency: Supported\n\nSVG - Best for Logos and Icons\nmarkdown\n!Company logo\n\n- Use for: Logos, icons, simple graphics\n- Scalability: Vector-based, infinite scaling\n- File size: Very small for simple graphics\n\nWebP - Modern Format\nhtml\n<picture>\n  <source srcset=\"/images/hero.webp\" type=\"image/webp\">\n  <img src=\"/images/hero.jpg\" alt=\"Hero image with fallback\">\n</picture>\n\n\nGIF - Animated Images\nmarkdown\n!Loading animation\n\n\nResponsive Image Techniques\n\nDifferent Sizes for Different Screens\nhtml\n<picture>\n  <source media=\"(max-width: 480px)\" srcset=\"/images/mobile/banner-480w.jpg\">\n  <source media=\"(max-width: 768px)\" srcset=\"/images/tablet/banner-768w.jpg\">\n  <source media=\"(max-width: 1200px)\" srcset=\"/images/desktop/banner-1200w.jpg\">\n  <img src=\"/images/desktop/banner-1200w.jpg\" alt=\"Responsive banner image\">\n</picture>\n\n\nHigh-DPI Display Support\nhtml\n<img src=\"/images/logo.png\" \n     srcset=\"/images/logo.png 1x, /images/logo@2x.png 2x\" \n     alt=\"Company logo\">\n\n\nLazy Loading for Performance\nhtml\n<img src=\"/images/placeholder.jpg\" \n     data-src=\"/images/large-image.jpg\" \n     alt=\"Large image with lazy loading\"\n     loading=\"lazy\">\n\n\nExternal vs Local Images\n\nLocal Images (Recommended)\nmarkdown\n<!-- Relative path from project root -->\n!Local screenshot\n\n<!-- Absolute path (if needed) -->\n!Local diagram\n\n\nExternal Images\nmarkdown\n<!-- Direct external URL -->\n!External image\n\n<!-- External with fallback -->\n!Profile photo\n\n\nCDN Images with Local Fallback\nhtml\n<img src=\"https://cdn.example.com/images/banner.jpg\" \n     alt=\"Banner image\" \n     onerror=\"this.src='/images/fallback/banner.jpg'\">\n\n\nAccessibility and SEO Optimization\n\nComprehensive Alt Text\nmarkdown\n<!-- Poor alt text -->\n!Image\n\n<!-- Good alt text -->\n!Bar chart showing 40% increase in user engagement over 6 months\n\n<!-- Context-specific alt text -->\n!Error: Form validation showing required email field highlighted in red\n\n\nTitle Attributes for Additional Context\nhtml\n<img src=\"/images/complex-diagram.png\" \n     alt=\"Database relationship diagram\" \n     title=\"Click to view full-size version with zoom capability\">\n\n\nARIA Labels for Enhanced Accessibility\nhtml\n<img src=\"/images/status-icon.png\" \n     alt=\"Success status\" \n     aria-label=\"Operation completed successfully\"\n     role=\"img\">\n\n\nDecorative Images\nhtml\n<!-- For purely decorative images -->\n<img src=\"/images/decorative-border.png\" alt=\"\" role=\"presentation\">\n\n\nImage Optimization Examples\n\nFile Size Optimization\nmarkdown\n<!-- Original: 2.5MB -->\n!Original photo\n\n<!-- Optimized: 250KB -->\n!Optimized photo\n\n<!-- Thumbnail: 15KB -->\n!Thumbnail preview\n\n\nProgressive Loading Strategy\nhtml\n<!-- Thumbnail loads first -->\n<img src=\"/images/thumbnails/preview.jpg\" \n     alt=\"Preview image\"\n     style=\"filter: blur(5px); transition: filter 0.3s;\">\n\n<!-- Full image loads in background -->\n<img src=\"/images/full/high-res.jpg\" \n     alt=\"Full resolution image\"\n     onload=\"this.previousElementSibling.style.filter='none';\"\n     style=\"position: absolute; opacity: 0; transition: opacity 0.3s;\">\n\n\nAdvanced Image Features\n\nImage Maps (Clickable Areas)\nhtml\n<img src=\"/images/office-layout.png\" alt=\"Office floor plan\" usemap=\"#office-map\">\n<map name=\"office-map\">\n  <area shape=\"rect\" coords=\"10,10,100,50\" href=\"#meeting-room\" alt=\"Conference Room A\">\n  <area shape=\"circle\" coords=\"150,75,25\" href=\"#kitchen\" alt=\"Kitchen Area\">\n  <area shape=\"poly\" coords=\"200,10,250,50,200,90,150,50\" href=\"#workspace\" alt=\"Open Workspace\">\n</map>\n\n\nImage Overlays and Annotations\nhtml\n<div class=\"image-container\">\n  <img src=\"/images/screenshot.png\" alt=\"Application interface\">\n  <div class=\"image-overlay\">\n    <div class=\"annotation\" style=\"top: 20%; left: 30%;\">\n      <span class=\"annotation-marker\">1</span>\n      <div class=\"annotation-tooltip\">Navigation menu</div>\n    </div>\n    <div class=\"annotation\" style=\"top: 50%; left: 70%;\">\n      <span class=\"annotation-marker\">2</span>\n      <div class=\"annotation-tooltip\">Main content area</div>\n    </div>\n  </div>\n</div>\n\n\nImage Carousels/Slideshows\nhtml\n<div class=\"image-slideshow\">\n  <div class=\"slide active\">\n    <img src=\"/images/slides/slide-1.jpg\" alt=\"Feature overview\">\n    <p class=\"slide-caption\">Main features and capabilities</p>\n  </div>\n  <div class=\"slide\">\n    <img src=\"/images/slides/slide-2.jpg\" alt=\"Implementation details\">\n    <p class=\"slide-caption\">Technical implementation</p>\n  </div>\n  <div class=\"slide\">\n    <img src=\"/images/slides/slide-3.jpg\" alt=\"Results and metrics\">\n    <p class=\"slide-caption\">Performance metrics and results</p>\n  </div>\n</div>\n\n\nExternal Images and Hosting\n\nGitHub Images\nmarkdown\n!README diagram\n\n\nGitLab Images  \nmarkdown\n!Architecture diagram\n\n\nImage Hosting Services\nmarkdown\n<!-- Imgur -->\n!Hosted image\n\n<!-- AWS S3 -->\n!S3 hosted\n\n<!-- Cloudinary -->\n!Cloudinary optimized\n\n\nBest Practices\n\n1. Use descriptive alt text - This helps with accessibility and SEO\n2. Optimize image sizes - Large images slow down page loading\n3. Use appropriate formats:\n   - JPEG for photographs\n   - PNG for screenshots and images with transparency\n   - SVG for logos and diagrams\n4. Organize images - Keep your images directory structure clean and logical\n\nImage Styling\n\nAll images automatically receive:\n- Rounded corners for a modern look\n- Subtle shadow on hover\n- Smooth transitions\n- Responsive sizing (never exceed container width)\n\nLive Example\n\nHere's a demonstration using a placeholder image:\n\n!Demo placeholder image\n\nExample Gallery\n\nHere's how you might create an image gallery using a combination of techniques:\n\nmarkdown\nProject Screenshots\n\n!small left: Login screen\nThe login screen features a clean, minimalist design with email and password fields.\n\n!small right: Dashboard view\nThe dashboard provides an overview of all key metrics and recent activity.\n\n<figure>\n  <img src=\"/images/projects/analytics.png\" alt=\"Analytics page showing graphs\">\n  <figcaption>The analytics page offers detailed insights with interactive charts and graphs.</figcaption>\n</figure>\n\n\nAlignment Examples\n\nLeft-aligned Image\n!left small: Sample image aligned to the left\nLorem ipsum dolor sit amet, consectetur adipiscing elit. This text wraps around the left-aligned image. The image is floated to the left with appropriate margins to create a nice visual flow. You can continue adding more text here and it will wrap around the image naturally.\n\nRight-aligned Image\n!right small: Sample image aligned to the right\nLorem ipsum dolor sit amet, consectetur adipiscing elit. This text wraps around the right-aligned image. The image is floated to the right with appropriate margins. This creates an interesting layout where text flows on the left side of the image.\n\nCentered Image with Caption\n<figure>\n  <img src=\"/images/notes/demo-placeholder.svg\" alt=\"medium: Centered demonstration image\">\n  <figcaption>This is a centered image with a caption. The caption provides additional context about the image content.</figcaption>\n</figure>\n\nTroubleshooting\n\nImage not showing?\n- Check the file path is correct\n- Ensure the image file exists in the /images/ directory\n- Verify the file extension matches (case-sensitive on some systems)\n\nImage too large?\n- Use the size keywords (small, medium, large)\n- Consider optimizing the image file itself\n- Use image compression tools before uploading\n\nText not wrapping properly?\n- Ensure you're using the correct alignment syntax\n- Add clear fixes after floated images if needed ![Alt text](path/to/image.jpg) ![A beautiful sunset over the mountains](/images/notes/sunset.jpg) <img src=\"/images/example.jpg\" alt=\"Detailed description\" title=\"Hover tooltip text\"> <a href=\"/images/full-size/diagram.png\" target=\"_blank\">\n  <img src=\"/images/thumbnails/diagram.png\" alt=\"System architecture diagram\">\n</a> /images/\n\u251c\u2500\u2500 notes/              # General note images\n\u251c\u2500\u2500 tutorials/          # Tutorial screenshots\n\u251c\u2500\u2500 reference/          # Charts, diagrams, references\n\u251c\u2500\u2500 projects/           # Project-specific images\n\u251c\u2500\u2500 screenshots/        # UI screenshots\n\u251c\u2500\u2500 diagrams/           # Technical diagrams\n\u251c\u2500\u2500 icons/             # Small icons and symbols\n\u251c\u2500\u2500 banners/           # Header/banner images\n\u251c\u2500\u2500 thumbnails/        # Smaller preview versions\n\u2514\u2500\u2500 originals/         # Full-resolution source images ![tiny: Small icon](/images/icons/settings.png)          # Max width: 100px\n![small: Medium image](/images/example.jpg)             # Max width: 300px  \n![medium: Standard image](/images/example.jpg)          # Max width: 600px\n![large: Full width image](/images/example.jpg)         # Max width: 900px\n![full: Container width](/images/example.jpg)           # 100% width\n![xlarge: Extra large](/images/example.jpg)             # Max width: 1200px ![left: Float left with text wrap](/images/example.jpg)\n![right: Float right with text wrap](/images/example.jpg)\n![center: Centered block image](/images/example.jpg)\n![inline: Inline with text](/images/small-icon.png) ![left small: Small left-aligned image](/images/thumb.jpg)\n![right medium: Medium right-aligned image](/images/screenshot.png)\n![center large: Large centered image](/images/banner.jpg) <img src=\"/images/example.jpg\" \n     alt=\"Description\" \n     class=\"img-responsive img-rounded img-shadow\"\n     style=\"max-width: 450px;\"> <figure>\n  <img src=\"/images/architecture.png\" alt=\"System architecture overview\">\n  <figcaption>\n    <strong>Figure 1:</strong> High-level system architecture showing \n    microservices, databases, and external integrations.\n  </figcaption>\n</figure> ![Database schema diagram](/images/database-schema.png)\n*Figure 2: Database relationship diagram showing all tables and foreign keys* <figure class=\"image-figure\">\n  <img src=\"/images/user-flow.png\" \n       alt=\"User registration and onboarding flow\" \n       title=\"Click to view full size\">\n  <figcaption>\n    <span class=\"figure-label\">User Flow Diagram</span><br>\n    Complete user journey from registration through first login, \n    including email verification and profile setup steps.\n  </figcaption>\n</figure> <div class=\"image-comparison\">\n  <div class=\"comparison-item\">\n    <img src=\"/images/before.png\" alt=\"Before optimization\">\n    <p><strong>Before:</strong> Page load time 3.2 seconds</p>\n  </div>\n  <div class=\"comparison-item\">\n    <img src=\"/images/after.png\" alt=\"After optimization\">\n    <p><strong>After:</strong> Page load time 0.8 seconds</p>\n  </div>\n</div> <div class=\"image-gallery\">\n  <div class=\"gallery-item\">\n    <img src=\"/images/gallery/screenshot-1.png\" alt=\"Login screen\">\n    <span class=\"gallery-caption\">Login Interface</span>\n  </div>\n  <div class=\"gallery-item\">\n    <img src=\"/images/gallery/screenshot-2.png\" alt=\"Dashboard view\">\n    <span class=\"gallery-caption\">Main Dashboard</span>\n  </div>\n  <div class=\"gallery-item\">\n    <img src=\"/images/gallery/screenshot-3.png\" alt=\"Settings panel\">\n    <span class=\"gallery-caption\">Settings Panel</span>\n  </div>\n</div> ![Mountain landscape photo](/images/landscapes/mountain-sunset.jpg) ![User interface screenshot](/images/screenshots/dashboard.png) ![Company logo](/images/logos/company-logo.svg) <picture>\n  <source srcset=\"/images/hero.webp\" type=\"image/webp\">\n  <img src=\"/images/hero.jpg\" alt=\"Hero image with fallback\">\n</picture> ![Loading animation](/images/animations/loading-spinner.gif) <picture>\n  <source media=\"(max-width: 480px)\" srcset=\"/images/mobile/banner-480w.jpg\">\n  <source media=\"(max-width: 768px)\" srcset=\"/images/tablet/banner-768w.jpg\">\n  <source media=\"(max-width: 1200px)\" srcset=\"/images/desktop/banner-1200w.jpg\">\n  <img src=\"/images/desktop/banner-1200w.jpg\" alt=\"Responsive banner image\">\n</picture> <img src=\"/images/logo.png\" \n     srcset=\"/images/logo.png 1x, /images/logo@2x.png 2x\" \n     alt=\"Company logo\"> <img src=\"/images/placeholder.jpg\" \n     data-src=\"/images/large-image.jpg\" \n     alt=\"Large image with lazy loading\"\n     loading=\"lazy\"> <!-- Relative path from project root -->\n![Local screenshot](/images/screenshots/interface.png)\n\n<!-- Absolute path (if needed) -->\n![Local diagram](../images/diagrams/flow-chart.svg) <!-- Direct external URL -->\n![External image](https://example.com/images/photo.jpg)\n\n<!-- External with fallback -->\n![Profile photo](https://avatars.githubusercontent.com/user123?s=200) <img src=\"https://cdn.example.com/images/banner.jpg\" \n     alt=\"Banner image\" \n     onerror=\"this.src='/images/fallback/banner.jpg'\"> <!-- Poor alt text -->\n![Image](/images/chart.png)\n\n<!-- Good alt text -->\n![Bar chart showing 40% increase in user engagement over 6 months](/images/engagement-chart.png)\n\n<!-- Context-specific alt text -->\n![Error: Form validation showing required email field highlighted in red](/images/form-error.png) <img src=\"/images/complex-diagram.png\" \n     alt=\"Database relationship diagram\" \n     title=\"Click to view full-size version with zoom capability\"> <img src=\"/images/status-icon.png\" \n     alt=\"Success status\" \n     aria-label=\"Operation completed successfully\"\n     role=\"img\"> <!-- For purely decorative images -->\n<img src=\"/images/decorative-border.png\" alt=\"\" role=\"presentation\"> <!-- Original: 2.5MB -->\n![Original photo](/images/originals/vacation-photo.jpg)\n\n<!-- Optimized: 250KB -->\n![Optimized photo](/images/optimized/vacation-photo-compressed.jpg)\n\n<!-- Thumbnail: 15KB -->\n![Thumbnail preview](/images/thumbnails/vacation-photo-thumb.jpg) <!-- Thumbnail loads first -->\n<img src=\"/images/thumbnails/preview.jpg\" \n     alt=\"Preview image\"\n     style=\"filter: blur(5px); transition: filter 0.3s;\">\n\n<!-- Full image loads in background -->\n<img src=\"/images/full/high-res.jpg\" \n     alt=\"Full resolution image\"\n     onload=\"this.previousElementSibling.style.filter='none';\"\n     style=\"position: absolute; opacity: 0; transition: opacity 0.3s;\"> <img src=\"/images/office-layout.png\" alt=\"Office floor plan\" usemap=\"#office-map\">\n<map name=\"office-map\">\n  <area shape=\"rect\" coords=\"10,10,100,50\" href=\"#meeting-room\" alt=\"Conference Room A\">\n  <area shape=\"circle\" coords=\"150,75,25\" href=\"#kitchen\" alt=\"Kitchen Area\">\n  <area shape=\"poly\" coords=\"200,10,250,50,200,90,150,50\" href=\"#workspace\" alt=\"Open Workspace\">\n</map> <div class=\"image-container\">\n  <img src=\"/images/screenshot.png\" alt=\"Application interface\">\n  <div class=\"image-overlay\">\n    <div class=\"annotation\" style=\"top: 20%; left: 30%;\">\n      <span class=\"annotation-marker\">1</span>\n      <div class=\"annotation-tooltip\">Navigation menu</div>\n    </div>\n    <div class=\"annotation\" style=\"top: 50%; left: 70%;\">\n      <span class=\"annotation-marker\">2</span>\n      <div class=\"annotation-tooltip\">Main content area</div>\n    </div>\n  </div>\n</div> <div class=\"image-slideshow\">\n  <div class=\"slide active\">\n    <img src=\"/images/slides/slide-1.jpg\" alt=\"Feature overview\">\n    <p class=\"slide-caption\">Main features and capabilities</p>\n  </div>\n  <div class=\"slide\">\n    <img src=\"/images/slides/slide-2.jpg\" alt=\"Implementation details\">\n    <p class=\"slide-caption\">Technical implementation</p>\n  </div>\n  <div class=\"slide\">\n    <img src=\"/images/slides/slide-3.jpg\" alt=\"Results and metrics\">\n    <p class=\"slide-caption\">Performance metrics and results</p>\n  </div>\n</div> ![README diagram](https://raw.githubusercontent.com/username/repo/main/docs/diagram.png) ![Architecture diagram](https://gitlab.com/username/project/-/raw/main/docs/architecture.png) <!-- Imgur -->\n![Hosted image](https://i.imgur.com/AbCdEfG.png)\n\n<!-- AWS S3 -->\n![S3 hosted](https://my-bucket.s3.amazonaws.com/images/photo.jpg)\n\n<!-- Cloudinary -->\n![Cloudinary optimized](https://res.cloudinary.com/account/image/upload/v1234/sample.jpg) ### Project Screenshots\n\n![small left: Login screen](/images/projects/login.png)\nThe login screen features a clean, minimalist design with email and password fields.\n\n![small right: Dashboard view](/images/projects/dashboard.png)\nThe dashboard provides an overview of all key metrics and recent activity.\n\n<figure>\n  <img src=\"/images/projects/analytics.png\" alt=\"Analytics page showing graphs\">\n  <figcaption>The analytics page offers detailed insights with interactive charts and graphs.</figcaption>\n</figure>",
      "code_blocks_count": 38
    },
    {
      "path": "/notes/tutorials/features/themes.md",
      "context": "tutorials",
      "metadata": {
        "title": "Theme Showcase & Test",
        "tags": [
          "themes",
          "demo",
          "showcase",
          "styling"
        ],
        "created": "2025-01-06",
        "author": "Wiki Admin",
        "description": "Comprehensive showcase of all 70 professional themes with various code examples",
        "updated": "2025-06-13",
        "category": null,
        "status": null,
        "aliases": [],
        "related": [],
        "dependencies": [],
        "keywords": [],
        "tableOfContents": "auto",
        "hideFromSearch": false
      },
      "content_preview": "This page showcases all 70 professional themes available in the Notes Wiki system. Each theme is carefully crafted to provide excellent readability and beautiful syntax highlighting.\n\n\n\n1. Open Theme ...",
      "searchable_content": "\nTheme Showcase & Test\n\nThis page showcases all 70 professional themes available in the Notes Wiki system. Each theme is carefully crafted to provide excellent readability and beautiful syntax highlighting.\n\nHow to Test Themes\n\n1. Open Theme Picker - Click the theme selector (\ud83c\udfa8) in the header\n2. Preview Themes - Hover over any theme card to see a live preview\n3. Apply Theme - Click a theme card to apply it permanently\n4. Auto Detection - Enable auto light/dark theme detection in settings\n\nComplete Theme Collection (70 Themes)\n\n\u2728 Classic Themes\n- Light - Clean, minimal light theme for daytime reading\n- Dark - Comfortable dark theme for extended coding sessions\n\n\ud83c\udfaf Editor-Inspired Themes\n- VSCode Dark Plus - The beloved VS Code default dark theme\n- One Dark Pro - Atom's iconic dark theme with enhanced colors\n- Monokai - The classic Sublime Text theme with vibrant syntax colors\n- Palenight - Material Theme's elegant purple-tinted dark theme\n- Material Ocean - Deep blue Material Design theme\n- Material Darker - Darker variant of Material theme\n- Material Palenight - Purple-hued Material theme variant\n\n\ud83c\udf38 Catppuccin Collection\n- Catppuccin Mocha - Warm, cozy dark theme with soft pastels\n- Catppuccin Latte - Light, cream-colored theme for bright environments\n\n\ud83c\udf39 Ros\u00e9 Pine Collection  \n- Ros\u00e9 Pine - Soho vibes with natural pine and faux fur tones\n- Ros\u00e9 Pine Dawn - Light variant with warm morning colors\n\n\ud83d\udc19 GitHub Themes\n- GitHub Light - GitHub's clean, professional light theme\n- GitHub Dark - GitHub's modern dark theme\n\n\ud83c\udf0a Solarized Collection\n- Solarized Light - Precision colors for machines and people (light)\n- Solarized Dark - The dark variant of the scientifically designed palette\n\n\ud83c\udfd4\ufe0f Nordic Themes\n- Nord - Arctic, north-bluish color palette inspired by the beauty of the arctic\n- Nordic - Scandinavian-inspired minimal theme\n\n\ud83c\udf42 Gruvbox Collection\n- Gruvbox Dark - Retro groove with warm, earthy dark colors\n- Gruvbox Light - Light variant with vintage paper tones\n\n\ud83c\udf03 Tokyo Night Collection\n- Tokyo Night - Inspired by the neon lights of Tokyo at night\n\n\ud83c\udfa8 Ayu Collection\n- Ayu Dark - Modern dark theme with carefully balanced colors\n- Ayu Mirage - Perfect balance between light and dark with muted colors\n- Ayu Light - Clean, bright theme with excellent contrast\n\n\ud83c\udf32 Nature-Inspired Themes\n- Everforest Dark - Forest-inspired theme with natural green tones\n- Kanagawa - Japanese aesthetic inspired by \"The Great Wave\"\n- Zenburn - Low contrast theme designed to reduce eye strain\n\n\u26a1 High-Tech Themes\n- Matrix - Enter the digital rain with green-on-black cyberpunk vibes\n- Cyberpunk - Neon-soaked future aesthetic with electric colors\n- 2077 - Inspired by futuristic cityscapes and neon lights\n- Hackthebox - Hacker terminal aesthetic with green accent colors\n\n\ud83c\udf08 Colorful & Unique Themes\n- Vaporwave - 80s retro-futuristic vibes with pink and purple gradients\n- Hotdog Stand - Windows 3.1 classic with bold red and yellow contrast\n- Shades of Purple - Rich purple theme with excellent syntax highlighting\n- Witch Hazel - Mystical purple theme with magical color combinations\n\n\ud83c\udf19 Tomorrow Collection\n- Tomorrow Night - Part of the popular Tomorrow theme family\n\n\ud83d\udc99 Blue-Tinted Themes\n- Cobalt2 - Wes Bos's popular blue-based dark theme\n- Bluloco Dark - Blue-focused dark theme with vibrant syntax colors\n- Bluloco Light - Light variant with blue accents\n- Spacegray - Space-inspired gray-blue theme\n\n\u2744\ufe0f Winter Themes\n- Winter Is Coming Dark - Dark theme inspired by winter landscapes\n- Winter Is Coming Light - Light winter theme with cool tones\n\n\ud83c\udfae Gaming & Entertainment\n- Lucario - Pok\u00e9mon-inspired blue and steel theme\n- Oxocarbon - IBM's modern design language theme\n- Noctis - Night-time inspired dark theme\n- Thinkultra - Minimalist theme with clean typography\n\n\ud83c\udfad Specialized Themes  \n- Atom One Light - Atom's default light theme\n- Protonmail - Inspired by ProtonMail's clean interface\n\nHow to Test\n\n1. Open the theme picker (sun/moon icon in header)\n2. Hover over each theme to preview it\n3. Click to apply the theme permanently\n4. Check that all code blocks below render correctly\n\nJavaScript Example\n\njavascript title:\"JavaScript Class Example\"\n// ES6 Class with various syntax elements\nclass ThemeManager {\n    constructor(options = {}) {\n        this.themes = options.themes || [];\n        this.currentTheme = options.defaultTheme || 'light';\n        this.callbacks = new Map();\n        this.initialized = false;\n    }\n\n    async initialize() {\n        try {\n            // Load saved theme from localStorage\n            const saved = localStorage.getItem('theme');\n            if (saved && this.themes.includes(saved)) {\n                this.currentTheme = saved;\n            }\n            \n            // Apply the theme\n            await this.applyTheme(this.currentTheme);\n            this.initialized = true;\n            \n            return { success: true, theme: this.currentTheme };\n        } catch (error) {\n            console.error('Failed to initialize theme:', error);\n            return { success: false, error: error.message };\n        }\n    }\n\n    applyTheme(themeName) {\n        // Validate theme exists\n        if (!this.themes.includes(themeName)) {\n            throw new Error(Theme \"${themeName}\" not found);\n        }\n\n        // Apply theme to DOM\n        document.documentElement.setAttribute('data-theme', themeName);\n        \n        // Save preference\n        localStorage.setItem('theme', themeName);\n        \n        // Trigger callbacks\n        this.callbacks.forEach(callback => callback(themeName));\n    }\n\n    // Arrow function property\n    onChange = (callback) => {\n        const id = Date.now();\n        this.callbacks.set(id, callback);\n        return () => this.callbacks.delete(id);\n    }\n}\n\n// Usage\nconst manager = new ThemeManager({\n    themes: ['light', 'dark', 'monokai'],\n    defaultTheme: 'dark'\n});\n\nmanager.initialize().then(result => {\n    console.log('Theme initialized:', result);\n});\n\n\nPython Example\n\npython title:\"Python Data Processing\"\nimport pandas as pd\nimport numpy as np\nfrom datetime import datetime, timedelta\nfrom typing import List, Dict, Optional, Union\nimport asyncio\n\nclass DataProcessor:\n    \"\"\"Process and analyze time series data with various transformations.\"\"\"\n    \n    def init(self, datapath: str, cachesize: int = 1000):\n        self.datapath = datapath\n        self.cachesize = cachesize\n        self.cache: Dict[str, pd.DataFrame] = {}\n        self.metadata = {\n            'created': datetime.now(),\n            'version': '1.0.0',\n            'author': 'System'\n        }\n    \n    @property\n    def iscached(self) -> bool:\n        \"\"\"Check if data is currently cached.\"\"\"\n        return len(self.cache) > 0\n    \n    async def loaddataasync(self, \n                            filepath: str, \n                            columns: Optional[List[str]] = None) -> pd.DataFrame:\n        \"\"\"Asynchronously load data from CSV file.\"\"\"\n        try:\n            # Simulate async operation\n            await asyncio.sleep(0.1)\n            \n            df = pd.readcsv(filepath, usecols=columns)\n            \n            # Cache the result\n            if len(self.cache) < self.cachesize:\n                self.cache[filepath] = df\n            \n            return df\n            \n        except FileNotFoundError as e:\n            print(f\"Error: File {filepath} not found\")\n            raise e\n        except Exception as e:\n            print(f\"Unexpected error: {str(e)}\")\n            raise\n    \n    def processtimeseries(self, \n                          df: pd.DataFrame, \n                          windowsize: int = 7,\n                          aggregation: str = 'mean') -> pd.DataFrame:\n        \"\"\"Apply rolling window calculations to time series data.\"\"\"\n        \n        # Validate inputs\n        if windowsize <= 0:\n            raise ValueError(\"Window size must be positive\")\n        \n        validaggregations = ['mean', 'sum', 'min', 'max', 'std']\n        if aggregation not in validaggregations:\n            raise ValueError(f\"Aggregation must be one of {validaggregations}\")\n        \n        # Apply rolling calculation\n        numericcols = df.selectdtypes(include=[np.number]).columns\n        \n        result = df.copy()\n        for col in numericcols:\n            if aggregation == 'mean':\n                result[f'{col}rolling{windowsize}d'] = df[col].rolling(windowsize).mean()\n            elif aggregation == 'sum':\n                result[f'{col}rolling{windowsize}d'] = df[col].rolling(windowsize).sum()\n            # ... etc\n        \n        return result\n    \n    @staticmethod\n    def generatesampledata(nrows: int = 1000) -> pd.DataFrame:\n        \"\"\"Generate sample time series data for testing.\"\"\"\n        dates = pd.daterange(\n            start='2024-01-01', \n            periods=nrows, \n            freq='D'\n        )\n        \n        data = {\n            'date': dates,\n            'value': np.random.randn(nrows).cumsum() + 100,\n            'volume': np.random.randint(1000, 10000, nrows),\n            'category': np.random.choice(['A', 'B', 'C'], nrows)\n        }\n        \n        return pd.DataFrame(data)\n\nExample usage\nif name == \"main\":\n    processor = DataProcessor(\"./data\")\n    \n    # Generate and process sample data\n    df = DataProcessor.generatesampledata(365)\n    processed = processor.processtimeseries(df, windowsize=30)\n    \n    print(f\"Data shape: {processed.shape}\")\n    print(f\"Columns: {list(processed.columns)}\")\n\n\nHTML/CSS Example\n\nhtml title:\"Responsive Card Component\"\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Theme Card Component</title>\n    <style>\n        / CSS Custom Properties for theming /\n        :root {\n            --card-bg: #ffffff;\n            --card-border: #e5e7eb;\n            --card-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n            --text-primary: #111827;\n            --text-secondary: #6b7280;\n            --accent-color: #3b82f6;\n        }\n\n        / Dark theme override /\n        [data-theme=\"dark\"] {\n            --card-bg: #1f2937;\n            --card-border: #374151;\n            --card-shadow: 0 4px 6px rgba(0, 0, 0, 0.3);\n            --text-primary: #f3f4f6;\n            --text-secondary: #9ca3af;\n            --accent-color: #60a5fa;\n        }\n\n        / Card component styles /\n        .card {\n            background-color: var(--card-bg);\n            border: 1px solid var(--card-border);\n            border-radius: 0.5rem;\n            box-shadow: var(--card-shadow);\n            padding: 1.5rem;\n            margin: 1rem;\n            transition: transform 0.2s ease, box-shadow 0.2s ease;\n        }\n\n        .card:hover {\n            transform: translateY(-2px);\n            box-shadow: 0 8px 12px rgba(0, 0, 0, 0.15);\n        }\n\n        .card-title {\n            color: var(--text-primary);\n            font-size: 1.25rem;\n            font-weight: 600;\n            margin: 0 0 0.5rem 0;\n        }\n\n        .card-description {\n            color: var(--text-secondary);\n            line-height: 1.5;\n            margin: 0 0 1rem 0;\n        }\n\n        .card-link {\n            color: var(--accent-color);\n            text-decoration: none;\n            font-weight: 500;\n            display: inline-flex;\n            align-items: center;\n            gap: 0.25rem;\n        }\n\n        .card-link:hover {\n            text-decoration: underline;\n        }\n\n        / Responsive grid /\n        .card-grid {\n            display: grid;\n            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n            gap: 1rem;\n            padding: 1rem;\n        }\n\n        @media (max-width: 768px) {\n            .card {\n                padding: 1rem;\n            }\n            \n            .card-grid {\n                grid-template-columns: 1fr;\n            }\n        }\n    </style>\n</head>\n<body>\n    <div class=\"card-grid\">\n        <article class=\"card\">\n            <h2 class=\"card-title\">Theme System</h2>\n            <p class=\"card-description\">\n                A comprehensive theming system with CSS custom properties \n                that supports multiple color schemes and automatic theme switching.\n            </p>\n            <a href=\"#\" class=\"card-link\">\n                Learn more\n                <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"currentColor\">\n                    <path d=\"M6.22 3.22a.75.75 0 011.06 0l4.25 4.25a.75.75 0 010 1.06l-4.25 4.25a.75.75 0 01-1.06-1.06L9.94 8 6.22 4.28a.75.75 0 010-1.06z\"/>\n                </svg>\n            </a>\n        </article>\n    </div>\n</body>\n</html>\n\n\nBash/Shell Example\n\nbash title:\"Deployment Script\"\n#!/bin/bash\nTheme deployment and build script\n\nset -euo pipefail\n\nColor output helpers\nRED='\\033[0;31m'\nGREEN='\\033[0;32m'\nYELLOW='\\033[1;33m'\nNC='\\033[0m' # No Color\n\nConfiguration\nTHEMESDIR=\"./themes\"\nBUILDDIR=\"./dist\"\nTHEMEFILES=(\n    \"light.css\"\n    \"dark.css\"\n    \"vscode-dark-plus.css\"\n    \"monokai.css\"\n    \"dracula.css\"\n    \"one-dark-pro.css\"\n    \"solarized-light.css\"\n    \"solarized-dark.css\"\n    \"github-light.css\"\n    \"github-dark.css\"\n    \"nord.css\"\n    \"gruvbox-dark.css\"\n    \"gruvbox-light.css\"\n    \"tokyo-night.css\"\n    \"palenight.css\"\n)\n\nFunction to print colored output\nlog() {\n    local level=$1\n    shift\n    case \"$level\" in\n        \"error\")\n            echo -e \"${RED}[ERROR]${NC} $\" >&2\n            ;;\n        \"success\")\n            echo -e \"${GREEN}[SUCCESS]${NC} $\"\n            ;;\n        \"warning\")\n            echo -e \"${YELLOW}[WARNING]${NC} $\"\n            ;;\n        )\n            echo \"[INFO] $\"\n            ;;\n    esac\n}\n\nValidate theme files exist\nvalidatethemes() {\n    log \"info\" \"Validating theme files...\"\n    \n    local missingthemes=()\n    \n    for theme in \"${THEMEFILES[@]}\"; do\n        if [[ ! -f \"$THEMESDIR/$theme\" ]]; then\n            missingthemes+=(\"$theme\")\n        fi\n    done\n    \n    if [[ ${#missingthemes[@]} -gt 0 ]]; then\n        log \"error\" \"Missing theme files:\"\n        printf '%s\\n' \"${missingthemes[@]}\"\n        return 1\n    fi\n    \n    log \"success\" \"All ${#THEMEFILES[@]} theme files found\"\n    return 0\n}\n\nMinify CSS files\nminifythemes() {\n    log \"info\" \"Minifying theme files...\"\n    \n    # Create build directory if it doesn't exist\n    mkdir -p \"$BUILDDIR/themes\"\n    \n    for theme in \"${THEMEFILES[@]}\"; do\n        local input=\"$THEMESDIR/$theme\"\n        local output=\"$BUILDDIR/themes/${theme%.css}.min.css\"\n        \n        # Simple CSS minification (remove comments and extra whitespace)\n        if command -v csso &> /dev/null; then\n            csso \"$input\" -o \"$output\"\n        else\n            # Fallback: basic minification with sed\n            sed -e 's/\\/\\[^]\\\\///g' \\\n                -e 's/\\s\\+/ /g' \\\n                -e 's/:\\s/:/g' \\\n                -e 's/;\\s/;/g' \\\n                -e 's/{\\s/{/g' \\\n                -e 's/}\\s/}/g' \\\n                -e 's/\\n//g' \\\n                \"$input\" > \"$output\"\n        fi\n        \n        log \"success\" \"Minified: ${theme%.css}.min.css\"\n    done\n}\n\nGenerate theme metadata\ngeneratemetadata() {\n    log \"info\" \"Generating theme metadata...\"\n    \n    cat > \"$BUILDDIR/themes/themes.json\" << EOF\n{\n    \"themes\": [\n        $(for i in \"${!THEMEFILES[@]}\"; do\n            theme=\"${THEMEFILES[$i]}\"\n            themeid=\"${theme%.css}\"\n            \n            # Add comma except for last item\n            if [[ $i -lt $((${#THEMEFILES[@]} - 1)) ]]; then\n                echo \"        \\\"$themeid\\\",\"\n            else\n                echo \"        \\\"$themeid\\\"\"\n            fi\n        done)\n    ],\n    \"count\": ${#THEMEFILES[@]},\n    \"generated\": \"$(date -u +\"%Y-%m-%dT%H:%M:%SZ\")\"\n}\nEOF\n    \n    log \"success\" \"Generated theme metadata\"\n}\n\nMain execution\nmain() {\n    log \"info\" \"Starting theme build process...\"\n    \n    # Validate themes\n    if ! validatethemes; then\n        log \"error\" \"Theme validation failed\"\n        exit 1\n    fi\n    \n    # Minify themes\n    minifythemes\n    \n    # Generate metadata\n    generatemetadata\n    \n    log \"success\" \"Theme build completed successfully!\"\n    log \"info\" \"Output directory: $BUILDDIR\"\n}\n\nRun main function\nmain \"$@\"\n\n\nJSON Configuration Example\n\njson title:\"Theme Configuration\"\n{\n    \"themes\": {\n        \"light\": {\n            \"id\": \"light\",\n            \"name\": \"Light\",\n            \"description\": \"Clean light theme for daytime use\",\n            \"type\": \"light\",\n            \"colors\": {\n                \"primary\": \"#3b82f6\",\n                \"secondary\": \"#10b981\",\n                \"background\": \"#ffffff\",\n                \"surface\": \"#f9fafb\",\n                \"text\": {\n                    \"primary\": \"#111827\",\n                    \"secondary\": \"#6b7280\",\n                    \"muted\": \"#9ca3af\"\n                },\n                \"syntax\": {\n                    \"keyword\": \"#2563eb\",\n                    \"string\": \"#059669\",\n                    \"number\": \"#dc2626\",\n                    \"function\": \"#7c3aed\",\n                    \"comment\": \"#6b7280\"\n                }\n            },\n            \"customizations\": {\n                \"scrollbar\": true,\n                \"selection\": true,\n                \"forms\": true\n            }\n        },\n        \"dracula\": {\n            \"id\": \"dracula\",\n            \"name\": \"Dracula\",\n            \"description\": \"Dark theme with vibrant colors\",\n            \"type\": \"dark\",\n            \"colors\": {\n                \"primary\": \"#bd93f9\",\n                \"secondary\": \"#50fa7b\",\n                \"background\": \"#282a36\",\n                \"surface\": \"#21222c\",\n                \"text\": {\n                    \"primary\": \"#f8f8f2\",\n                    \"secondary\": \"#6272a4\",\n                    \"muted\": \"#6272a4\"\n                },\n                \"syntax\": {\n                    \"keyword\": \"#ff79c6\",\n                    \"string\": \"#f1fa8c\",\n                    \"number\": \"#bd93f9\",\n                    \"function\": \"#50fa7b\",\n                    \"comment\": \"#6272a4\"\n                }\n            },\n            \"customizations\": {\n                \"scrollbar\": true,\n                \"selection\": true,\n                \"forms\": true\n            }\n        }\n    },\n    \"defaultTheme\": \"light\",\n    \"autoDetect\": true,\n    \"transitions\": {\n        \"enabled\": true,\n        \"duration\": \"250ms\",\n        \"easing\": \"ease-in-out\"\n    }\n}\n\n\nSQL Example\n\nsql title:\"Theme Usage Analytics\"\n-- Create tables for theme usage tracking\nCREATE TABLE IF NOT EXISTS themeusage (\n    id SERIAL PRIMARY KEY,\n    userid INTEGER NOT NULL,\n    themeid VARCHAR(50) NOT NULL,\n    appliedat TIMESTAMP DEFAULT CURRENTTIMESTAMP,\n    sessionduration INTEGER, -- in seconds\n    devicetype VARCHAR(20),\n    browser VARCHAR(50),\n    systemtheme VARCHAR(10) -- 'light' or 'dark'\n);\n\n-- Index for performance\nCREATE INDEX idxthemeusageusertheme ON themeusage(userid, themeid);\nCREATE INDEX idxthemeusageappliedat ON themeusage(appliedat);\n\n-- View for theme popularity\nCREATE OR REPLACE VIEW themepopularity AS\nSELECT \n    themeid,\n    COUNT(DISTINCT userid) as uniqueusers,\n    COUNT() as totalapplications,\n    AVG(sessionduration) as avgsessionduration,\n    MAX(appliedat) as lastused\nFROM themeusage\nWHERE appliedat >= CURRENTDATE - INTERVAL '30 days'\nGROUP BY themeid\nORDER BY uniqueusers DESC;\n\n-- Function to get user's theme history\nCREATE OR REPLACE FUNCTION getuserthemehistory(puserid INTEGER)\nRETURNS TABLE (\n    themeid VARCHAR(50),\n    appliedat TIMESTAMP,\n    durationhours NUMERIC,\n    devicetype VARCHAR(20)\n) AS $$\nBEGIN\n    RETURN QUERY\n    WITH themesessions AS (\n        SELECT \n            tu.themeid,\n            tu.appliedat,\n            tu.devicetype,\n            LEAD(tu.appliedat) OVER (\n                PARTITION BY tu.userid \n                ORDER BY tu.appliedat\n            ) as nextappliedat\n        FROM themeusage tu\n        WHERE tu.userid = puserid\n    )\n    SELECT \n        ts.themeid,\n        ts.appliedat,\n        ROUND(\n            EXTRACT(EPOCH FROM (\n                COALESCE(ts.nextappliedat, CURRENTTIMESTAMP) - ts.appliedat\n            )) / 3600, \n            2\n        ) as durationhours,\n        ts.devicetype\n    FROM themesessions ts\n    ORDER BY ts.appliedat DESC\n    LIMIT 50;\nEND;\n$$ LANGUAGE plpgsql;\n\n-- Query to find most popular themes by time of day\nWITH hourlyusage AS (\n    SELECT \n        themeid,\n        EXTRACT(HOUR FROM appliedat) as hourofday,\n        COUNT() as usagecount\n    FROM themeusage\n    WHERE appliedat >= CURRENTDATE - INTERVAL '7 days'\n    GROUP BY themeid, hourofday\n),\nrankedthemes AS (\n    SELECT \n        hourofday,\n        themeid,\n        usagecount,\n        ROWNUMBER() OVER (\n            PARTITION BY hourofday \n            ORDER BY usagecount DESC\n        ) as rank\n    FROM hourlyusage\n)\nSELECT \n    hourofday,\n    themeid as mostpopulartheme,\n    usagecount\nFROM rankedthemes\nWHERE rank = 1\nORDER BY hourofday;\n\n\nYAML Configuration\n\nyaml title:\"Theme Build Configuration\"\nTheme build configuration file\nversion: 1.0.0\nbuild:\n  inputdir: ./themes\n  outputdir: ./dist/themes\n  \n  # Minification settings\n  minify:\n    enabled: true\n    removecomments: true\n    removewhitespace: true\n    mergemediaqueries: true\n    \n  # Optimization settings\n  optimize:\n    mergesimilarrules: true\n    removeunusedcss: false\n    inlinecriticalcss: false\n\nTheme definitions\nthemes:\n  - id: light\n    file: light.css\n    type: light\n    default: true\n    \n  - id: dark\n    file: dark.css\n    type: dark\n    \n  - id: vscode-dark-plus\n    file: vscode-dark-plus.css\n    type: dark\n    category: editor\n    \n  - id: monokai\n    file: monokai.css\n    type: dark\n    category: editor\n    \n  - id: dracula\n    file: dracula.css\n    type: dark\n    category: popular\n    \n  - id: one-dark-pro\n    file: one-dark-pro.css\n    type: dark\n    category: editor\n    \n  - id: solarized-light\n    file: solarized-light.css\n    type: light\n    category: classic\n    \n  - id: solarized-dark\n    file: solarized-dark.css\n    type: dark\n    category: classic\n    \n  - id: github-light\n    file: github-light.css\n    type: light\n    category: git\n    \n  - id: github-dark\n    file: github-dark.css\n    type: dark\n    category: git\n    \n  - id: nord\n    file: nord.css\n    type: dark\n    category: nordic\n    \n  - id: gruvbox-dark\n    file: gruvbox-dark.css\n    type: dark\n    category: retro\n    \n  - id: gruvbox-light\n    file: gruvbox-light.css\n    type: light\n    category: retro\n    \n  - id: tokyo-night\n    file: tokyo-night.css\n    type: dark\n    category: modern\n    \n  - id: palenight\n    file: palenight.css\n    type: dark\n    category: material\n\nAuto theme detection\nautotheme:\n  enabled: true\n  lightthemes: [light, solarized-light, github-light, gruvbox-light]\n  darkthemes: [dark, vscode-dark-plus, monokai, dracula, one-dark-pro, \n                solarized-dark, github-dark, nord, gruvbox-dark, \n                tokyo-night, palenight]\n  \n  # Time-based switching (optional)\n  schedule:\n    enabled: false\n    lightstart: \"06:00\"\n    darkstart: \"18:00\"\n\nTheme preview settings\npreview:\n  delayms: 200\n  restoreonleave: true\n  showcolorswatches: true\n\n\nCollapsible Code Example\n\njavascript title:\"Collapsible Example\" collapse:\"true\"\n// This code block is collapsible!\n// Click the arrow to expand/collapse\n\nfunction generateThemeCSS(theme) {\n    const { colors, typography, spacing } = theme;\n    \n    return \n        :root[data-theme=\"${theme.id}\"] {\n            / Color System /\n            --color-primary: ${colors.primary};\n            --color-secondary: ${colors.secondary};\n            --color-accent: ${colors.accent};\n            --color-background: ${colors.background};\n            --color-surface: ${colors.surface};\n            --color-text: ${colors.text};\n            --color-text-muted: ${colors.textMuted};\n            \n            / Typography /\n            --font-family: ${typography.fontFamily};\n            --font-size-base: ${typography.sizeBase};\n            --line-height-base: ${typography.lineHeight};\n            \n            / Spacing /\n            --spacing-unit: ${spacing.unit};\n            --spacing-xs: calc(var(--spacing-unit)  0.25);\n            --spacing-sm: calc(var(--spacing-unit)  0.5);\n            --spacing-md: var(--spacing-unit);\n            --spacing-lg: calc(var(--spacing-unit)  1.5);\n            --spacing-xl: calc(var(--spacing-unit)  2);\n        }\n    ;\n}\n\n// Generate CSS for all themes\nconst themes = getThemeDefinitions();\nconst cssOutput = themes.map(generateThemeCSS).join('\\n\\n');\n\nconsole.log('Generated theme CSS:', cssOutput);\n\n\nTesting Notes\n\nWhen testing themes, pay attention to:\n\n1. Color Contrast - Ensure text is readable against backgrounds\n2. Syntax Highlighting - All token types should be distinguishable\n3. UI Elements - Buttons, links, and interactive elements should be visible\n4. Code Blocks - Headers, titles, and copy buttons should be styled appropriately\n5. Transitions - Theme switching should be smooth without flashing\n6. Hover States - Interactive elements should have clear hover feedback\n7. Selection Colors - Text selection should be visible and pleasant\n8. Scrollbars - Custom scrollbar styling should match the theme\n\nTheme Implementation Complete!\n\nAll 70 professional themes have been successfully implemented with:\n\n- \u2705 Full CSS custom property definitions\n- \u2705 Comprehensive syntax highlighting for all languages\n- \u2705 Smooth theme preview on hover\n- \u2705 System theme detection (auto light/dark)\n- \u2705 Persistent theme selection\n- \u2705 Responsive design with smart context filtering\n- \u2705 Beautiful, consistent styling across all themes\n\nTry switching between themes using the theme picker in the header to see the magic happen! \ud83c\udfa8 javascript JavaScript Class Example // ES6 Class with various syntax elements\nclass ThemeManager {\n    constructor(options = {}) {\n        this.themes = options.themes || [];\n        this.currentTheme = options.defaultTheme || 'light';\n        this.callbacks = new Map();\n        this._initialized = false;\n    }\n\n    async initialize() {\n        try {\n            // Load saved theme from localStorage\n            const saved = localStorage.getItem('theme');\n            if (saved && this.themes.includes(saved)) {\n                this.currentTheme = saved;\n            }\n            \n            // Apply the theme\n            await this.applyTheme(this.currentTheme);\n            this._initialized = true;\n            \n            return { success: true, theme: this.currentTheme };\n        } catch (error) {\n            console.error('Failed to initialize theme:', error);\n            return { success: false, error: error.message };\n        }\n    }\n\n    applyTheme(themeName) {\n        // Validate theme exists\n        if (!this.themes.includes(themeName)) {\n            throw new Error(`Theme \"${themeName}\" not found`);\n        }\n\n        // Apply theme to DOM\n        document.documentElement.setAttribute('data-theme', themeName);\n        \n        // Save preference\n        localStorage.setItem('theme', themeName);\n        \n        // Trigger callbacks\n        this.callbacks.forEach(callback => callback(themeName));\n    }\n\n    // Arrow function property\n    onChange = (callback) => {\n        const id = Date.now();\n        this.callbacks.set(id, callback);\n        return () => this.callbacks.delete(id);\n    }\n}\n\n// Usage\nconst manager = new ThemeManager({\n    themes: ['light', 'dark', 'monokai'],\n    defaultTheme: 'dark'\n});\n\nmanager.initialize().then(result => {\n    console.log('Theme initialized:', result);\n}); python Python Data Processing import pandas as pd\nimport numpy as np\nfrom datetime import datetime, timedelta\nfrom typing import List, Dict, Optional, Union\nimport asyncio\n\nclass DataProcessor:\n    \"\"\"Process and analyze time series data with various transformations.\"\"\"\n    \n    def __init__(self, data_path: str, cache_size: int = 1000):\n        self.data_path = data_path\n        self.cache_size = cache_size\n        self._cache: Dict[str, pd.DataFrame] = {}\n        self._metadata = {\n            'created': datetime.now(),\n            'version': '1.0.0',\n            'author': 'System'\n        }\n    \n    @property\n    def is_cached(self) -> bool:\n        \"\"\"Check if data is currently cached.\"\"\"\n        return len(self._cache) > 0\n    \n    async def load_data_async(self, \n                            file_path: str, \n                            columns: Optional[List[str]] = None) -> pd.DataFrame:\n        \"\"\"Asynchronously load data from CSV file.\"\"\"\n        try:\n            # Simulate async operation\n            await asyncio.sleep(0.1)\n            \n            df = pd.read_csv(file_path, usecols=columns)\n            \n            # Cache the result\n            if len(self._cache) < self.cache_size:\n                self._cache[file_path] = df\n            \n            return df\n            \n        except FileNotFoundError as e:\n            print(f\"Error: File {file_path} not found\")\n            raise e\n        except Exception as e:\n            print(f\"Unexpected error: {str(e)}\")\n            raise\n    \n    def process_timeseries(self, \n                          df: pd.DataFrame, \n                          window_size: int = 7,\n                          aggregation: str = 'mean') -> pd.DataFrame:\n        \"\"\"Apply rolling window calculations to time series data.\"\"\"\n        \n        # Validate inputs\n        if window_size <= 0:\n            raise ValueError(\"Window size must be positive\")\n        \n        valid_aggregations = ['mean', 'sum', 'min', 'max', 'std']\n        if aggregation not in valid_aggregations:\n            raise ValueError(f\"Aggregation must be one of {valid_aggregations}\")\n        \n        # Apply rolling calculation\n        numeric_cols = df.select_dtypes(include=[np.number]).columns\n        \n        result = df.copy()\n        for col in numeric_cols:\n            if aggregation == 'mean':\n                result[f'{col}_rolling_{window_size}d'] = df[col].rolling(window_size).mean()\n            elif aggregation == 'sum':\n                result[f'{col}_rolling_{window_size}d'] = df[col].rolling(window_size).sum()\n            # ... etc\n        \n        return result\n    \n    @staticmethod\n    def generate_sample_data(n_rows: int = 1000) -> pd.DataFrame:\n        \"\"\"Generate sample time series data for testing.\"\"\"\n        dates = pd.date_range(\n            start='2024-01-01', \n            periods=n_rows, \n            freq='D'\n        )\n        \n        data = {\n            'date': dates,\n            'value': np.random.randn(n_rows).cumsum() + 100,\n            'volume': np.random.randint(1000, 10000, n_rows),\n            'category': np.random.choice(['A', 'B', 'C'], n_rows)\n        }\n        \n        return pd.DataFrame(data)\n\n# Example usage\nif __name__ == \"__main__\":\n    processor = DataProcessor(\"./data\")\n    \n    # Generate and process sample data\n    df = DataProcessor.generate_sample_data(365)\n    processed = processor.process_timeseries(df, window_size=30)\n    \n    print(f\"Data shape: {processed.shape}\")\n    print(f\"Columns: {list(processed.columns)}\") html Responsive Card Component <!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Theme Card Component</title>\n    <style>\n        /* CSS Custom Properties for theming */\n        :root {\n            --card-bg: #ffffff;\n            --card-border: #e5e7eb;\n            --card-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n            --text-primary: #111827;\n            --text-secondary: #6b7280;\n            --accent-color: #3b82f6;\n        }\n\n        /* Dark theme override */\n        [data-theme=\"dark\"] {\n            --card-bg: #1f2937;\n            --card-border: #374151;\n            --card-shadow: 0 4px 6px rgba(0, 0, 0, 0.3);\n            --text-primary: #f3f4f6;\n            --text-secondary: #9ca3af;\n            --accent-color: #60a5fa;\n        }\n\n        /* Card component styles */\n        .card {\n            background-color: var(--card-bg);\n            border: 1px solid var(--card-border);\n            border-radius: 0.5rem;\n            box-shadow: var(--card-shadow);\n            padding: 1.5rem;\n            margin: 1rem;\n            transition: transform 0.2s ease, box-shadow 0.2s ease;\n        }\n\n        .card:hover {\n            transform: translateY(-2px);\n            box-shadow: 0 8px 12px rgba(0, 0, 0, 0.15);\n        }\n\n        .card-title {\n            color: var(--text-primary);\n            font-size: 1.25rem;\n            font-weight: 600;\n            margin: 0 0 0.5rem 0;\n        }\n\n        .card-description {\n            color: var(--text-secondary);\n            line-height: 1.5;\n            margin: 0 0 1rem 0;\n        }\n\n        .card-link {\n            color: var(--accent-color);\n            text-decoration: none;\n            font-weight: 500;\n            display: inline-flex;\n            align-items: center;\n            gap: 0.25rem;\n        }\n\n        .card-link:hover {\n            text-decoration: underline;\n        }\n\n        /* Responsive grid */\n        .card-grid {\n            display: grid;\n            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n            gap: 1rem;\n            padding: 1rem;\n        }\n\n        @media (max-width: 768px) {\n            .card {\n                padding: 1rem;\n            }\n            \n            .card-grid {\n                grid-template-columns: 1fr;\n            }\n        }\n    </style>\n</head>\n<body>\n    <div class=\"card-grid\">\n        <article class=\"card\">\n            <h2 class=\"card-title\">Theme System</h2>\n            <p class=\"card-description\">\n                A comprehensive theming system with CSS custom properties \n                that supports multiple color schemes and automatic theme switching.\n            </p>\n            <a href=\"#\" class=\"card-link\">\n                Learn more\n                <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"currentColor\">\n                    <path d=\"M6.22 3.22a.75.75 0 011.06 0l4.25 4.25a.75.75 0 010 1.06l-4.25 4.25a.75.75 0 01-1.06-1.06L9.94 8 6.22 4.28a.75.75 0 010-1.06z\"/>\n                </svg>\n            </a>\n        </article>\n    </div>\n</body>\n</html> bash Deployment Script #!/bin/bash\n# Theme deployment and build script\n\nset -euo pipefail\n\n# Color output helpers\nRED='\\033[0;31m'\nGREEN='\\033[0;32m'\nYELLOW='\\033[1;33m'\nNC='\\033[0m' # No Color\n\n# Configuration\nTHEMES_DIR=\"./themes\"\nBUILD_DIR=\"./dist\"\nTHEME_FILES=(\n    \"light.css\"\n    \"dark.css\"\n    \"vscode-dark-plus.css\"\n    \"monokai.css\"\n    \"dracula.css\"\n    \"one-dark-pro.css\"\n    \"solarized-light.css\"\n    \"solarized-dark.css\"\n    \"github-light.css\"\n    \"github-dark.css\"\n    \"nord.css\"\n    \"gruvbox-dark.css\"\n    \"gruvbox-light.css\"\n    \"tokyo-night.css\"\n    \"palenight.css\"\n)\n\n# Function to print colored output\nlog() {\n    local level=$1\n    shift\n    case \"$level\" in\n        \"error\")\n            echo -e \"${RED}[ERROR]${NC} $*\" >&2\n            ;;\n        \"success\")\n            echo -e \"${GREEN}[SUCCESS]${NC} $*\"\n            ;;\n        \"warning\")\n            echo -e \"${YELLOW}[WARNING]${NC} $*\"\n            ;;\n        *)\n            echo \"[INFO] $*\"\n            ;;\n    esac\n}\n\n# Validate theme files exist\nvalidate_themes() {\n    log \"info\" \"Validating theme files...\"\n    \n    local missing_themes=()\n    \n    for theme in \"${THEME_FILES[@]}\"; do\n        if [[ ! -f \"$THEMES_DIR/$theme\" ]]; then\n            missing_themes+=(\"$theme\")\n        fi\n    done\n    \n    if [[ ${#missing_themes[@]} -gt 0 ]]; then\n        log \"error\" \"Missing theme files:\"\n        printf '%s\\n' \"${missing_themes[@]}\"\n        return 1\n    fi\n    \n    log \"success\" \"All ${#THEME_FILES[@]} theme files found\"\n    return 0\n}\n\n# Minify CSS files\nminify_themes() {\n    log \"info\" \"Minifying theme files...\"\n    \n    # Create build directory if it doesn't exist\n    mkdir -p \"$BUILD_DIR/themes\"\n    \n    for theme in \"${THEME_FILES[@]}\"; do\n        local input=\"$THEMES_DIR/$theme\"\n        local output=\"$BUILD_DIR/themes/${theme%.css}.min.css\"\n        \n        # Simple CSS minification (remove comments and extra whitespace)\n        if command -v csso &> /dev/null; then\n            csso \"$input\" -o \"$output\"\n        else\n            # Fallback: basic minification with sed\n            sed -e 's/\\/\\*[^*]*\\*\\///g' \\\n                -e 's/\\s\\+/ /g' \\\n                -e 's/:\\s/:/g' \\\n                -e 's/;\\s/;/g' \\\n                -e 's/{\\s/{/g' \\\n                -e 's/}\\s/}/g' \\\n                -e 's/\\n//g' \\\n                \"$input\" > \"$output\"\n        fi\n        \n        log \"success\" \"Minified: ${theme%.css}.min.css\"\n    done\n}\n\n# Generate theme metadata\ngenerate_metadata() {\n    log \"info\" \"Generating theme metadata...\"\n    \n    cat > \"$BUILD_DIR/themes/themes.json\" << EOF\n{\n    \"themes\": [\n        $(for i in \"${!THEME_FILES[@]}\"; do\n            theme=\"${THEME_FILES[$i]}\"\n            theme_id=\"${theme%.css}\"\n            \n            # Add comma except for last item\n            if [[ $i -lt $((${#THEME_FILES[@]} - 1)) ]]; then\n                echo \"        \\\"$theme_id\\\",\"\n            else\n                echo \"        \\\"$theme_id\\\"\"\n            fi\n        done)\n    ],\n    \"count\": ${#THEME_FILES[@]},\n    \"generated\": \"$(date -u +\"%Y-%m-%dT%H:%M:%SZ\")\"\n}\nEOF\n    \n    log \"success\" \"Generated theme metadata\"\n}\n\n# Main execution\nmain() {\n    log \"info\" \"Starting theme build process...\"\n    \n    # Validate themes\n    if ! validate_themes; then\n        log \"error\" \"Theme validation failed\"\n        exit 1\n    fi\n    \n    # Minify themes\n    minify_themes\n    \n    # Generate metadata\n    generate_metadata\n    \n    log \"success\" \"Theme build completed successfully!\"\n    log \"info\" \"Output directory: $BUILD_DIR\"\n}\n\n# Run main function\nmain \"$@\" json Theme Configuration {\n    \"themes\": {\n        \"light\": {\n            \"id\": \"light\",\n            \"name\": \"Light\",\n            \"description\": \"Clean light theme for daytime use\",\n            \"type\": \"light\",\n            \"colors\": {\n                \"primary\": \"#3b82f6\",\n                \"secondary\": \"#10b981\",\n                \"background\": \"#ffffff\",\n                \"surface\": \"#f9fafb\",\n                \"text\": {\n                    \"primary\": \"#111827\",\n                    \"secondary\": \"#6b7280\",\n                    \"muted\": \"#9ca3af\"\n                },\n                \"syntax\": {\n                    \"keyword\": \"#2563eb\",\n                    \"string\": \"#059669\",\n                    \"number\": \"#dc2626\",\n                    \"function\": \"#7c3aed\",\n                    \"comment\": \"#6b7280\"\n                }\n            },\n            \"customizations\": {\n                \"scrollbar\": true,\n                \"selection\": true,\n                \"forms\": true\n            }\n        },\n        \"dracula\": {\n            \"id\": \"dracula\",\n            \"name\": \"Dracula\",\n            \"description\": \"Dark theme with vibrant colors\",\n            \"type\": \"dark\",\n            \"colors\": {\n                \"primary\": \"#bd93f9\",\n                \"secondary\": \"#50fa7b\",\n                \"background\": \"#282a36\",\n                \"surface\": \"#21222c\",\n                \"text\": {\n                    \"primary\": \"#f8f8f2\",\n                    \"secondary\": \"#6272a4\",\n                    \"muted\": \"#6272a4\"\n                },\n                \"syntax\": {\n                    \"keyword\": \"#ff79c6\",\n                    \"string\": \"#f1fa8c\",\n                    \"number\": \"#bd93f9\",\n                    \"function\": \"#50fa7b\",\n                    \"comment\": \"#6272a4\"\n                }\n            },\n            \"customizations\": {\n                \"scrollbar\": true,\n                \"selection\": true,\n                \"forms\": true\n            }\n        }\n    },\n    \"defaultTheme\": \"light\",\n    \"autoDetect\": true,\n    \"transitions\": {\n        \"enabled\": true,\n        \"duration\": \"250ms\",\n        \"easing\": \"ease-in-out\"\n    }\n} sql Theme Usage Analytics -- Create tables for theme usage tracking\nCREATE TABLE IF NOT EXISTS theme_usage (\n    id SERIAL PRIMARY KEY,\n    user_id INTEGER NOT NULL,\n    theme_id VARCHAR(50) NOT NULL,\n    applied_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    session_duration INTEGER, -- in seconds\n    device_type VARCHAR(20),\n    browser VARCHAR(50),\n    system_theme VARCHAR(10) -- 'light' or 'dark'\n);\n\n-- Index for performance\nCREATE INDEX idx_theme_usage_user_theme ON theme_usage(user_id, theme_id);\nCREATE INDEX idx_theme_usage_applied_at ON theme_usage(applied_at);\n\n-- View for theme popularity\nCREATE OR REPLACE VIEW theme_popularity AS\nSELECT \n    theme_id,\n    COUNT(DISTINCT user_id) as unique_users,\n    COUNT(*) as total_applications,\n    AVG(session_duration) as avg_session_duration,\n    MAX(applied_at) as last_used\nFROM theme_usage\nWHERE applied_at >= CURRENT_DATE - INTERVAL '30 days'\nGROUP BY theme_id\nORDER BY unique_users DESC;\n\n-- Function to get user's theme history\nCREATE OR REPLACE FUNCTION get_user_theme_history(p_user_id INTEGER)\nRETURNS TABLE (\n    theme_id VARCHAR(50),\n    applied_at TIMESTAMP,\n    duration_hours NUMERIC,\n    device_type VARCHAR(20)\n) AS $$\nBEGIN\n    RETURN QUERY\n    WITH theme_sessions AS (\n        SELECT \n            tu.theme_id,\n            tu.applied_at,\n            tu.device_type,\n            LEAD(tu.applied_at) OVER (\n                PARTITION BY tu.user_id \n                ORDER BY tu.applied_at\n            ) as next_applied_at\n        FROM theme_usage tu\n        WHERE tu.user_id = p_user_id\n    )\n    SELECT \n        ts.theme_id,\n        ts.applied_at,\n        ROUND(\n            EXTRACT(EPOCH FROM (\n                COALESCE(ts.next_applied_at, CURRENT_TIMESTAMP) - ts.applied_at\n            )) / 3600, \n            2\n        ) as duration_hours,\n        ts.device_type\n    FROM theme_sessions ts\n    ORDER BY ts.applied_at DESC\n    LIMIT 50;\nEND;\n$$ LANGUAGE plpgsql;\n\n-- Query to find most popular themes by time of day\nWITH hourly_usage AS (\n    SELECT \n        theme_id,\n        EXTRACT(HOUR FROM applied_at) as hour_of_day,\n        COUNT(*) as usage_count\n    FROM theme_usage\n    WHERE applied_at >= CURRENT_DATE - INTERVAL '7 days'\n    GROUP BY theme_id, hour_of_day\n),\nranked_themes AS (\n    SELECT \n        hour_of_day,\n        theme_id,\n        usage_count,\n        ROW_NUMBER() OVER (\n            PARTITION BY hour_of_day \n            ORDER BY usage_count DESC\n        ) as rank\n    FROM hourly_usage\n)\nSELECT \n    hour_of_day,\n    theme_id as most_popular_theme,\n    usage_count\nFROM ranked_themes\nWHERE rank = 1\nORDER BY hour_of_day; yaml Theme Build Configuration # Theme build configuration file\nversion: 1.0.0\nbuild:\n  input_dir: ./themes\n  output_dir: ./dist/themes\n  \n  # Minification settings\n  minify:\n    enabled: true\n    remove_comments: true\n    remove_whitespace: true\n    merge_media_queries: true\n    \n  # Optimization settings\n  optimize:\n    merge_similar_rules: true\n    remove_unused_css: false\n    inline_critical_css: false\n\n# Theme definitions\nthemes:\n  - id: light\n    file: light.css\n    type: light\n    default: true\n    \n  - id: dark\n    file: dark.css\n    type: dark\n    \n  - id: vscode-dark-plus\n    file: vscode-dark-plus.css\n    type: dark\n    category: editor\n    \n  - id: monokai\n    file: monokai.css\n    type: dark\n    category: editor\n    \n  - id: dracula\n    file: dracula.css\n    type: dark\n    category: popular\n    \n  - id: one-dark-pro\n    file: one-dark-pro.css\n    type: dark\n    category: editor\n    \n  - id: solarized-light\n    file: solarized-light.css\n    type: light\n    category: classic\n    \n  - id: solarized-dark\n    file: solarized-dark.css\n    type: dark\n    category: classic\n    \n  - id: github-light\n    file: github-light.css\n    type: light\n    category: git\n    \n  - id: github-dark\n    file: github-dark.css\n    type: dark\n    category: git\n    \n  - id: nord\n    file: nord.css\n    type: dark\n    category: nordic\n    \n  - id: gruvbox-dark\n    file: gruvbox-dark.css\n    type: dark\n    category: retro\n    \n  - id: gruvbox-light\n    file: gruvbox-light.css\n    type: light\n    category: retro\n    \n  - id: tokyo-night\n    file: tokyo-night.css\n    type: dark\n    category: modern\n    \n  - id: palenight\n    file: palenight.css\n    type: dark\n    category: material\n\n# Auto theme detection\nauto_theme:\n  enabled: true\n  light_themes: [light, solarized-light, github-light, gruvbox-light]\n  dark_themes: [dark, vscode-dark-plus, monokai, dracula, one-dark-pro, \n                solarized-dark, github-dark, nord, gruvbox-dark, \n                tokyo-night, palenight]\n  \n  # Time-based switching (optional)\n  schedule:\n    enabled: false\n    light_start: \"06:00\"\n    dark_start: \"18:00\"\n\n# Theme preview settings\npreview:\n  delay_ms: 200\n  restore_on_leave: true\n  show_color_swatches: true",
      "code_blocks_count": 7
    },
    {
      "path": "/notes/tutorials/advanced/search-index-management.md",
      "context": "tutorials",
      "metadata": {
        "title": "Search Index Management",
        "tags": [
          "advanced",
          "search",
          "build",
          "troubleshooting"
        ],
        "created": "2024-01-20",
        "author": "Wiki Team",
        "description": "Advanced guide to managing and optimizing the search index",
        "updated": "2024-01-20",
        "category": null,
        "status": null,
        "aliases": [],
        "related": [],
        "dependencies": [],
        "keywords": [],
        "tableOfContents": "auto",
        "hideFromSearch": false
      },
      "content_preview": "Learn how to effectively manage your wiki's search index for optimal performance and comprehensive search capabilities.\n\n\n\nThe search index is the heart of your wiki's search functionality. It's a JSO...",
      "searchable_content": "\nSearch Index Management\n\nLearn how to effectively manage your wiki's search index for optimal performance and comprehensive search capabilities.\n\n\ud83d\udd0d Understanding the Search Index\n\nThe search index is the heart of your wiki's search functionality. It's a JSON file (notes-index.json) that contains:\n\n- Full text content of all markdown files\n- Metadata (title, tags, author, dates)\n- Code blocks with language information\n- File paths and relationships\n- Tag mappings for filtering\n\nHow It Works\n\nmermaid\ngraph LR\n    A[Markdown Files] --> B[build.py]\n    B --> C[YAML Parser]\n    B --> D[Content Extractor]\n    C --> E[notes-index.json]\n    D --> E\n    E --> F[Search Engine]\n\n\n\ud83d\udee0\ufe0f Building the Search Index\n\nBasic Build Command\n\nbash\nStandard build\npython3 build.py\n\nExpected output:\nScanning notes directory...\nProcessing: notes/tutorials/features/search-guide.md\n...\n\u2705 Build complete!\n\ud83d\udcca Stats:\n- Total notes: 24\n- Total tags: 15\n- Total authors: 2\n- Index size: 847.2 KB\n\n\nBuild Process Details\n\nThe build script performs these operations:\n\n1. Directory Scanning: Recursively finds all .md files in /notes/\n2. Frontmatter Parsing: Extracts YAML metadata using js-yaml\n3. Content Processing: Converts markdown to searchable text\n4. Code Block Extraction: Identifies and indexes code snippets\n5. Index Generation: Creates optimized JSON structure\n6. File Writing: Saves notes-index.json\n\n\ud83d\udcca Index Structure\n\nExample Index Entry\n\njson\n{\n  \"id\": \"tutorials/features/search-guide\",\n  \"title\": \"Advanced Search Guide\",\n  \"content\": \"Learn to master the powerful search features...\",\n  \"tags\": [\"search\", \"features\", \"tutorial\"],\n  \"author\": \"Wiki Team\",\n  \"created\": \"2024-01-15\",\n  \"updated\": \"2024-01-20\",\n  \"description\": \"Complete guide to search operators\",\n  \"codeBlocks\": [\n    {\n      \"language\": \"bash\",\n      \"content\": \"tag:tutorial author:john\",\n      \"title\": \"Search Example\"\n    }\n  ],\n  \"path\": \"notes/tutorials/features/search-guide.md\",\n  \"wordCount\": 1247,\n  \"readingTime\": 5\n}\n\n\n\ud83d\udd27 Advanced Build Options\n\nCustom Build Script\n\nYou can modify build.py for specific needs:\n\npython\nCustom build with additional processing\nimport json\nimport os\nfrom pathlib import Path\n\ndef custombuild():\n    # Add custom logic here\n    notesdir = Path(\"notes\")\n    index = []\n    \n    for mdfile in notesdir.rglob(\".md\"):\n        # Custom processing logic\n        entry = processfile(mdfile)\n        index.append(entry)\n    \n    # Save with custom formatting\n    with open(\"notes-index.json\", \"w\") as f:\n        json.dump(index, f, indent=2, ensureascii=False)\n\n\nBuild Automation\n\nGit Hooks\nbash\n#!/bin/sh\n.git/hooks/pre-commit\necho \"Rebuilding search index...\"\npython3 build.py\ngit add notes-index.json\n\n\nGitHub Actions\nyaml\n.github/workflows/build-index.yml\nname: Build Search Index\non:\n  push:\n    paths: ['notes//.md']\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v2\n      - name: Build index\n        run: python3 build.py\n      - name: Commit updated index\n        run: |\n          git config --local user.email \"action@github.com\"\n          git config --local user.name \"GitHub Action\"\n          git add notes-index.json\n          git commit -m \"Update search index\" || exit 0\n          git push\n\n\nGitLab CI\nyaml\n.gitlab-ci.yml addition\nbuildindex:\n  stage: build\n  script:\n    - python3 build.py\n  artifacts:\n    paths:\n      - notes-index.json\n  only:\n    changes:\n      - notes//.md\n\n\n\ud83d\udea8 Troubleshooting\n\nCommon Issues\n\n1. Build Fails with YAML Error\nbash\nError: yaml.scanner.ScannerError\nCause: Invalid YAML frontmatter\n\nSolution: Check frontmatter syntax\nhead -10 problematic-file.md\n\nFix common issues:\n- Use spaces, not tabs for indentation\n- Quote strings with special characters\n- Check for unmatched brackets/quotes\n\n\n2. Empty Search Results\nbash\nCheck if index file exists\nls -la notes-index.json\n\nCheck file size (should be > 1KB)\ndu -h notes-index.json\n\nValidate JSON structure\npython3 -m json.tool notes-index.json > /dev/null\n\n\n3. Missing Notes in Search\nbash\nCheck file permissions\nfind notes/ -name \".md\" ! -perm -644\n\nCheck for hidden files\nfind notes/ -name \".\" -type f\n\nVerify file encoding\nfile notes/your-file.md\n\n\n4. Performance Issues\nbash\nCheck index size\nls -lh notes-index.json\n\nIf index is > 10MB, consider optimization:\n- Remove large code blocks from index\n- Split large notes into smaller files\n- Use excerpt fields instead of full content\n\n\nDiagnostic Commands\n\nbash\nCount indexed notes\ngrep -o '\"id\":' notes-index.json | wc -l\n\nCheck for duplicate IDs\ngrep '\"id\":' notes-index.json | sort | uniq -d\n\nFind largest entries\npython3 -c \"\nimport json\nwith open('notes-index.json') as f:\n    data = json.load(f)\nentries = [(len(str(item)), item['id']) for item in data]\nfor size, id in sorted(entries, reverse=True)[:5]:\n    print(f'{size:6d} bytes: {id}')\n\"\n\nValidate all frontmatter\nfind notes/ -name \".md\" -exec python3 -c \"\nimport yaml\nimport sys\ntry:\n    with open(sys.argv[1]) as f:\n        content = f.read()\n    if content.startswith('---'):\n        frontmatter = content.split('---')[1]\n        yaml.safeload(frontmatter)\n    print(f'\u2705 {sys.argv[1]}')\nexcept Exception as e:\n    print(f'\u274c {sys.argv[1]}: {e}')\n\" {} \\;\n\n\n\u26a1 Performance Optimization\n\nIndex Size Management\n\npython\nOptimize build.py for large wikis\ndef optimizecontent(content):\n    # Limit content length for search\n    if len(content) > 10000:  # 10KB limit\n        content = content[:9900] + \"...\"\n    return content\n\ndef extractexcerpt(content, length=500):\n    # Create search-optimized excerpt\n    lines = content.split('\\n')\n    excerpt = []\n    charcount = 0\n    \n    for line in lines:\n        if charcount + len(line) > length:\n            break\n        excerpt.append(line)\n        charcount += len(line)\n    \n    return '\\n'.join(excerpt)\n\n\nSearch Performance\n\njavascript\n// Client-side search optimization\nclass SearchOptimizer {\n    constructor() {\n        this.searchCache = new Map();\n        this.indexedDB = null; // For large indexes\n    }\n    \n    // Cache frequent searches\n    cacheSearch(query, results) {\n        this.searchCache.set(query, results);\n        if (this.searchCache.size > 100) {\n            const firstKey = this.searchCache.keys().next().value;\n            this.searchCache.delete(firstKey);\n        }\n    }\n    \n    // Progressive search loading\n    async loadIndexProgressive() {\n        const response = await fetch('notes-index.json');\n        const reader = response.body.getReader();\n        // Process chunks as they arrive\n    }\n}\n\n\n\ud83d\udcc8 Monitoring Index Health\n\nIndex Statistics\n\nbash\nCreate index health check script\ncat > check-index.sh << 'EOF'\n#!/bin/bash\n\necho \"=== Search Index Health Check ===\"\necho\n\nFile info\nINDEXFILE=\"notes-index.json\"\nif [ -f \"$INDEXFILE\" ]; then\n    echo \"\u2705 Index file exists\"\n    echo \"\ud83d\udcca Size: $(du -h $INDEXFILE | cut -f1)\"\n    echo \"\ud83d\udcc5 Modified: $(date -r $INDEXFILE)\"\nelse\n    echo \"\u274c Index file missing\"\n    exit 1\nfi\n\nJSON validation\nif python3 -m json.tool $INDEXFILE > /dev/null 2>&1; then\n    echo \"\u2705 Valid JSON structure\"\nelse\n    echo \"\u274c Invalid JSON structure\"\n    exit 1\nfi\n\nEntry count\nENTRYCOUNT=$(grep -o '\"id\":' $INDEXFILE | wc -l)\necho \"\ud83d\udcdd Entries: $ENTRYCOUNT\"\n\nFile count comparison\nMDCOUNT=$(find notes/ -name \".md\" | wc -l)\necho \"\ud83d\udcc1 Markdown files: $MDCOUNT\"\n\nif [ $ENTRYCOUNT -eq $MDCOUNT ]; then\n    echo \"\u2705 All files indexed\"\nelse\n    echo \"\u26a0\ufe0f  Index/file count mismatch\"\nfi\n\nSize analysis\nLARGEENTRIES=$(python3 -c \"\nimport json\nwith open('$INDEXFILE') as f:\n    data = json.load(f)\nlarge = [item['id'] for item in data if len(str(item)) > 50000]\nprint(len(large))\n\")\necho \"\ud83d\udccf Large entries (>50KB): $LARGEENTRIES\"\n\necho\necho \"=== Health Check Complete ===\"\nEOF\n\nchmod +x check-index.sh\n./check-index.sh\n\n\nAutomated Monitoring\n\nbash\nCron job for index monitoring\nAdd to crontab: crontab -e\n0 2    /path/to/wiki/check-index.sh >> /var/log/wiki-index.log 2>&1\n\n\n\ud83d\udd04 Index Maintenance\n\nRegular Maintenance Tasks\n\nbash\nWeekly maintenance script\ncat > maintain-index.sh << 'EOF'\n#!/bin/bash\n\necho \"Starting weekly index maintenance...\"\n\nBackup current index\ncp notes-index.json \"backups/notes-index-$(date +%Y%m%d).json\"\n\nRebuild index\necho \"Rebuilding index...\"\npython3 build.py\n\nValidate new index\nif python3 -m json.tool notes-index.json > /dev/null 2>&1; then\n    echo \"\u2705 Index rebuilt successfully\"\nelse\n    echo \"\u274c Index rebuild failed, restoring backup\"\n    cp \"backups/notes-index-$(date +%Y%m%d).json\" notes-index.json\n    exit 1\nfi\n\nCleanup old backups (keep last 10)\nls -t backups/notes-index-.json | tail -n +11 | xargs rm -f\n\necho \"Maintenance complete\"\nEOF\n\n\nVersion Control Integration\n\nbash\nTrack index changes\ngit log --oneline notes-index.json | head -10\n\nCompare index versions\ngit diff HEAD1 notes-index.json | grep '\"id\":'\n\nRollback index if needed\ngit checkout HEAD1 -- notes-index.json\n\n\n\ud83c\udfaf Best Practices\n\nContent Organization\n- \u2705 Use consistent frontmatter structure\n- \u2705 Keep individual files under 100KB\n- \u2705 Use descriptive filenames and paths\n- \u2705 Maintain consistent tagging scheme\n- \u2705 Include descriptions in frontmatter\n\nBuild Management\n- \u2705 Rebuild index after content changes\n- \u2705 Validate index after building\n- \u2705 Automate builds in CI/CD\n- \u2705 Monitor index size growth\n- \u2705 Backup index before major changes\n\nPerformance\n- \u2705 Optimize large content files\n- \u2705 Use excerpts for long documents\n- \u2705 Implement search result caching\n- \u2705 Consider pagination for large indexes\n- \u2705 Monitor search performance metrics\n\n---\n\nRelated Topics\n\n- \ud83d\udd0d Search Guide\n- \ud83d\ude80 Deployment Options\n- \u2699\ufe0f Settings & Customization\n- \ud83d\udee0\ufe0f Troubleshooting Common Issues (Coming Soon) graph LR\n    A[Markdown Files] --> B[build.py]\n    B --> C[YAML Parser]\n    B --> D[Content Extractor]\n    C --> E[notes-index.json]\n    D --> E\n    E --> F[Search Engine] # Standard build\npython3 build.py\n\n# Expected output:\n# Scanning notes directory...\n# Processing: notes/tutorials/features/search-guide.md\n# ...\n# \u2705 Build complete!\n# \ud83d\udcca Stats:\n#    - Total notes: 24\n#    - Total tags: 15\n#    - Total authors: 2\n#    - Index size: 847.2 KB {\n  \"id\": \"tutorials/features/search-guide\",\n  \"title\": \"Advanced Search Guide\",\n  \"content\": \"Learn to master the powerful search features...\",\n  \"tags\": [\"search\", \"features\", \"tutorial\"],\n  \"author\": \"Wiki Team\",\n  \"created\": \"2024-01-15\",\n  \"updated\": \"2024-01-20\",\n  \"description\": \"Complete guide to search operators\",\n  \"codeBlocks\": [\n    {\n      \"language\": \"bash\",\n      \"content\": \"tag:tutorial author:john\",\n      \"title\": \"Search Example\"\n    }\n  ],\n  \"path\": \"notes/tutorials/features/search-guide.md\",\n  \"wordCount\": 1247,\n  \"readingTime\": 5\n} # Custom build with additional processing\nimport json\nimport os\nfrom pathlib import Path\n\ndef custom_build():\n    # Add custom logic here\n    notes_dir = Path(\"notes\")\n    index = []\n    \n    for md_file in notes_dir.rglob(\"*.md\"):\n        # Custom processing logic\n        entry = process_file(md_file)\n        index.append(entry)\n    \n    # Save with custom formatting\n    with open(\"notes-index.json\", \"w\") as f:\n        json.dump(index, f, indent=2, ensure_ascii=False) #!/bin/sh\n# .git/hooks/pre-commit\necho \"Rebuilding search index...\"\npython3 build.py\ngit add notes-index.json # .github/workflows/build-index.yml\nname: Build Search Index\non:\n  push:\n    paths: ['notes/**/*.md']\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v2\n      - name: Build index\n        run: python3 build.py\n      - name: Commit updated index\n        run: |\n          git config --local user.email \"action@github.com\"\n          git config --local user.name \"GitHub Action\"\n          git add notes-index.json\n          git commit -m \"Update search index\" || exit 0\n          git push # .gitlab-ci.yml addition\nbuild_index:\n  stage: build\n  script:\n    - python3 build.py\n  artifacts:\n    paths:\n      - notes-index.json\n  only:\n    changes:\n      - notes/**/*.md # Error: yaml.scanner.ScannerError\n# Cause: Invalid YAML frontmatter\n\n# Solution: Check frontmatter syntax\nhead -10 problematic-file.md\n\n# Fix common issues:\n# - Use spaces, not tabs for indentation\n# - Quote strings with special characters\n# - Check for unmatched brackets/quotes # Check if index file exists\nls -la notes-index.json\n\n# Check file size (should be > 1KB)\ndu -h notes-index.json\n\n# Validate JSON structure\npython3 -m json.tool notes-index.json > /dev/null # Check file permissions\nfind notes/ -name \"*.md\" ! -perm -644\n\n# Check for hidden files\nfind notes/ -name \".*\" -type f\n\n# Verify file encoding\nfile notes/your-file.md # Check index size\nls -lh notes-index.json\n\n# If index is > 10MB, consider optimization:\n# - Remove large code blocks from index\n# - Split large notes into smaller files\n# - Use excerpt fields instead of full content # Count indexed notes\ngrep -o '\"id\":' notes-index.json | wc -l\n\n# Check for duplicate IDs\ngrep '\"id\":' notes-index.json | sort | uniq -d\n\n# Find largest entries\npython3 -c \"\nimport json\nwith open('notes-index.json') as f:\n    data = json.load(f)\nentries = [(len(str(item)), item['id']) for item in data]\nfor size, id in sorted(entries, reverse=True)[:5]:\n    print(f'{size:6d} bytes: {id}')\n\"\n\n# Validate all frontmatter\nfind notes/ -name \"*.md\" -exec python3 -c \"\nimport yaml\nimport sys\ntry:\n    with open(sys.argv[1]) as f:\n        content = f.read()\n    if content.startswith('---'):\n        frontmatter = content.split('---')[1]\n        yaml.safe_load(frontmatter)\n    print(f'\u2705 {sys.argv[1]}')\nexcept Exception as e:\n    print(f'\u274c {sys.argv[1]}: {e}')\n\" {} \\; # Optimize build.py for large wikis\ndef optimize_content(content):\n    # Limit content length for search\n    if len(content) > 10000:  # 10KB limit\n        content = content[:9900] + \"...\"\n    return content\n\ndef extract_excerpt(content, length=500):\n    # Create search-optimized excerpt\n    lines = content.split('\\n')\n    excerpt = []\n    char_count = 0\n    \n    for line in lines:\n        if char_count + len(line) > length:\n            break\n        excerpt.append(line)\n        char_count += len(line)\n    \n    return '\\n'.join(excerpt) // Client-side search optimization\nclass SearchOptimizer {\n    constructor() {\n        this.searchCache = new Map();\n        this.indexedDB = null; // For large indexes\n    }\n    \n    // Cache frequent searches\n    cacheSearch(query, results) {\n        this.searchCache.set(query, results);\n        if (this.searchCache.size > 100) {\n            const firstKey = this.searchCache.keys().next().value;\n            this.searchCache.delete(firstKey);\n        }\n    }\n    \n    // Progressive search loading\n    async loadIndexProgressive() {\n        const response = await fetch('notes-index.json');\n        const reader = response.body.getReader();\n        // Process chunks as they arrive\n    }\n} # Create index health check script\ncat > check-index.sh << 'EOF'\n#!/bin/bash\n\necho \"=== Search Index Health Check ===\"\necho\n\n# File info\nINDEX_FILE=\"notes-index.json\"\nif [ -f \"$INDEX_FILE\" ]; then\n    echo \"\u2705 Index file exists\"\n    echo \"\ud83d\udcca Size: $(du -h $INDEX_FILE | cut -f1)\"\n    echo \"\ud83d\udcc5 Modified: $(date -r $INDEX_FILE)\"\nelse\n    echo \"\u274c Index file missing\"\n    exit 1\nfi\n\n# JSON validation\nif python3 -m json.tool $INDEX_FILE > /dev/null 2>&1; then\n    echo \"\u2705 Valid JSON structure\"\nelse\n    echo \"\u274c Invalid JSON structure\"\n    exit 1\nfi\n\n# Entry count\nENTRY_COUNT=$(grep -o '\"id\":' $INDEX_FILE | wc -l)\necho \"\ud83d\udcdd Entries: $ENTRY_COUNT\"\n\n# File count comparison\nMD_COUNT=$(find notes/ -name \"*.md\" | wc -l)\necho \"\ud83d\udcc1 Markdown files: $MD_COUNT\"\n\nif [ $ENTRY_COUNT -eq $MD_COUNT ]; then\n    echo \"\u2705 All files indexed\"\nelse\n    echo \"\u26a0\ufe0f  Index/file count mismatch\"\nfi\n\n# Size analysis\nLARGE_ENTRIES=$(python3 -c \"\nimport json\nwith open('$INDEX_FILE') as f:\n    data = json.load(f)\nlarge = [item['id'] for item in data if len(str(item)) > 50000]\nprint(len(large))\n\")\necho \"\ud83d\udccf Large entries (>50KB): $LARGE_ENTRIES\"\n\necho\necho \"=== Health Check Complete ===\"\nEOF\n\nchmod +x check-index.sh\n./check-index.sh # Cron job for index monitoring\n# Add to crontab: crontab -e\n# 0 2 * * * /path/to/wiki/check-index.sh >> /var/log/wiki-index.log 2>&1 # Weekly maintenance script\ncat > maintain-index.sh << 'EOF'\n#!/bin/bash\n\necho \"Starting weekly index maintenance...\"\n\n# Backup current index\ncp notes-index.json \"backups/notes-index-$(date +%Y%m%d).json\"\n\n# Rebuild index\necho \"Rebuilding index...\"\npython3 build.py\n\n# Validate new index\nif python3 -m json.tool notes-index.json > /dev/null 2>&1; then\n    echo \"\u2705 Index rebuilt successfully\"\nelse\n    echo \"\u274c Index rebuild failed, restoring backup\"\n    cp \"backups/notes-index-$(date +%Y%m%d).json\" notes-index.json\n    exit 1\nfi\n\n# Cleanup old backups (keep last 10)\nls -t backups/notes-index-*.json | tail -n +11 | xargs rm -f\n\necho \"Maintenance complete\"\nEOF # Track index changes\ngit log --oneline notes-index.json | head -10\n\n# Compare index versions\ngit diff HEAD~1 notes-index.json | grep '\"id\":'\n\n# Rollback index if needed\ngit checkout HEAD~1 -- notes-index.json",
      "code_blocks_count": 18
    }
  ],
  "tags": {
    "home": 1,
    "index": 1,
    "documentation": 2,
    "tutorial": 5,
    "getting-started": 2,
    "markdown": 2,
    "frontmatter": 1,
    "demo": 4,
    "search": 3,
    "operators": 1,
    "filtering": 2,
    "guide": 1,
    "images": 1,
    "themes": 2,
    "showcase": 1,
    "styling": 2,
    "code": 2,
    "syntax-highlighting": 1,
    "bookmarks": 1,
    "organization": 2,
    "navigation": 4,
    "interface": 1,
    "productivity": 3,
    "tabs": 2,
    "shortcuts": 1,
    "tags": 1,
    "customization": 1,
    "advanced": 3,
    "css": 1,
    "automation": 1,
    "build": 1,
    "troubleshooting": 1
  },
  "authors": [
    "Wiki Team",
    "Wiki Admin",
    "NotesWiki Team"
  ],
  "categories": [],
  "contexts": [
    {
      "id": "tutorials",
      "name": "Tutorials",
      "noteCount": 14
    }
  ],
  "generated": "2025-06-24T13:23:15.092247",
  "totalNotes": 15
}