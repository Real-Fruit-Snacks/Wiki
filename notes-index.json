{
  "notes": [
    {
      "path": "/notes/tutorials/features/note-context-menus.md",
      "context": "tutorials",
      "metadata": {
        "title": "Note Context Menus",
        "tags": [
          "productivity",
          "navigation",
          "quick-actions"
        ],
        "created": "2025-06-22",
        "author": "Wiki Admin",
        "description": "Right-click any note for quick actions and enhanced productivity",
        "updated": null,
        "category": null,
        "status": null,
        "aliases": [],
        "related": [],
        "dependencies": [],
        "keywords": [],
        "tableOfContents": "auto",
        "hideFromSearch": false
      },
      "content_preview": "Context menus provide instant access to common note actions through a simple right-click. Available throughout the wiki interface, these menus streamline your workflow with quick access to essential f...",
      "searchable_content": "\nNote Context Menus\n\nContext menus provide instant access to common note actions through a simple right-click. Available throughout the wiki interface, these menus streamline your workflow with quick access to essential features.\n\n\ud83d\uddb1\ufe0f How to Access\n\nUniversal Access\nRight-click on any note link throughout the interface:\n- Search results - Right-click any search result\n- Sidebar navigation - Right-click any note in the file tree\n- Recent files list - Right-click any recent file\n- Bookmark list - Right-click any bookmarked note\n- Wiki links - Right-click any [[wiki link]] in content\n\nVisual Feedback\n- Hover effect - Note links highlight when hovered\n- Context cursor - Cursor changes to indicate context menu availability\n- Menu appearance - Clean, themed menu appears at cursor position\n\n\ud83d\udccb Available Actions\n\n\ud83c\udd95 Open in New Tab\n- Action: Opens the note in a new tab\n- Shortcut: Also available via Ctrl+Click\n- Use case: Keep current note open while exploring references\n- Tab behavior: New tab becomes active immediately\n\n\ud83d\udd16 Bookmark Note\n- Action: Adds the note to your bookmarks list\n- Toggle behavior: If already bookmarked, removes from bookmarks\n- Access bookmarks: Header bookmarks icon or sidebar\n- Persistence: Bookmarks saved in browser localStorage\n\n\ud83d\udce4 Share Note\n- Action: Copies the note URL to clipboard\n- Format: Full URL including anchor links if applicable\n- Feedback: Toast notification confirms copy action\n- Use case: Share specific notes with team members or save for later\n\n\ud83c\udfaf Context-Aware Behavior\n\nSmart Menu Options\nThe context menu adapts based on note status:\n\nFor Unbookmarked Notes:\n\n\ud83d\udcc4 Open in New Tab\n\ud83d\udd16 Bookmark Note  \n\ud83d\udce4 Share Note\n\n\nFor Already Bookmarked Notes:\n\n\ud83d\udcc4 Open in New Tab\n\ud83d\udd16 Remove Bookmark\n\ud83d\udce4 Share Note\n\n\nCurrent Note Handling\n- Same note: If right-clicking the currently open note, \"Open in New Tab\" still creates a duplicate tab\n- Split view: Works independently in both panes\n- Tab context: Actions respect current tab/pane focus\n\n\ud83d\udca1 Workflow Examples\n\nResearch Workflow\n1. Search for topic using Ctrl+K\n2. Right-click interesting results \u2192 \"Open in New Tab\"\n3. Right-click key references \u2192 \"Bookmark Note\"\n4. Right-click important findings \u2192 \"Share Note\" to copy URLs\n\nReference Building\n1. Browse sidebar for related content\n2. Right-click useful notes \u2192 \"Bookmark Note\"\n3. Access bookmarks to build reading list\n4. Right-click bookmarks \u2192 \"Open in New Tab\" for detailed review\n\nTeam Collaboration\n1. Find relevant documentation\n2. Right-click notes \u2192 \"Share Note\"\n3. Paste URLs in team chat/email\n4. Team members can directly access shared content\n\n\ud83c\udfa8 Visual Design\n\nMenu Appearance\n- Theme integration - Menu matches current theme colors\n- Clean layout - Minimal, focused design\n- Clear icons - Distinctive icons for each action\n- Typography - Consistent with application fonts\n\nAnimation & Feedback\n- Smooth appearance - Menu fades in smoothly\n- Hover states - Menu items highlight on hover\n- Click feedback - Visual confirmation of actions\n- Auto-dismiss - Menu closes on outside click or action\n\n\ud83d\udcf1 Mobile Experience\n\nTouch Support\n- Long press - Equivalent to right-click on touch devices\n- Touch targets - Optimized button sizes for fingers\n- Menu positioning - Adjusts to stay within screen bounds\n\nResponsive Behavior\n- Smaller screens - Menu items may show icons only\n- Portrait/landscape - Menu adapts to orientation changes\n- Safe areas - Respects device safe areas and notches\n\n\u2699\ufe0f Settings & Customization\n\nMenu Behavior\nConfigure in Settings \u2192 Advanced:\n- Menu animation speed - Fast/normal/slow\n- Auto-dismiss timeout - How long menu stays open\n- Default actions - Customize most common actions\n\nAccessibility\n- Keyboard navigation - Arrow keys to navigate menu items\n- Screen reader support - Proper ARIA labels and roles\n- High contrast - Respects system accessibility settings\n\n\ud83d\udd27 Technical Details\n\nPerformance\n- Lazy loading - Menus created only when needed\n- Memory efficient - Cleaned up automatically after use\n- Event delegation - Minimal event listener overhead\n\nBrowser Compatibility\n- Modern browsers - Full functionality in Chrome, Firefox, Safari, Edge\n- Progressive enhancement - Graceful degradation in older browsers\n- Touch devices - Full support via long-press gestures\n\n\ud83d\udcad Tips & Best Practices\n\nEfficiency Tips\n1. Learn the shortcuts - Right-click becomes second nature\n2. Bookmark strategically - Use for reference materials you'll revisit\n3. Share frequently - Build habit of sharing useful findings\n4. Combine with keyboard - Right-click + keyboard navigation\n\nWorkflow Integration\n- Use with search - Right-click search results for quick actions\n- Combine with tabs - Open multiple notes, bookmark the best ones\n- Team sharing - Build shared knowledge base through URL sharing\n\nOrganization\n- Bookmark categorically - Use consistent bookmarking strategy\n- Clean up regularly - Remove outdated bookmarks\n- Share meaningfully - Include context when sharing note URLs\n\n---\n\nQuick Reference\n\nRight-click any note for:\n- \ud83d\udcc4 Open in New Tab - Keep current note open\n- \ud83d\udd16 Bookmark Note - Save for later access  \n- \ud83d\udce4 Share Note - Copy URL to clipboard\n\nAvailable everywhere:\n- Search results\n- Sidebar navigation  \n- Recent files\n- Bookmarks\n- Wiki links in content\n\nContext menus make note management effortless - right-click anywhere to boost your productivity! \ud83d\udcc4 Open in New Tab\n\ud83d\udd16 Bookmark Note  \n\ud83d\udce4 Share Note \ud83d\udcc4 Open in New Tab\n\ud83d\udd16 Remove Bookmark\n\ud83d\udce4 Share Note",
      "code_blocks_count": 2
    },
    {
      "path": "/notes/tutorials/features/mobile-interface.md",
      "context": "tutorials",
      "metadata": {
        "title": "Mobile Interface Guide",
        "tags": [
          "mobile",
          "responsive",
          "interface",
          "navigation"
        ],
        "created": "2025-06-22",
        "author": "Wiki Admin",
        "description": "Optimized mobile experience with responsive navigation and touch-friendly features",
        "updated": null,
        "category": null,
        "status": null,
        "aliases": [],
        "related": [],
        "dependencies": [],
        "keywords": [],
        "tableOfContents": "auto",
        "hideFromSearch": false
      },
      "content_preview": "The Notes Wiki provides a fully responsive mobile experience with touch-optimized navigation and adaptive interface elements. Whether on phone or tablet, you get the full wiki functionality in a mobil...",
      "searchable_content": "\nMobile Interface Guide\n\nThe Notes Wiki provides a fully responsive mobile experience with touch-optimized navigation and adaptive interface elements. Whether on phone or tablet, you get the full wiki functionality in a mobile-friendly format.\n\n\ud83d\udcf1 Mobile Navigation Menu\n\nResponsive Header Design\nOn mobile devices (screens under 768px), the header automatically transforms:\n\nDesktop View:\n- Individual buttons visible in header\n- Full icons and text labels\n- Horizontal layout with spacing\n\nMobile View:\n- Compact hamburger menu (\u2261)\n- Dropdown menu with labeled actions\n- Vertical layout optimized for touch\n\nAccessing the Mobile Menu\n- Hamburger Icon: Tap the \u2261 button in the top-right corner\n- Auto-detection: Automatically appears on narrow screens\n- Responsive: Switches back to desktop view when screen widens\n\n\ud83c\udfaf Mobile Menu Features\n\nEnhanced Menu Items\nEach menu item includes both icon and descriptive text:\n\n- \ud83d\udd0d Search - Open global search\n- \u2699\ufe0f Settings - Access all settings\n- \ud83d\udd16 Bookmarks - View saved notes  \n- \ud83d\udcc2 Recent Files - Access recently viewed notes\n- \ud83d\udcdd New Tab - Create empty tab\n- \ud83e\udde9 Sticky Note - Create floating note\n- \ud83d\udcd1 Split View - Toggle side-by-side view\n- \ud83c\udfa8 Focus Mode - Distraction-free reading\n\nVisual Improvements\n- Clear labels - Text descriptions for every action\n- Consistent icons - Familiar symbols from desktop interface\n- Touch targets - Optimized button sizes (44px minimum)\n- Visual feedback - Tap states and hover effects\n\n\ud83d\udcca Responsive Badge Counts\n\nSmart Badge Display\nMenu items show relevant counts when available:\n\n- \ud83d\udd16 Bookmarks (5) - Number of bookmarked notes\n- \ud83d\udcc2 Recent Files (12) - Count of recent files\n- \ud83d\udcd1 Tabs (3) - Number of open tabs\n\nBadge Synchronization\n- Real-time updates - Counts update as you use the app\n- Cross-sync - Desktop and mobile badges stay synchronized\n- Storage-based - Counts persist between sessions\n\n\ud83c\udfa8 Responsive Design Features\n\nAdaptive Context Filtering\nThe context switcher becomes mobile-friendly:\n\nDesktop (6+ contexts):\n- Horizontal button bar\n- All contexts visible simultaneously\n\nMobile (6+ contexts):\n- Dropdown selector\n- Compact, scrollable interface\n- Touch-optimized selection\n\nContent Optimization\n- Readable fonts - Automatically scaled for mobile\n- Touch scrolling - Smooth scrolling for content\n- Zoom support - Pinch-to-zoom where appropriate\n- Orientation - Works in both portrait and landscape\n\n\ud83d\uddb1\ufe0f Touch Interactions\n\nEnhanced Touch Support\n\nTap Gestures:\n- Single tap - Primary action (open note, select menu item)\n- Long press - Context menu (equivalent to right-click)\n- Double tap - Zoom or secondary action where applicable\n\nDrag Gestures:\n- Drag tabs - Reorder tabs with touch drag\n- Drag sticky notes - Move floating notes around screen\n- Drag split view - Resize panes in split view\n\nScroll Behaviors:\n- Momentum scrolling - Natural scroll momentum\n- Bounce effects - iOS-style scroll boundaries\n- Overscroll - Visual feedback at content boundaries\n\n\ud83d\udcd0 Layout Adaptations\n\nTab Management on Mobile\n- Horizontal scrolling - Scroll through many tabs\n- Compact tab display - Optimized tab sizes for mobile\n- Touch-friendly controls - Larger close buttons and drag handles\n\nSidebar Behavior\n- Auto-collapse - Sidebar collapses on narrow screens\n- Overlay mode - Sidebar slides over content when opened\n- Swipe gestures - Swipe to open/close sidebar (future feature)\n\nContent Width\n- Automatic adjustment - Content width adapts to screen size\n- Reading optimization - Optimal line lengths for mobile reading\n- Image scaling - Images scale appropriately for small screens\n\n\ud83c\udfaf Mobile-Specific Features\n\nThumb-Zone Optimization\n- Menu placement - Important actions within thumb reach\n- Button sizing - Minimum 44px touch targets\n- Spacing - Adequate spacing between interactive elements\n\nPerformance Optimizations\n- Touch delay reduction - Minimal tap delay for responsive feel\n- Smooth animations - 60fps animations where possible\n- Memory management - Efficient memory usage on mobile devices\n\nBattery Considerations\n- Reduced animations - Respects device battery saver modes\n- Efficient rendering - Optimized for mobile GPU performance\n- Background optimization - Minimal background processing\n\n\u2699\ufe0f Mobile Settings\n\nMobile-Specific Preferences\nAccess via Settings \u2192 Mobile:\n\n- Touch sensitivity - Adjust touch response\n- Menu timeout - Auto-close timeout for dropdowns\n- Animation preferences - Enable/disable mobile animations\n- Text scaling - Additional font scaling options\n\nAccessibility on Mobile\n- VoiceOver/TalkBack - Screen reader support\n- Dynamic text - Respects system font size settings\n- Contrast - High contrast mode support\n- Motion reduction - Respects reduced motion preferences\n\n\ud83d\udd27 Troubleshooting Mobile Issues\n\nCommon Issues & Solutions\n\nMenu Not Appearing:\n- Check screen width (must be < 768px)\n- Try rotating device to force layout recalculation\n- Refresh page if layout seems stuck\n\nTouch Not Working:\n- Ensure JavaScript is enabled\n- Check for browser compatibility\n- Try clearing browser cache\n\nPerformance Issues:\n- Close unused tabs to free memory\n- Disable complex themes on older devices\n- Clear browser cache and localStorage\n\nBrowser-Specific Notes\n- Safari iOS - Full support including PWA features\n- Chrome Android - Excellent performance and features\n- Firefox Mobile - Good compatibility with minor limitations\n- Edge Mobile - Full feature support\n\n\ud83d\udca1 Mobile Productivity Tips\n\nEfficient Mobile Workflows\n\nQuick Search:\n1. Tap hamburger menu\n2. Tap \"\ud83d\udd0d Search\"\n3. Use voice input where available\n4. Tap results to open\n\nBookmark Management:\n1. Use context menus (long press) to bookmark\n2. Access bookmarks via mobile menu\n3. Organize by priority/frequency\n\nMulti-Note Work:\n1. Use split view for reference work\n2. Open important notes in tabs\n3. Pin frequently used tabs\n4. Use sticky notes for quick thoughts\n\nTouch Shortcuts\n- Long press any note for context menu\n- Swipe in content areas for smooth scrolling\n- Double tap headers to auto-scroll to top\n- Pinch zoom for detailed content examination\n\n---\n\nMobile Excellence\n\nThe mobile interface ensures you never compromise on functionality when using your wiki on the go. Every feature from the desktop version is thoughtfully adapted for touch interaction and mobile workflows.\n\nKey Benefits:\n- \ud83d\udcf1 Full functionality - No features lost on mobile\n- \ud83c\udfaf Touch-optimized - Every interaction designed for fingers\n- \u26a1 Performance - Smooth, responsive experience\n- \ud83d\udd04 Sync - Seamless transition between desktop and mobile\n\nThe mobile experience makes your knowledge base truly portable and accessible anywhere!",
      "code_blocks_count": 0
    },
    {
      "path": "/notes/tutorials/features/confirmation-dialogs.md",
      "context": "tutorials",
      "metadata": {
        "title": "Confirmation Dialogs",
        "tags": [
          "safety",
          "interface",
          "settings",
          "productivity"
        ],
        "created": "2025-06-22",
        "author": "Wiki Admin",
        "description": "Smart confirmation dialogs prevent accidental data loss and improve user experience",
        "updated": null,
        "category": null,
        "status": null,
        "aliases": [],
        "related": [],
        "dependencies": [],
        "keywords": [],
        "tableOfContents": "auto",
        "hideFromSearch": false
      },
      "content_preview": "Confirmation dialogs provide a safety net against accidental actions that could result in lost work. These intelligent prompts help prevent mishaps while staying out of your way during normal workflow...",
      "searchable_content": "\nConfirmation Dialogs\n\nConfirmation dialogs provide a safety net against accidental actions that could result in lost work. These intelligent prompts help prevent mishaps while staying out of your way during normal workflows.\n\n\ud83d\udee1\ufe0f What Gets Protected\n\nTab Closure Protection\nClose Single Tab:\n- Triggers: Clicking tab \u00d7 button, Ctrl+W, or middle-click\n- Condition: Only when confirmation dialogs are enabled\n- Exception: Empty tabs close immediately without confirmation\n\nClose All Tabs:\n- Triggers: Ctrl+Shift+W or \"Close All\" button\n- Smart behavior: Adapts message based on pinned tabs\n- Protection: Warns before closing multiple tabs simultaneously\n\nSticky Notes Protection\nSticky Note Deletion:\n- Triggers: Clicking \u00d7 button on sticky note\n- Condition: Only when confirmation dialogs are enabled\n- Warning: Alerts that content will be permanently lost\n\n\u2699\ufe0f Settings Control\n\nEnabling/Disabling Confirmations\nAccess via Settings \u2192 General \u2192 Confirmation Dialogs:\n\n- Default state: Enabled (recommended)\n- User choice: Can be disabled for faster workflows\n- Immediate effect: Changes apply instantly\n- Persistence: Setting saved in browser localStorage\n\nSmart Default Behavior\nThe system ships with confirmations enabled by default because:\n- New users often accidentally close tabs\n- Data protection prevents frustration from lost work\n- Easy to disable for power users who prefer speed\n- Mobile safety especially important on touch devices\n\n\ud83c\udfaf Smart Dialog Behavior\n\nContext-Aware Messages\n\nStandard Tab Close:\n\n\u26a0\ufe0f Close Tab?\nAre you sure you want to close this tab?\n[Cancel] [Close Tab]\n\n\nClose All - No Pinned Tabs:\n\n\u26a0\ufe0f Close All Tabs?\nThis will close all 5 open tabs.\n[Cancel] [Close All]\n\n\nClose All - Some Pinned Tabs:\n\n\u26a0\ufe0f Close Non-Pinned Tabs?\nThis will close 3 tabs. 2 pinned tabs will remain open.\n[Cancel] [Close Non-Pinned]\n\n\nAll Tabs Are Pinned:\n\n\u26a0\ufe0f Cannot Close Tabs\nAll tabs are pinned. Unpin them first to close.\n[Understood]\n\n\nSticky Note Deletion:\n\n\u26a0\ufe0f Delete Sticky Note?\nThis sticky note and its content will be permanently deleted.\n[Cancel] [Delete]\n\n\n\ud83c\udfa8 Visual Design\n\nDialog Appearance\n- Theme integration - Matches current theme colors\n- Blur backdrop - Focuses attention on dialog\n- Clear hierarchy - Title, message, and actions clearly separated\n- Accessible colors - High contrast for readability\n\nButton Design\n- Primary action - Destructive action (red/warning color)\n- Secondary action - Safe action (cancel button)\n- Clear labels - Descriptive button text\n- Keyboard accessible - Tab navigation supported\n\n\u2328\ufe0f Keyboard Interactions\n\nDialog Navigation\n- Tab key - Navigate between buttons\n- Enter - Activates focused button\n- Escape - Cancels dialog (same as Cancel button)\n- Arrow keys - Alternative navigation\n\nQuick Actions\n- Enter - Usually triggers the safe/cancel action\n- Alt+key - Access accelerator keys where available\n- Space - Activates focused button\n\n\ud83d\udcf1 Mobile Considerations\n\nTouch-Friendly Design\n- Large buttons - Minimum 44px touch targets\n- Adequate spacing - Prevents accidental taps\n- Thumb zones - Important actions within easy reach\n\nMobile-Specific Behaviors\n- Auto-position - Dialogs center within viewport\n- Scroll protection - Prevents background scrolling\n- Safe area - Respects device notches and safe zones\n\n\ud83d\udd27 Developer Technical Details\n\nEvent Handling\n- Event prevention - Blocks original action until confirmation\n- Async handling - Uses promises for clean code structure\n- Memory management - Dialogs cleaned up after use\n\nAccessibility Features\n- ARIA labels - Proper screen reader support\n- Focus management - Logical focus flow\n- High contrast - Respects accessibility preferences\n- Screen reader - Announces dialog content\n\n\ud83d\udca1 Best Practices\n\nWhen to Use Confirmations\nEnable confirmations if you:\n- Are new to the wiki system\n- Work on mobile devices frequently  \n- Often have many tabs open\n- Share devices with others\n- Work in distracting environments\n\nConsider disabling if you:\n- Are an experienced power user\n- Prefer maximum speed over safety\n- Rarely make accidental clicks\n- Use keyboard shortcuts primarily\n\nWorkflow Integration\n- Learn shortcuts - Keyboard users can navigate dialogs quickly\n- Understand contexts - Different scenarios show different messages\n- Use pinned tabs - Pin important tabs to get smarter close-all behavior\n\nTeam Recommendations\n- Default enabled - Keep confirmations on for shared devices\n- User training - Teach team members about pinned tabs\n- Consistent settings - Consider organization-wide standards\n\n\ud83c\udfaf Smart Features\n\nIntelligent Detection\nThe system intelligently detects when confirmations are most helpful:\n\n- Multiple tabs - More likely to show confirmation\n- Pinned tab logic - Adapts messaging for pinned tabs\n- Content awareness - Empty tabs skip confirmations\n- Mobile detection - More cautious on touch devices\n\nPerformance Optimizations\n- Lazy loading - Dialog components loaded only when needed\n- Minimal DOM - Efficient dialog creation and cleanup\n- Event delegation - Optimized event handling\n\n\ud83d\udd04 Future Enhancements\n\nPlanned Features\n- Undo support - \"Undo close tab\" functionality\n- Smart timing - Learn user patterns to adjust confirmation timing\n- Gesture support - Swipe gestures for confirm/cancel\n- Bulk operations - More granular control for multiple actions\n\n---\n\nSafety First\n\nConfirmation dialogs strike the perfect balance between safety and speed. They protect against common accidents while learning your workflow patterns to stay out of your way.\n\nKey Benefits:\n- \ud83d\udee1\ufe0f Accident prevention - Stops costly mistakes\n- \ud83e\udde0 Smart adaptation - Context-aware messaging  \n- \u26a1 Performance - Minimal impact on workflow speed\n- \ud83c\udfaf User choice - Complete control over when they appear\n\nEnable confirmations for peace of mind, or disable them for maximum speed - the choice is yours! \u26a0\ufe0f Close Tab?\nAre you sure you want to close this tab?\n[Cancel] [Close Tab] \u26a0\ufe0f Close All Tabs?\nThis will close all 5 open tabs.\n[Cancel] [Close All] \u26a0\ufe0f Close Non-Pinned Tabs?\nThis will close 3 tabs. 2 pinned tabs will remain open.\n[Cancel] [Close Non-Pinned] \u26a0\ufe0f Cannot Close Tabs\nAll tabs are pinned. Unpin them first to close.\n[Understood] \u26a0\ufe0f Delete Sticky Note?\nThis sticky note and its content will be permanently deleted.\n[Cancel] [Delete]",
      "code_blocks_count": 5
    },
    {
      "path": "/notes/tutorials/features/yaml-enhancement-test.md",
      "context": "tutorials",
      "metadata": {
        "title": "YAML Enhancement Test Note",
        "tags": [
          "testing",
          "yaml",
          "features"
        ],
        "created": "2025-06-22",
        "author": "Test Author",
        "description": "A test note demonstrating the new YAML frontmatter features",
        "updated": "2025-06-22",
        "category": "tutorial",
        "status": "draft",
        "aliases": [
          "yaml-test",
          "frontmatter-test",
          "enhanced-metadata"
        ],
        "related": [
          "/notes/tutorials/features/markdown-callouts.md",
          "/notes/tutorials/features/themes.md"
        ],
        "dependencies": [
          "/notes/tutorials/getting-started/creating-notes.md"
        ],
        "keywords": [
          "yaml",
          "frontmatter",
          "metadata",
          "testing",
          "enhancement"
        ],
        "tableOfContents": "auto",
        "hideFromSearch": false
      },
      "content_preview": "This note demonstrates all the new YAML frontmatter features that have been implemented:\n\n\n\n- Status: This note is marked as draft - you can use: draft, published, archived, deprecated, under-review\n-...",
      "searchable_content": "\nYAML Enhancement Test Note\n\nThis note demonstrates all the new YAML frontmatter features that have been implemented:\n\nContent Organization & Discovery\n\n- Status: This note is marked as draft - you can use: draft, published, archived, deprecated, under-review\n- Category: This note is categorized as tutorial - you can use: tutorial, reference, guide, troubleshooting, meeting-notes\n\nEnhanced Search & Relationships\n\n- Aliases: This note has alternative names for better search discovery\n- Keywords: Additional search terms beyond tags for enhanced findability\n- Related Notes: Cross-references to related content (see bottom of page)\n- Dependencies: Prerequisites that should be read first (see bottom of page)\n\nDisplay & Behavior\n\n- Table of Contents: Set to auto - generates TOC automatically if 2+ headings exist\n- Hide from Search: Set to false - note appears in search results\n\nTesting Search Operators\n\nYou can now search using these new operators:\n\nStatus Search\n- status:draft - Find all draft notes\n- status:published - Find published notes\n- status:archived - Find archived notes\n\nCategory Search\n- category:tutorial - Find all tutorial notes\n- category:reference - Find reference documentation\n- category:troubleshooting - Find troubleshooting guides\n\nEnhanced Text Search\nThe aliases and keywords are automatically included in search content, so searching for:\n- \"frontmatter-test\" will find this note (via aliases)\n- \"enhancement\" will find this note (via keywords)\n\nSample Content for TOC\n\nFeature Overview\nThe enhanced YAML features provide better organization and discovery.\n\nImplementation Details\nAll features are backward compatible with existing notes.\n\nUsage Examples\nSee the frontmatter of this note for examples of each field.\n\nConclusion\n\nThis note demonstrates the complete implementation of enhanced YAML frontmatter features for better content organization, search, and navigation. yaml-test frontmatter-test enhanced-metadata yaml frontmatter metadata testing enhancement",
      "code_blocks_count": 0
    },
    {
      "path": "/notes/tutorials/features/hidden-test-note.md",
      "context": "tutorials",
      "metadata": {
        "title": "Hidden Test Note",
        "tags": [
          "hidden",
          "private",
          "testing"
        ],
        "created": "2025-06-22",
        "author": "Test Author",
        "description": "This note should be hidden from search results",
        "updated": null,
        "category": "testing",
        "status": "private",
        "aliases": [],
        "related": [],
        "dependencies": [],
        "keywords": [],
        "tableOfContents": "auto",
        "hideFromSearch": true
      },
      "content_preview": "This note is marked with hideFromSearch: true and should NOT appear in search results.\n\nYou can find this note by direct navigation, but it won't show up when searching for:\n- \"hidden\"\n- \"private\" \n- ...",
      "searchable_content": "\nHidden Test Note\n\nThis note is marked with hideFromSearch: true and should NOT appear in search results.\n\nYou can find this note by direct navigation, but it won't show up when searching for:\n- \"hidden\"\n- \"private\" \n- \"testing\"\n- The content text itself\n\nThis is useful for:\n- Private notes\n- Work-in-progress content\n- Internal documentation\n- Sensitive information",
      "code_blocks_count": 0
    },
    {
      "path": "/notes/reference/feature-compatibility.md",
      "context": "reference",
      "metadata": {
        "title": "Feature Compatibility Matrix",
        "tags": [
          "reference",
          "compatibility",
          "features",
          "platforms"
        ],
        "created": "2025-06-22",
        "author": "Wiki Admin",
        "description": "Comprehensive compatibility matrix for all wiki features across different platforms and browsers",
        "updated": null,
        "category": null,
        "status": null,
        "aliases": [],
        "related": [],
        "dependencies": [],
        "keywords": [],
        "tableOfContents": "auto",
        "hideFromSearch": false
      },
      "content_preview": "This reference guide shows which features work where, helping you understand compatibility across different platforms, browsers, and deployment methods.\n\n\n\n| Feature | Chrome 66+ | Firefox 63+ | Safar...",
      "searchable_content": "\nFeature Compatibility Matrix\n\nThis reference guide shows which features work where, helping you understand compatibility across different platforms, browsers, and deployment methods.\n\n\ud83c\udf10 Browser Compatibility\n\n| Feature | Chrome 66+ | Firefox 63+ | Safari 13.1+ | Edge 79+ | Mobile Browsers |\n|---------|------------|-------------|---------------|----------|-----------------|\n| Core Navigation | \u2705 Full | \u2705 Full | \u2705 Full | \u2705 Full | \u2705 Full |\n| Search & Filtering | \u2705 Full | \u2705 Full | \u2705 Full | \u2705 Full | \u2705 Full |\n| Tab Management | \u2705 Full | \u2705 Full | \u2705 Full | \u2705 Full | \u2705 Limited\u00b9 |\n| Drag & Drop | \u2705 Full | \u2705 Full | \u2705 Full | \u2705 Full | \u274c No |\n| Keyboard Shortcuts | \u2705 Full | \u2705 Full | \u26a0\ufe0f Limited\u00b2 | \u2705 Full | \u274c No |\n| Themes | \u2705 Full | \u2705 Full | \u2705 Full | \u2705 Full | \u2705 Full |\n| Settings Persistence | \u2705 Full | \u2705 Full | \u26a0\ufe0f Limited\u00b3 | \u2705 Full | \u2705 Full |\n| Sticky Notes | \u2705 Full | \u2705 Full | \u2705 Full | \u2705 Full | \u2705 Touch\u2074 |\n| Split View | \u2705 Full | \u2705 Full | \u2705 Full | \u2705 Full | \u26a0\ufe0f Single\u2075 |\n| Context Menus | \u2705 Full | \u2705 Full | \u2705 Full | \u2705 Full | \u2705 Long-press |\n| Mobile Interface | \u2705 Full | \u2705 Full | \u2705 Full | \u2705 Full | \u2705 Optimized |\n| PWA Features | \u2705 Full | \u2705 Full | \u26a0\ufe0f Limited\u2076 | \u2705 Full | \u2705 Varies |\n\nNotes:\n1. Mobile tabs use horizontal scrolling instead of visual reordering\n2. Safari blocks some Ctrl shortcuts; use Cmd equivalents\n3. Safari Private Mode has localStorage limitations\n4. Touch-optimized drag/resize for sticky notes\n5. Mobile automatically shows single pane; tap to switch\n6. Safari PWA support varies by iOS version\n\n\ud83d\udcf1 Device Type Compatibility\n\nDesktop Features\n| Feature | Windows | macOS | Linux | ChromeOS |\n|---------|---------|-------|-------|----------|\n| Full Keyboard Shortcuts | \u2705 Ctrl | \u2705 Cmd | \u2705 Ctrl | \u2705 Ctrl |\n| Drag & Drop Tabs | \u2705 | \u2705 | \u2705 | \u2705 |\n| Multi-Window Support | \u2705 | \u2705 | \u2705 | \u2705 |\n| File System Access | \u26a0\ufe0f Limited\u2077 | \u26a0\ufe0f Limited\u2077 | \u26a0\ufe0f Limited\u2077 | \u274c |\n| Local Server | \u2705 | \u2705 | \u2705 | \u26a0\ufe0f Limited |\n\nMobile/Tablet Features\n| Feature | iOS Safari | iOS Chrome | Android Chrome | Android Firefox |\n|---------|------------|------------|----------------|-----------------|\n| Touch Navigation | \u2705 | \u2705 | \u2705 | \u2705 |\n| Responsive Menu | \u2705 | \u2705 | \u2705 | \u2705 |\n| Long-press Context | \u2705 | \u2705 | \u2705 | \u2705 |\n| Pinch Zoom | \u2705 | \u2705 | \u2705 | \u2705 |\n| Add to Home Screen | \u2705 | \u2705 | \u2705 | \u2705 |\n| Offline Mode | \u2705 | \u2705 | \u2705 | \u2705 |\n\nNote 7: Browser security limits direct file system access; use web server for development\n\n\ud83d\ude80 Deployment Platform Compatibility\n\nStatic Hosting\n| Platform | Search Index | Theme Loading | Path Detection | Custom Domains |\n|----------|--------------|---------------|----------------|----------------|\n| GitHub Pages | \u2705 Auto | \u2705 CDN | \u2705 Auto | \u2705 |\n| GitLab Pages | \u2705 CI/CD | \u2705 Fast | \u2705 Auto | \u2705 |\n| Netlify | \u2705 Build | \u2705 CDN | \u2705 Auto | \u2705 |\n| Vercel | \u2705 Build | \u2705 Edge | \u2705 Auto | \u2705 |\n| AWS S3 | \u26a0\ufe0f Manual\u2078 | \u2705 | \u26a0\ufe0f Manual | \u2705 |\n| Azure Static | \u2705 Action | \u2705 | \u2705 Auto | \u2705 |\n| Firebase Hosting | \u26a0\ufe0f Manual\u2078 | \u2705 | \u26a0\ufe0f Manual | \u2705 |\n\nSelf-Hosted\n| Environment | Python Build | PHP Server | Node.js | Docker |\n|-------------|--------------|------------|---------|--------|\n| Ubuntu/Debian | \u2705 | \u2705 | \u2705 | \u2705 |\n| CentOS/RHEL | \u2705 | \u2705 | \u2705 | \u2705 |\n| Windows Server | \u2705 | \u2705 | \u2705 | \u2705 |\n| macOS Server | \u2705 | \u2705 | \u2705 | \u2705 |\n| Shared Hosting | \u26a0\ufe0f Limited\u2079 | \u2705 | \u26a0\ufe0f Limited | \u274c |\n\nNote 8: Requires manual python3 build.py before upload\nNote 9: Depends on host Python/Node.js support\n\n\u2699\ufe0f Feature Implementation Status\n\nSearch Features\n| Feature | Status | Notes |\n|---------|--------|--------|\n| Exact Phrases | \u2705 Implemented | Use \"quoted text\" |\n| Exclusion | \u2705 Implemented | Use -excluded |\n| Tag Filtering | \u2705 Implemented | Use tag:name |\n| Author Filtering | \u2705 Implemented | Use author:name |\n| Fuzzy Matching | \u274c Not Available | Exact matching only |\n| Result Ranking | \u274c Not Available | Results in index order |\n| Auto-complete | \u274c Not Available | Manual typing required |\n\nKeyboard Shortcuts\n| Shortcut Category | Status | Availability |\n|------------------|---------|--------------|\n| Basic Navigation | \u2705 Full | All platforms |\n| Tab Management | \u2705 Full | Desktop only |\n| Search & Filter | \u2705 Full | All platforms |\n| Settings Access | \u2705 Full | All platforms |\n| Custom Shortcuts | \u2705 Limited\u00b9\u2070 | 5 customizable |\n| Vim Mode | \u274c Not Available | Future consideration |\n| Chord Shortcuts | \u274c Not Available | Future consideration |\n\nNote 10: Only basic shortcuts customizable: new-tab, search, settings, filter, bookmark\n\nInterface Features\n| Feature | Desktop | Tablet | Mobile | Notes |\n|---------|---------|--------|--------|--------|\n| Multi-tab Interface | \u2705 Full | \u2705 Full | \u2705 Horizontal | Scrollable on mobile |\n| Split View | \u2705 Full | \u2705 Full | \u26a0\ufe0f Single | Auto-adapts |\n| Drag & Drop | \u2705 Full | \u26a0\ufe0f Touch | \u274c | Touch gestures on tablet |\n| Context Menus | \u2705 Right-click | \u2705 Long-press | \u2705 Long-press | Platform-appropriate |\n| Responsive Design | \u2705 Adaptive | \u2705 Optimized | \u2705 Optimized | Breakpoint: 768px |\n\n\ud83d\udd27 Technical Requirements\n\nMinimum Requirements\n| Component | Requirement | Notes |\n|-----------|-------------|--------|\n| Browser | Modern browser (2018+) | ES6+ support required |\n| JavaScript | Enabled | Core functionality depends on JS |\n| Local Storage | 5MB+ available | For settings and cache |\n| Screen Resolution | 320px minimum width | Mobile-first design |\n| Network | Initial load only | Fully offline after load |\n\nRecommended Specifications\n| Component | Recommendation | Benefits |\n|-----------|----------------|----------|\n| RAM | 4GB+ | Smooth performance with many tabs |\n| Storage | 50MB+ | Space for offline cache |\n| CPU | Dual-core+ | Faster search and rendering |\n| Connection | Broadband | Initial theme/asset loading |\n\nDevelopment Requirements\n| Component | Version | Purpose |\n|-----------|---------|---------|\n| Python | 3.6+ | Build script (search index) |\n| PyYAML | Latest | YAML frontmatter parsing |\n| Git | 2.0+ | Version control (optional) |\n| Web Server | Any | Local development |\n\n\ud83c\udf0d Geographic & Network Considerations\n\nCDN Performance\n| Region | GitHub Pages | GitLab Pages | Netlify | Notes |\n|--------|--------------|--------------|---------|--------|\n| North America | \u2705 Fast | \u2705 Fast | \u2705 Fastest | All perform well |\n| Europe | \u2705 Fast | \u2705 Fastest | \u2705 Fast | GitLab EU servers |\n| Asia Pacific | \u2705 Good | \u2705 Good | \u2705 Fast | Some latency |\n| Other Regions | \u26a0\ufe0f Variable | \u26a0\ufe0f Variable | \u2705 Good | Netlify global CDN |\n\nNetwork Conditions\n| Connection | Initial Load | Subsequent Use | Recommendations |\n|------------|--------------|----------------|-----------------|\n| Broadband | < 3 seconds | Instant | All features available |\n| Mobile 4G | < 10 seconds | Instant | Disable animation themes |\n| Mobile 3G | < 30 seconds | Instant | Use light themes |\n| Slow/Satellite | 1-2 minutes | Instant | Minimal themes only |\n\n\ud83d\udd12 Security & Privacy Features\n\nData Protection\n| Feature | Status | Details |\n|---------|--------|---------|\n| No External Requests | \u2705 Guaranteed | Zero tracking/analytics |\n| Offline Operation | \u2705 Full | Works without internet |\n| Local Storage Only | \u2705 Yes | No cloud data storage |\n| HTTPS Support | \u2705 Platform-dependent | Most hosts provide SSL |\n| Content Security | \u2705 Sanitized | XSS prevention |\n\nPrivacy Compliance\n| Regulation | Compliance | Notes |\n|------------|------------|--------|\n| GDPR | \u2705 Compliant | No personal data collection |\n| CCPA | \u2705 Compliant | No data sharing |\n| COPPA | \u2705 Compliant | No age verification needed |\n| Enterprise | \u2705 Suitable | Air-gap compatible |\n\n\ud83d\udea8 Known Limitations\n\nSearch Limitations\n- No fuzzy/approximate matching\n- No search result ranking\n- No advanced Boolean operators (AND/OR beyond tags)\n- No search within date ranges\n- No wildcard or regex support\n\nMobile Limitations\n- No drag & drop tab reordering\n- Limited keyboard shortcut support\n- Context menus require long-press\n- Split view shows single pane only\n\nBrowser-Specific Issues\n- Safari Private Mode: Limited localStorage\n- iOS WebKit: Some PWA limitations\n- Chrome Mobile: Aggressive memory management\n- Firefox: Occasional theme loading delays\n\nPlatform Limitations\n- Static Hosting: No server-side processing\n- File System: No direct file access from browser\n- Build Process: Requires Python for index generation\n\n---\n\n\ud83c\udfaf Compatibility Summary\n\n\u2705 Universally Compatible:\n- Core reading and navigation\n- Search and filtering\n- Theme switching\n- Settings management\n- Offline operation\n\n\u26a0\ufe0f Platform-Dependent:\n- Keyboard shortcuts (desktop vs. mobile)\n- Drag & drop (mouse vs. touch)\n- Context menus (right-click vs. long-press)\n- Split view (adaptive behavior)\n\n\u274c Not Available:\n- Advanced search features (fuzzy, ranking)\n- Complex keyboard shortcuts\n- File system integration\n- Real-time collaboration\n\nThis compatibility matrix helps you understand what to expect when using the wiki across different environments and platforms!",
      "code_blocks_count": 0
    },
    {
      "path": "/notes/tutorials/features/search-guide.md",
      "context": "tutorials",
      "metadata": {
        "title": "Advanced Search Features",
        "tags": [
          "demo",
          "search",
          "operators",
          "filtering"
        ],
        "created": "2025-06-13",
        "author": "Wiki Admin",
        "description": "Complete guide to advanced search features including operators, tag filtering, and search techniques",
        "updated": null,
        "category": null,
        "status": null,
        "aliases": [],
        "related": [],
        "dependencies": [],
        "keywords": [],
        "tableOfContents": "auto",
        "hideFromSearch": false
      },
      "content_preview": "The Notes Wiki includes a powerful search system that goes far beyond simple text matching. Learn how to use advanced operators, tag filtering, and search techniques to find exactly what you're lookin...",
      "searchable_content": "\nAdvanced Search Features\n\nThe Notes Wiki includes a powerful search system that goes far beyond simple text matching. Learn how to use advanced operators, tag filtering, and search techniques to find exactly what you're looking for.\n\n\ud83d\udd0d Quick Search Access\n\n- Header Search: Click the search icon or search box in the header\n- Keyboard Shortcut: Press <kbd>Ctrl</kbd>+<kbd>K</kbd> to focus search instantly\n- URL Search: Use #/search/your+search+term for direct search links\n\n\ud83c\udfaf Search Operators\n\nExact Phrase Search\nUse quotes for exact phrase matching:\n\n\n\"machine learning algorithms\"\n\"Notes Wiki system\" \n\"CSS counter-based line numbers\"\n\n\nExample Results:\n- \u2705 \"machine learning algorithms for beginners\"\n- \u274c \"machine algorithms for learning\"\n\nExclusion Operator\nUse minus (-) to exclude terms:\n\n\njavascript -angular\npython -django\ntheme -dark\n\n\nExample:\n- javascript -angular finds JavaScript content but excludes Angular-related notes\n- css -framework finds CSS notes excluding framework-specific content\n\nTag Filtering\nUse tag: to search within specific tags:\n\n\ntag:javascript\ntag:tutorial\ntag:personal\ntag:code-blocks\n\n\nMultiple Tags:\n\ntag:javascript tag:tutorial\ntag:css tag:demo\n\n\nAuthor Filtering  \nUse author: to find notes by specific authors:\n\n\nauthor:\"Wiki Admin\"\nauthor:\"John Doe\"\nauthor:System\n\n\nCombining Operators\nCreate powerful queries by combining operators:\n\n\ntag:javascript \"async await\" -promise\nauthor:\"Wiki Admin\" tag:demo -test\n\"code blocks\" tag:tutorial -basic\n\n\n\ud83c\udff7\ufe0f Tag-Based Filtering\n\nTag Filter Interface\n- Click Filter button or press <kbd>Ctrl</kbd>+<kbd>F</kbd>\n- Select multiple tags for filtering\n- Choose between OR/AND logic\n\nTag Logic\nTag filtering uses simple matching:\n- Multiple tags selected work as OR logic by default\n- Shows notes that match any of the selected tags\n- Use search operators for precise tag combinations\n\n\ud83c\udfa8 Smart Search Features\n\nSearch History\nYour recent searches are saved automatically:\n- Up to 50 recent searches stored locally\n- Previous searches remembered across sessions\n- Access history through browser localStorage\n\n\ud83d\udcca Search Results\n\nResult Ordering\nResults appear in the order they exist in the search index:\n- No relevance ranking or scoring applied\n- All matching notes displayed in index order\n- Pagination available for large result sets (20 per page)\n\nResult Information\nEach result shows:\n- Title - Note title with highlighting\n- Description - Brief content summary\n- Tags - Associated tags\n- Author - Note author\n- Preview - Content snippet with search terms highlighted\n\nQuick Actions\nFrom search results:\n- Click title - Open note in current tab\n- Ctrl+Click - Open in new tab\n- Click tags - Filter by that tag\n- Click author - Filter by author\n\n\ud83d\ude80 Advanced Search Techniques\n\nContent Type Searches\nFind specific types of content:\n\n\ntag:code-blocks \"function\"\ntag:tutorial \"step by step\"  \ntag:reference \"cheat sheet\"\ntag:personal \"daily\"\n\n\nDate-Based Searches\nSearch metadata includes dates:\n\n\nauthor:System \"2025\"\n\"created: 2025-01\" \n\"updated\" tag:demo\n\n\nTechnical Content Searches\nFind programming content:\n\n\n\"javascript\" tag:demo\n\"code block\" \"line numbers\"\n\"syntax highlighting\" -test\ntag:css \"theme\" \"color\"\n\n\nDocumentation Searches\nFind specific documentation:\n\n\n\"how to\" tag:tutorial\n\"getting started\" -test\n\"configuration\" tag:settings\n\"keyboard shortcuts\" tag:demo\n\n\n\ud83d\udca1 Search Best Practices\n\nEffective Search Strategies\n\n1. Start Broad, Then Narrow\n\nStep 1: javascript\nStep 2: javascript tutorial  \nStep 3: javascript tutorial -advanced\nStep 4: tag:tutorial \"javascript\" \"beginner\"\n\n\n2. Use Multiple Search Methods\n- Try tag filtering first for categorical searches\n- Use text search for specific content\n- Combine both for precise results\n\n3. Leverage Exclusions\n\ntheme -test -debug\ntutorial -\"work in progress\"\njavascript -framework -library\n\n\nCommon Search Patterns\n\nFinding Examples:\n\ntag:demo \"example\"\n\"code example\" tag:tutorial\n\"sample\" -test\n\n\nFinding Documentation:\n\n\"how to\" OR \"guide\" OR \"tutorial\"\ntag:documentation -draft\n\"getting started\" tag:beginner\n\n\nFinding Reference Material:\n\ntag:reference OR tag:cheatsheet\n\"reference\" OR \"cheat sheet\"\n\"commands\" tag:reference\n\n\n\ud83d\udd17 Search URLs & Sharing\n\nDirect Search Links\nShare searches with URL patterns:\n\n\n#/search/javascript+tutorial\n#/search/\"code+blocks\"+tag:demo\n#/search/tag:css+-test\n\n\nBookmarkable Searches\nCreate bookmarks for frequent searches:\n- Weekly Reviews: tag:personal \"weekly\"\n- Code References: tag:reference \"code\"\n- Learning Material: tag:tutorial -completed\n\nSearch in New Tabs\n- <kbd>Ctrl</kbd>+<kbd>Click</kbd> search results to open in new tabs\n- Use <kbd>Ctrl</kbd>+<kbd>T</kbd> then search for research sessions\n\n\ud83c\udfaf Search Examples\n\nReal-World Search Scenarios\n\nScenario 1: Learning JavaScript\n\nSearch: tag:javascript tag:tutorial -advanced\nFilter: Include [beginner], [examples]\nResult: Beginner-friendly JavaScript tutorials with examples\n\n\nScenario 2: Theme Customization\n\nSearch: \"theme\" OR \"css\" tag:demo\nExclude: test, debug\nResult: Theme and CSS demos excluding test files\n\n\nScenario 3: Code Block Features\n\nSearch: \"code block\" OR \"syntax highlighting\" OR \"line numbers\"\nFilter: Include [demo], [features]\nResult: All code block feature documentation\n\n\nScenario 4: Personal Project Notes\n  \nSearch: author:\"Your Name\" tag:personal tag:projects\nFilter: Exclude [archive], [completed]\nResult: Your active personal project notes\n\n\n\ud83d\udd27 Search Configuration\n\nSearch Behavior\nThe search system uses these built-in behaviors:\n\n- Search delay - 150ms debounce before search executes\n- Results per page - 20 results with pagination\n- Content inclusion - Searches titles, descriptions, content, and tags\n- Case insensitive - All searches ignore letter case\n- Exact matching - No fuzzy matching or approximation\n\nPerformance Tips\n\nFor Large Wikis:\n- Use tag filtering first to narrow results\n- Prefer specific terms over general ones\n- Use exclusions to eliminate noise\n- Limit searches to relevant sections\n\nFor Quick Finding:\n- Use recent search history\n- Bookmark frequent searches  \n- Learn common tag patterns\n- Use keyboard shortcuts for speed\n\n---\n\nMaster Search with Practice\n\nThe search system becomes more powerful as you learn your content patterns. Experiment with different operators and develop search strategies that match your workflow!\n\nPro Tip: Use <kbd>Ctrl</kbd>+<kbd>K</kbd> for instant search access, and don't forget that search results can be opened in multiple tabs with <kbd>Ctrl</kbd>+<kbd>Click</kbd> for research sessions. \"machine learning algorithms\"\n\"Notes Wiki system\" \n\"CSS counter-based line numbers\" javascript -angular\npython -django\ntheme -dark tag:javascript\ntag:tutorial\ntag:personal\ntag:code-blocks tag:javascript tag:tutorial\ntag:css tag:demo author:\"Wiki Admin\"\nauthor:\"John Doe\"\nauthor:System tag:javascript \"async await\" -promise\nauthor:\"Wiki Admin\" tag:demo -test\n\"code blocks\" tag:tutorial -basic tag:code-blocks \"function\"\ntag:tutorial \"step by step\"  \ntag:reference \"cheat sheet\"\ntag:personal \"daily\" author:System \"2025\"\n\"created: 2025-01\" \n\"updated\" tag:demo \" ### Documentation Searches\nFind specific documentation: ## \ud83d\udca1 Search Best Practices\n\n### Effective Search Strategies\n\n**1. Start Broad, Then Narrow** **2. Use Multiple Search Methods**\n- Try tag filtering first for categorical searches\n- Use text search for specific content\n- Combine both for precise results\n\n**3. Leverage Exclusions** ### Common Search Patterns\n\n**Finding Examples:** **Finding Documentation:** **Finding Reference Material:** ## \ud83d\udd17 Search URLs & Sharing\n\n### Direct Search Links\nShare searches with URL patterns: ### Bookmarkable Searches\nCreate bookmarks for frequent searches:\n- **Weekly Reviews**: `tag:personal \"weekly\"`\n- **Code References**: `tag:reference \"code\"`\n- **Learning Material**: `tag:tutorial -completed`\n\n### Search in New Tabs\n- <kbd>Ctrl</kbd>+<kbd>Click</kbd> search results to open in new tabs\n- Use <kbd>Ctrl</kbd>+<kbd>T</kbd> then search for research sessions\n\n## \ud83c\udfaf Search Examples\n\n### Real-World Search Scenarios\n\n**Scenario 1: Learning JavaScript** **Scenario 2: Theme Customization** **Scenario 3: Code Block Features** **Scenario 4: Personal Project Notes**",
      "code_blocks_count": 20
    },
    {
      "path": "/notes/tutorials/features/pomodoro-timer.md",
      "context": "tutorials",
      "metadata": {
        "title": "Pomodoro Timer Guide",
        "tags": [
          "demo",
          "productivity",
          "pomodoro",
          "focus",
          "timer"
        ],
        "created": "2025-06-13",
        "author": "Wiki Admin",
        "description": "Complete guide to the built-in Pomodoro timer for enhanced focus and productivity",
        "updated": null,
        "category": null,
        "status": null,
        "aliases": [],
        "related": [],
        "dependencies": [],
        "keywords": [],
        "tableOfContents": "auto",
        "hideFromSearch": false
      },
      "content_preview": "The Notes Wiki includes a built-in Pomodoro timer to help you maintain focus and productivity during note-taking, research, and study sessions. This productivity technique uses timed work intervals wi...",
      "searchable_content": "\nPomodoro Timer Guide\n\nThe Notes Wiki includes a built-in Pomodoro timer to help you maintain focus and productivity during note-taking, research, and study sessions. This productivity technique uses timed work intervals with breaks to optimize concentration.\n\n\ud83c\udf45 Pomodoro Technique Basics\n\nThe Classic Method\n1. Work Session - 25 minutes of focused work\n2. Short Break - 5 minutes of rest\n3. Repeat - Complete 4 work sessions\n4. Long Break - 15-30 minutes after 4 sessions\n\nBenefits\n- Enhanced Focus - Eliminates distractions during work periods\n- Regular Breaks - Prevents mental fatigue\n- Progress Tracking - Measure productivity in completed \"pomodoros\"\n- Time Awareness - Better understanding of task duration\n\n\ud83c\udfaf Timer Access & Controls\n\nAccessing the Timer\n\nEnable Pomodoro Timer:\n1. Open Settings (\u2699\ufe0f or <kbd>Ctrl</kbd>+<kbd>,</kbd>)\n2. Navigate to Pomodoro Timer section\n3. Toggle Enable Pomodoro Timer\n4. Timer appears in header/sidebar\n\nQuick Access:\n- Keyboard: <kbd>Ctrl</kbd>+<kbd>Shift</kbd>+<kbd>P</kbd> (toggle)\n- Header Icon: Click the timer icon \ud83c\udf45\n- Settings: Dedicated Pomodoro section\n\nTimer Controls\n\nBasic Controls:\n- Start \u25b6\ufe0f - Begin current session\n- Pause \u23f8\ufe0f - Pause timer (resume where left off)\n- Stop \u23f9\ufe0f - End current session\n- Reset \ud83d\udd04 - Reset timer to beginning\n\nAdvanced Controls:\n- Skip \u23ed\ufe0f - Skip to next session type\n- Settings \u2699\ufe0f - Quick access to timer settings\n- History \ud83d\udcca - View completed sessions\n\n\u2699\ufe0f Timer Configuration\n\nSession Durations\nCustomize all timer intervals in Settings \u2192 Pomodoro:\n\nWork Sessions:\n- Default: 25 minutes\n- Range: 15-60 minutes\n- Custom: Set any duration\n\nShort Breaks:\n- Default: 5 minutes  \n- Range: 3-15 minutes\n- Automatic: Start automatically or require manual start\n\nLong Breaks:\n- Default: 15 minutes\n- Range: 10-45 minutes\n- Frequency: After every 4 work sessions (customizable)\n\nNotification Settings\n\nAudio Alerts:\n- Session complete - Sound when work/break ends\n- Session start - Sound when new session begins\n- Warning - Alert 1-2 minutes before session ends\n- Volume control - Adjust notification volume\n\nVisual Notifications:\n- Desktop notifications - Browser notifications\n- Title bar - Show timer in page title\n- Progress indicator - Visual progress bar\n- Color changes - Different colors for work/break\n\nBehavior Options\n\nAuto-Progression:\n- Auto-start breaks - Automatically begin break periods\n- Auto-start work - Automatically begin work sessions\n- Manual control - Require manual start for all sessions\n\nIntegration Features:\n- Tab title updates - Show timer in browser tab\n- Distraction blocking - Disable certain features during work\n- Focus mode - Hide non-essential UI elements\n\n\ud83d\ude80 Pomodoro Workflows\n\nStudy Sessions\nPerfect for focused learning and note-taking:\n\n\nWorkflow: \"Deep Learning Session\"\n1. Work (25min): Read and take notes on topic\n2. Break (5min): Step away, stretch, hydrate\n3. Work (25min): Review and organize notes\n4. Break (5min): Light movement, fresh air\n5. Work (25min): Practice or apply concepts\n6. Break (5min): Quick relaxation\n7. Work (25min): Summarize and review\n8. Long Break (15min): Complete mental reset\n\n\nResearch Projects\nOrganize research with timed intervals:\n\n\nWorkflow: \"Research Deep Dive\"\nSession 1: Initial topic exploration\nSession 2: Source gathering and bookmarking\nSession 3: Detailed reading and note-taking\nSession 4: Analysis and synthesis\nLong Break: Process information subconsciously\n\n\nWriting Projects\nStructure writing time for better output:\n\n\nWorkflow: \"Content Creation\"\nSession 1: Outline and structure\nSession 2: First draft writing\nSession 3: Content expansion\nSession 4: Review and initial editing\nLong Break: Mental distance for fresh perspective\n\n\nReview Sessions\nSystematic review of existing notes:\n\n\nWorkflow: \"Weekly Review\"\nSession 1: Collect notes from the week\nSession 2: Categorize and tag content\nSession 3: Identify knowledge gaps\nSession 4: Plan next learning objectives\n\n\n\ud83d\udcca Progress Tracking\n\nSession Statistics\nTrack your productivity patterns:\n\nDaily Stats:\n- Completed sessions - Work sessions finished\n- Total focus time - Actual work time logged\n- Break compliance - Breaks taken vs. skipped\n- Efficiency rate - Planned vs. actual time\n\nWeekly/Monthly Views:\n- Productivity trends - Focus time over periods\n- Best performance days - Peak productivity identification\n- Goal tracking - Progress toward time goals\n- Habit formation - Consistency metrics\n\nPerformance Insights\n\nPattern Recognition:\n- Peak hours - When you're most focused\n- Session success rates - Which durations work best\n- Break importance - Correlation between breaks and performance\n- Distraction analysis - Common interruption patterns\n\n\ud83c\udfa8 Timer Appearance\n\nVisual Design\nThe timer integrates seamlessly with your chosen theme:\n\nWork Session Display:\n- Progress circle - Visual countdown\n- Time remaining - MM:SS format\n- Session type - \"Work Session 1/4\"\n- Theme colors - Matches current theme\n\nBreak Session Display:\n- Different colors - Distinct from work sessions\n- Relaxed styling - Softer visual treatment\n- Break type - \"Short Break\" or \"Long Break\"\n- Next session preview - What comes next\n\nCustomization Options\n\nDisplay Preferences:\n- Timer size - Small/medium/large\n- Position - Header/sidebar/floating\n- Transparency - Opacity when not focused\n- Animations - Smooth transitions and effects\n\nTheme Integration:\n- Auto-theming - Matches current wiki theme\n- Custom colors - Override with personal preferences\n- Dark/light adaptation - Optimized for theme type\n\n\ud83d\udca1 Pomodoro Best Practices\n\nPreparation\nSet yourself up for success:\n\nBefore Starting:\n- Clear objectives - Know what you want to accomplish\n- Gather materials - Have everything you need ready\n- Eliminate distractions - Close unnecessary tabs/apps\n- Hydrate - Have water available\n- Comfortable environment - Good lighting, temperature\n\nDuring Work Sessions\n\nFocus Strategies:\n- Single-tasking - Work on one thing only\n- No switching - Resist urge to multitask\n- Note distractions - Write down interrupting thoughts\n- Stay committed - Complete the full session\n\nEmergency Protocols:\n- True emergencies - Stop timer, handle issue\n- Minor interruptions - Note and return to work\n- Internal distractions - Acknowledge and refocus\n\nDuring Breaks\n\nEffective Break Activities:\n- Physical movement - Stand, stretch, walk\n- Eye rest - Look away from screen\n- Hydration - Drink water\n- Fresh air - Open window or step outside\n- Mental reset - Clear your mind\n\nAvoid During Breaks:\n- Screen time - No social media, videos, emails\n- Heavy tasks - Nothing mentally demanding\n- Overthinking - Don't analyze work progress\n\n\ud83d\udd27 Advanced Features\n\nCustom Session Types\nCreate specialized timer configurations:\n\nReading Sessions:\n- Duration: 30 minutes (longer for deep reading)\n- Breaks: 7 minutes (time to process information)\n- Auto-progression: Manual (control pacing)\n\nCreative Sessions:\n- Duration: 45 minutes (extended creative flow)\n- Breaks: 10 minutes (longer mental reset)\n- Notifications: Minimal (avoid disrupting flow)\n\nReview Sessions:\n- Duration: 20 minutes (shorter for review tasks)\n- Breaks: 3 minutes (quick breaks)\n- Auto-progression: Automatic (maintain momentum)\n\nIntegration with Other Features\n\nSearch Integration:\n- Session notes - Search within timer-tagged content\n- Productivity reports - Search for specific time periods\n- Goal tracking - Search for achievement milestones\n\nTag Integration:\n- Session tagging - Tag work sessions by topic\n- Project association - Link sessions to projects\n- Progress tracking - Track time spent on different subjects\n\n\ud83d\udcf1 Mobile Considerations\n\nResponsive Design\nThe timer works across all devices:\n\nDesktop Features:\n- Full timer controls\n- Detailed statistics\n- Advanced customization\n\nTablet Features:\n- Touch-friendly controls\n- Optimized layouts\n- Essential features\n\nMobile Features:\n- Simplified interface\n- Core timer functionality\n- Battery-efficient operation\n\n---\n\nStart Your First Pomodoro\n\nReady to boost your productivity? Here's how to start:\n\n1. Enable the timer in Settings \u2192 Pomodoro\n2. Set your first goal - What will you accomplish?\n3. Start a 25-minute work session \u25b6\ufe0f\n4. Focus completely on your chosen task\n5. Take your break when the timer ends\n6. Repeat and build the habit!\n\nPro Tip: Start with shorter 15-minute sessions if 25 minutes feels too long. The key is consistency, not duration.\n\nThe Pomodoro technique combined with the Notes Wiki creates a powerful environment for focused learning and productive note-taking! Workflow: \"Deep Learning Session\"\n1. Work (25min): Read and take notes on topic\n2. Break (5min): Step away, stretch, hydrate\n3. Work (25min): Review and organize notes\n4. Break (5min): Light movement, fresh air\n5. Work (25min): Practice or apply concepts\n6. Break (5min): Quick relaxation\n7. Work (25min): Summarize and review\n8. Long Break (15min): Complete mental reset Workflow: \"Research Deep Dive\"\nSession 1: Initial topic exploration\nSession 2: Source gathering and bookmarking\nSession 3: Detailed reading and note-taking\nSession 4: Analysis and synthesis\nLong Break: Process information subconsciously Workflow: \"Content Creation\"\nSession 1: Outline and structure\nSession 2: First draft writing\nSession 3: Content expansion\nSession 4: Review and initial editing\nLong Break: Mental distance for fresh perspective Workflow: \"Weekly Review\"\nSession 1: Collect notes from the week\nSession 2: Categorize and tag content\nSession 3: Identify knowledge gaps\nSession 4: Plan next learning objectives",
      "code_blocks_count": 4
    },
    {
      "path": "/notes/tutorials/features/recent-files-bookmarks.md",
      "context": "tutorials",
      "metadata": {
        "title": "Recent Files & Pinning Guide",
        "tags": [
          "demo",
          "recent-files",
          "pinning",
          "organization",
          "productivity"
        ],
        "created": "2025-06-13",
        "author": "Wiki Admin",
        "description": "Complete guide to the enhanced recent files system with pinning, grouping, and organization features",
        "updated": null,
        "category": null,
        "status": null,
        "aliases": [],
        "related": [],
        "dependencies": [],
        "keywords": [],
        "tableOfContents": "auto",
        "hideFromSearch": false
      },
      "content_preview": "The Notes Wiki includes an enhanced recent files system that goes beyond simple chronological listing. Pin important files, organize by context, and access your most important content with smart group...",
      "searchable_content": "\nRecent Files & Pinning Guide\n\nThe Notes Wiki includes an enhanced recent files system that goes beyond simple chronological listing. Pin important files, organize by context, and access your most important content with smart grouping and quick actions.\n\n\ud83d\udcc1 Recent Files Overview\n\nAccessing Recent Files\n\nQuick Access:\n- Header Dropdown: Click \"Recent\" in the header\n- Keyboard Shortcut: <kbd>Ctrl</kbd>+<kbd>E</kbd>\n- Settings: Manage in Settings \u2192 Files & History\n- Sidebar: Recent files section (if enabled)\n\nSmart Visibility:\n- Auto-hide when empty: No clutter when no recent files\n- Contextual display: Show relevant files based on current note\n- Search integration: Recent files appear in search suggestions\n\nFile Tracking\nThe system automatically tracks:\n\n- Viewed notes - Any note you open\n- Edited content - Notes you modify (future feature)\n- Search results - Notes opened from search\n- External links - Notes accessed via direct URLs\n- Tab restoration - Notes from restored browser sessions\n\n\ud83d\udccc Pinning System\n\nHow to Pin Files\n\nPin Actions:\n- Hover + Click: Hover over file \u2192 click pin icon \ud83d\udccc\n- Right-click menu: Right-click file \u2192 \"Pin to Recent\"\n- Keyboard: Select file + <kbd>P</kbd> to pin\n- Drag to pin area: Drag files to pinned section\n\nPin States:\n- Unpinned \ud83d\udcc4 - Regular recent file\n- Pinned \ud83d\udccc - Stays at top, never auto-removed\n- Temporarily pinned \u23f0 - Pinned for current session only\n\nPin Management\n\nPinned File Benefits:\n- Always visible - Never removed from recent list\n- Top placement - Appear at top of recent files\n- Quick access - First in keyboard navigation\n- Cross-session - Persist across browser sessions\n- Unlimited - No limit on pinned files\n\nUnpinning:\n- Click pin icon: Click \ud83d\udccc to unpin\n- Right-click menu: \"Unpin from Recent\"\n- Keyboard: Select + <kbd>U</kbd> to unpin\n- Settings: Bulk unpin operations\n\n\ud83d\uddc2\ufe0f Context Grouping\n\nAutomatic Grouping\nRecent files are intelligently grouped by context:\n\nContext Categories:\n- Personal \ud83d\udc64 - Files in /personal/ folder\n- Technical \ud83d\udcbb - Files in /technical/ folder\n- Projects \ud83d\udccb - Files in /projects/ folder\n- Reference \ud83d\udcda - Files in /reference/ folder\n- Tutorials \ud83c\udf93 - Files in /tutorials/ folder\n- Root Files \ud83d\udcc4 - Files in root /notes/ directory\n\nGroup Features\n\nCollapsible Groups:\n- Expand/Collapse: Click group header to toggle\n- Group badges: Show file count in each group\n- Empty groups: Hidden when no files present\n- Default state: Remember expanded/collapsed preference\n\nGroup Actions:\n- Pin entire group: Pin all files in a context\n- Clear group: Remove all files from a context\n- Open group: Open all group files in tabs\n- Sort group: Reorder files within group\n\n\ud83c\udfaf Quick Actions\n\nFile Actions\nEach recent file offers quick actions:\n\nPrimary Actions:\n- Click title - Open in current tab\n- Ctrl+Click - Open in new tab\n- Pin/Unpin \ud83d\udccc - Toggle pinned status\n- Remove \u274c - Remove from recent list\n\nSecondary Actions (Right-click):\n- Copy link - Copy note URL to clipboard\n- Share note - Get shareable link\n- Open in new window - Open in separate browser window\n- Show in sidebar - Reveal in navigation tree\n\nBatch Operations\n\nSelect Multiple Files:\n- Ctrl+Click - Select multiple files\n- Shift+Click - Select range of files\n- Ctrl+A - Select all in current group\n\nBatch Actions:\n- Pin selected - Pin multiple files at once\n- Unpin selected - Unpin multiple files\n- Remove selected - Clear multiple files\n- Open selected - Open multiple files in tabs\n\n\u2699\ufe0f Configuration Options\n\nRecent Files Settings\nCustomize behavior in Settings \u2192 Files & History:\n\nDisplay Options:\n- Max recent files: 10/20/30/50 files to track\n- Show context badges: Display group labels\n- Group by context: Enable/disable grouping\n- Show file descriptions: Include note descriptions\n- Compact view: Smaller file entries\n\nTracking Behavior:\n- Auto-add viewed files: Track opened notes automatically\n- Track search results: Include notes opened from search\n- Track external access: Include direct URL access\n- Session persistence: Remember across browser restarts\n\nGrouping Configuration\n\nContext Settings:\n- Auto-detect contexts: Based on folder structure\n- Custom contexts: Define your own grouping rules\n- Context icons: Customize group icons\n- Group order: Reorder context groups\n- Default expansion: Which groups start expanded\n\nAdvanced Grouping:\n- Tag-based grouping: Group by tags instead of folders\n- Author grouping: Group by note author\n- Date grouping: Group by creation/modification date\n- Project grouping: Group by project metadata\n\n\ud83d\udcca Smart Features\n\nIntelligent Suggestions\n\nContext-Aware Recommendations:\n- Related files: Files related to current note\n- Project continuation: Files from current project\n- Learning path: Sequential tutorial files\n- Research threads: Connected research notes\n\nUsage Pattern Recognition:\n- Frequent pairs: Files often opened together\n- Work sessions: Files used in same time periods\n- Topic clusters: Thematically related content\n- Workflow patterns: Common file sequences\n\nPredictive Access\n\nSmart Ordering:\n- Frequency weighting: More used files appear higher\n- Recency boost: Recently accessed files get priority\n- Context relevance: Files matching current work context\n- Time-based patterns: Files you typically use at this time\n\nPreloading:\n- Likely next files: Preload commonly accessed files\n- Session restoration: Fast restoration of recent files\n- Background loading: Load file metadata in advance\n\n\ud83d\ude80 Workflow Integration\n\nResearch Workflows\n\nAcademic Research:\n\nPinned Files:\n- Research methodology guide\n- Current paper draft\n- Bibliography template\n\nRecent Groups:\n- Reference: Source papers and articles\n- Personal: Research notes and insights\n- Projects: Current research project files\n\n\nTechnical Research:\n\nPinned Files:\n- Technology overview\n- Implementation guide\n- Best practices checklist\n\nRecent Groups:\n- Technical: API docs, tutorials\n- Projects: Implementation notes\n- Reference: Code examples, patterns\n\n\nProject Workflows\n\nSoftware Development:\n\nPinned Files:\n- Project requirements\n- Architecture decisions\n- Development guidelines\n\nRecent Groups:\n- Technical: Implementation notes\n- Reference: API documentation\n- Projects: Feature specifications\n\n\nContent Creation:\n\nPinned Files:\n- Style guide\n- Content calendar\n- Brand guidelines\n\nRecent Groups:\n- Personal: Draft content\n- Reference: Research materials\n- Projects: Content briefs\n\n\nLearning Workflows\n\nCourse Study:\n\nPinned Files:\n- Course syllabus\n- Study schedule\n- Key concepts summary\n\nRecent Groups:\n- Tutorials: Lesson notes\n- Personal: Study reflections\n- Reference: Additional resources\n\n\n\ud83d\udca1 Best Practices\n\nEffective Pinning Strategy\n\nWhat to Pin:\n- Reference materials - Frequently consulted guides\n- Active projects - Current work documents\n- Templates - Reusable document templates\n- Important procedures - Critical process documentation\n\nWhat Not to Pin:\n- Temporary files - One-time reference materials\n- Completed projects - Finished work (unless archived)\n- Experimental notes - Rough drafts and testing\n- Too many files - Keep pinned list manageable\n\nOrganization Tips\n\nGroup Management:\n- Keep groups balanced - Roughly equal numbers in each\n- Use descriptive contexts - Clear, meaningful group names\n- Regular cleanup - Remove old, irrelevant files\n- Pin group champions - One key file per context\n\nAccess Patterns:\n- Pin the essentials - Daily/weekly accessed files\n- Use recents for discovery - Let recent files surface new content\n- Leverage search - Don't rely solely on recent files\n- Combine with bookmarks - Use browser bookmarks for permanent access\n\n\ud83d\udcf1 Mobile Experience\n\nTouch-Friendly Features\n\nMobile Optimizations:\n- Larger touch targets - Easy finger navigation\n- Swipe actions - Swipe to pin/unpin/remove\n- Simplified interface - Essential actions only\n- Responsive grouping - Adapted for small screens\n\nTouch Gestures:\n- Tap - Open file\n- Long press - Show context menu\n- Swipe right - Pin file\n- Swipe left - Remove file\n- Double tap - Open in new tab\n\nPerformance Considerations\n\nMobile Performance:\n- Lazy loading - Load content as needed\n- Reduced animations - Faster interactions\n- Simplified previews - Faster rendering\n- Battery efficiency - Optimized background tasks\n\n\ud83d\udd27 Advanced Features\n\nFuture Enhancements\n\nPlanned Features:\n- File synchronization - Sync recent files across devices\n- Team sharing - Share recent file lists with collaborators\n- AI recommendations - Smart file suggestions based on content\n- Integration APIs - Connect with external tools\n\nPower User Features:\n- Custom sorting algorithms - Define your own file ordering\n- Bulk operations - Advanced batch file management\n- Export/import - Share recent file configurations\n- Automation rules - Auto-pin files based on criteria\n\n---\n\nGetting Started\n\n1. Enable recent files tracking in Settings \u2192 Files & History\n2. Open a few notes to populate your recent list\n3. Pin your most important files using the pin icon \ud83d\udccc\n4. Explore context grouping - see how files organize automatically\n5. Customize the settings to match your workflow\n\nPro Tip: Start by pinning 3-5 essential files you access daily, then let the recent files system surface other content naturally. The combination of pinned essentials and dynamic recents creates an optimal access pattern.\n\nThe recent files system learns from your usage patterns and gets more helpful over time! Pinned Files:\n- Research methodology guide\n- Current paper draft\n- Bibliography template\n\nRecent Groups:\n- Reference: Source papers and articles\n- Personal: Research notes and insights\n- Projects: Current research project files Pinned Files:\n- Technology overview\n- Implementation guide\n- Best practices checklist\n\nRecent Groups:\n- Technical: API docs, tutorials\n- Projects: Implementation notes\n- Reference: Code examples, patterns Pinned Files:\n- Project requirements\n- Architecture decisions\n- Development guidelines\n\nRecent Groups:\n- Technical: Implementation notes\n- Reference: API documentation\n- Projects: Feature specifications Pinned Files:\n- Style guide\n- Content calendar\n- Brand guidelines\n\nRecent Groups:\n- Personal: Draft content\n- Reference: Research materials\n- Projects: Content briefs Pinned Files:\n- Course syllabus\n- Study schedule\n- Key concepts summary\n\nRecent Groups:\n- Tutorials: Lesson notes\n- Personal: Study reflections\n- Reference: Additional resources",
      "code_blocks_count": 5
    },
    {
      "path": "/notes/tutorials/features/keyboard-shortcuts.md",
      "context": "tutorials",
      "metadata": {
        "title": "Keyboard Shortcuts Guide",
        "tags": [
          "demo",
          "shortcuts",
          "productivity",
          "navigation"
        ],
        "created": "2025-06-13",
        "author": "Wiki Admin",
        "description": "Complete guide to all available keyboard shortcuts",
        "updated": null,
        "category": null,
        "status": null,
        "aliases": [],
        "related": [],
        "dependencies": [],
        "keywords": [],
        "tableOfContents": "auto",
        "hideFromSearch": false
      },
      "content_preview": "The Notes Wiki includes keyboard shortcuts to boost your productivity. Press <kbd>?</kbd> at any time to see the shortcuts cheatsheet!\n\n\n\n| Shortcut | Action | Description |\n|----------|--------|-----...",
      "searchable_content": "\nKeyboard Shortcuts Guide\n\nThe Notes Wiki includes keyboard shortcuts to boost your productivity. Press <kbd>?</kbd> at any time to see the shortcuts cheatsheet!\n\n\ud83c\udfaf Quick Access\n\n| Shortcut | Action | Description |\n|----------|--------|-------------|\n| <kbd>?</kbd> | Show shortcuts cheatsheet | Opens the complete shortcuts overlay |\n| <kbd>Esc</kbd> | Close modals | Closes any open modals, overlays, or dialogs |\n| <kbd>F</kbd> | Focus mode | Toggle distraction-free reading mode |\n\n\ud83d\udd0d Search & Navigation\n\n| Shortcut | Action | Description |\n|----------|--------|-------------|\n| <kbd>Ctrl</kbd>+<kbd>K</kbd> | Search | Open global search (Mac: <kbd>\u2318</kbd>+<kbd>K</kbd>) |\n| <kbd>Ctrl</kbd>+<kbd>F</kbd> | Filter by tags | Open tag filtering interface (Mac: <kbd>\u2318</kbd>+<kbd>F</kbd>) |\n| <kbd>Ctrl</kbd>+<kbd>D</kbd> | Bookmark note | Bookmark the current note (Mac: <kbd>\u2318</kbd>+<kbd>D</kbd>) |\n\n\ud83d\udcd1 Tab Management\n\nPrimary Shortcuts\n| Shortcut | Action | Description |\n|----------|--------|-------------|\n| <kbd>Ctrl</kbd>+<kbd>T</kbd> | New tab | Open a new empty tab (Mac: <kbd>\u2318</kbd>+<kbd>T</kbd>) |\n| <kbd>Ctrl</kbd>+<kbd>W</kbd> | Close tab | Close the current tab (Mac: <kbd>\u2318</kbd>+<kbd>W</kbd>) |\n| <kbd>Ctrl</kbd>+<kbd>Shift</kbd>+<kbd>W</kbd> | Close all tabs | Close all open tabs (Mac: <kbd>\u2318</kbd>+<kbd>Shift</kbd>+<kbd>W</kbd>) |\n| <kbd>Ctrl</kbd>+<kbd>1</kbd>-<kbd>9</kbd> | Switch to tab | Jump to tab by number (1-9) (Mac: <kbd>\u2318</kbd>+<kbd>1</kbd>-<kbd>9</kbd>) |\n| <kbd>Ctrl</kbd>+<kbd>PageUp</kbd> | Previous tab | Switch to the previous tab (Mac: <kbd>\u2318</kbd>+<kbd>PageUp</kbd>) |\n| <kbd>Ctrl</kbd>+<kbd>PageDown</kbd> | Next tab | Switch to the next tab (Mac: <kbd>\u2318</kbd>+<kbd>PageDown</kbd>) |\n\nAlternative Shortcuts\n| Shortcut | Action | Description |\n|----------|--------|-------------|\n| <kbd>Alt</kbd>+<kbd>T</kbd> | New tab | Alternative shortcut for new tab |\n| <kbd>Alt</kbd>+<kbd>W</kbd> | Close tab | Alternative shortcut for closing tab |\n| <kbd>Alt</kbd>+<kbd>P</kbd> | Pin/unpin tab | Toggle pin status of current tab |\n| <kbd>Alt</kbd>+<kbd>1</kbd>-<kbd>9</kbd> | Switch to tab | Alternative tab switching |\n| <kbd>Alt</kbd>+<kbd>PageUp</kbd> | Previous tab | Alternative previous tab shortcut |\n| <kbd>Alt</kbd>+<kbd>PageDown</kbd> | Next tab | Alternative next tab shortcut |\n\n\u2699\ufe0f Settings & Features\n\n| Shortcut | Action | Description |\n|----------|--------|-------------|\n| <kbd>Ctrl</kbd>+<kbd>,</kbd> | Open settings | Access all application settings (Mac: <kbd>\u2318</kbd>+<kbd>,</kbd>) |\n| <kbd>Ctrl</kbd>+<kbd>Shift</kbd>+<kbd>S</kbd> | Create sticky note | Create a new floating sticky note (Mac: <kbd>\u2318</kbd>+<kbd>Shift</kbd>+<kbd>S</kbd>) |\n\n\ud83d\udca1 Tips\n\nPlatform Compatibility\n- Windows/Linux: Use <kbd>Ctrl</kbd> key for shortcuts\n- Mac: Use <kbd>\u2318</kbd> (Command) key instead of <kbd>Ctrl</kbd>\n\nCustomizable Shortcuts\nYou can customize some keyboard shortcuts in Settings \u2192 Advanced \u2192 Keyboard Shortcuts. The following shortcuts can be customized:\n- New tab\n- Search  \n- Settings\n- Tag filtering\n- Bookmark note\n\nBrowser Compatibility\nSome shortcuts may conflict with browser defaults. The wiki provides alternative shortcuts (using <kbd>Alt</kbd>) to avoid conflicts.\n\n---\n\nRemember: <kbd>?</kbd> Shows All Shortcuts\n\nThe most important shortcut to remember is <kbd>?</kbd> - it will show you the complete, up-to-date shortcuts cheatsheet whenever you need it!\n\nCustomize available shortcuts in Settings \u2192 Advanced \u2192 Keyboard Shortcuts to match your workflow.",
      "code_blocks_count": 0
    },
    {
      "path": "/notes/tutorials/features/settings-customization.md",
      "context": "tutorials",
      "metadata": {
        "title": "Settings & Customization Guide",
        "tags": [
          "demo",
          "settings",
          "customization",
          "configuration"
        ],
        "created": "2025-06-13",
        "author": "Wiki Admin",
        "description": "Guide to available settings and customization options",
        "updated": null,
        "category": null,
        "status": null,
        "aliases": [],
        "related": [],
        "dependencies": [],
        "keywords": [],
        "tableOfContents": "auto",
        "hideFromSearch": false
      },
      "content_preview": "The Notes Wiki provides essential customization options to personalize your experience. Access settings via the gear icon (\u2699\ufe0f) in the header or press <kbd>Ctrl</kbd>+<kbd>,</kbd>.\n\n\n\n- Header Icon: Cl...",
      "searchable_content": "\nSettings & Customization Guide\n\nThe Notes Wiki provides essential customization options to personalize your experience. Access settings via the gear icon (\u2699\ufe0f) in the header or press <kbd>Ctrl</kbd>+<kbd>,</kbd>.\n\n\ud83d\ude80 Accessing Settings\n\n- Header Icon: Click the gear icon \u2699\ufe0f\n- Keyboard: <kbd>Ctrl</kbd>+<kbd>,</kbd> (Cmd+, on Mac)\n\n\ud83c\udfa8 Appearance Settings\n\nTheme Selection\n\nChoose from 70 Professional Themes:\n- Classic Dark - Traditional dark themes including Ayu Mirage (default)\n- Classic Light - Clean light themes for daytime use\n- Material Design - Google Material Design inspired\n- Nature & Earth - Natural color palettes\n- Arctic & Winter - Cool, icy color schemes\n- Ocean & Sky - Blue and aqua based\n- Cyberpunk & Neon - Futuristic neon themes\n- Elegant & Pastel - Soft, muted colors\n- Professional - Business-appropriate themes\n- Special Effects - Unique visual themes\n\nTheme Features:\n- Live Preview - See themes instantly as you browse\n- Automatic Theme Switching - Enable/disable auto theme detection\n- Theme Categories - Organized in logical groups for easy browsing\n\nLayout Options\n\nContent Width:\n- Narrow - Optimal for reading (default)\n- Wide - More content visible\n- Full Width - Use entire screen width\n\nFocus Mode:\n- Toggle distraction-free reading mode\n- Activated with <kbd>F</kbd> key\n\n\ud83d\udcdd Editor Settings\n\nCode Blocks\n\nLine Numbers:\n- Show/Hide - Toggle line numbers in code blocks\n- Uses modern CSS counter-based numbering\n\nWord Wrap:\n- Enable/Disable - Control long line wrapping in code blocks\n\n\ud83e\udded Navigation Settings\n\nRecent Files:\n- Track Recent Files - Enable/disable recent file tracking\n- Recent Limit - Number of recent files to remember (default: 20)\n\nConfirmation Dialogs:\n- Confirm on Close - Ask before closing tabs/sticky notes (enabled by default)\n\n\u2699\ufe0f Advanced Settings\n\nKeyboard Shortcuts\n\nCustomize keyboard shortcuts for:\n- New Tab (default: Ctrl+T)\n- Search (default: Ctrl+K)\n- Settings (default: Ctrl+,)\n- Tag Filter (default: Ctrl+F)\n- Bookmark (default: Ctrl+D)\n\nCustom CSS\n\nCSS Injection:\n- Add custom CSS to override default styles\n- Useful for personal theme modifications\n- Live preview of changes\n\nSettings Management\n\nExport/Import:\n- Export Settings - Download settings as JSON file\n- Import Settings - Upload and restore settings\n- Reset to Defaults - Restore factory settings\n\nLocal Storage:\n- All settings stored locally in your browser\n- No cloud sync or external dependencies\n- Settings persist between sessions\n\n\ud83d\udca1 Quick Setup Recommendations\n\nFor Reading & Documentation\n\nTheme: Light theme (GitHub Light)\nContent Width: Narrow\nLine Numbers: Disabled\nWord Wrap: Enabled\nRecent Files: 20\n\n\nFor Coding & Technical Work\n\nTheme: Dark theme (Ayu Mirage, VSCode Dark+)\nContent Width: Wide\nLine Numbers: Enabled\nWord Wrap: Disabled\nRecent Files: 30\n\n\nFor Mobile Devices\n\nTheme: High contrast theme\nContent Width: Full Width\nFocus Mode: Available via F key\nConfirmation Dialogs: Enabled (safer on mobile)\n\n\n\ud83d\udd27 Customization Tips\n\nTheme Selection\n- Preview First - Hover over themes to see live previews\n- Consider Use Case - Light themes for daytime, dark for low-light\n- Professional vs. Creative - Choose based on your work environment\n\nLayout Optimization\n- Narrow Width is best for reading long documents\n- Wide Width shows more content for reference materials\n- Full Width maximizes screen real estate\n\nKeyboard Shortcuts\n- Keep default shortcuts unless they conflict with other software\n- Use the built-in <kbd>?</kbd> key to see all available shortcuts\n- Customize only the shortcuts you use frequently\n\n---\n\n\ud83d\udcbe Settings Storage\n\nAll settings are stored locally in your browser's localStorage. This means:\n- Privacy - No data sent to external servers\n- Offline - Settings work completely offline\n- Browser-specific - Settings don't sync between browsers\n- Persistence - Settings survive browser restarts\n\nBackup Recommendation: Use the export feature to backup your settings configuration, especially before major browser updates or when switching devices.\n\nThe settings system is designed to be simple yet effective - focus on the options that matter most for your daily workflow! Theme: Light theme (GitHub Light)\nContent Width: Narrow\nLine Numbers: Disabled\nWord Wrap: Enabled\nRecent Files: 20 Theme: Dark theme (Ayu Mirage, VSCode Dark+)\nContent Width: Wide\nLine Numbers: Enabled\nWord Wrap: Disabled\nRecent Files: 30 Theme: High contrast theme\nContent Width: Full Width\nFocus Mode: Available via F key\nConfirmation Dialogs: Enabled (safer on mobile)",
      "code_blocks_count": 3
    },
    {
      "path": "/notes/tutorials/features/tab-management.md",
      "context": "tutorials",
      "metadata": {
        "title": "Tab Management Guide",
        "tags": [
          "demo",
          "tabs",
          "productivity",
          "navigation"
        ],
        "created": "2025-06-13",
        "author": "Wiki Admin",
        "description": "Complete guide to tab management features including drag-and-drop, keyboard shortcuts, and multi-tab workflows",
        "updated": null,
        "category": null,
        "status": null,
        "aliases": [],
        "related": [],
        "dependencies": [],
        "keywords": [],
        "tableOfContents": "auto",
        "hideFromSearch": false
      },
      "content_preview": "The Notes Wiki includes a powerful tab system that enables efficient multi-document workflows. Open multiple notes simultaneously, reorder tabs with drag-and-drop, and navigate quickly with keyboard s...",
      "searchable_content": "\nTab Management Guide\n\nThe Notes Wiki includes a powerful tab system that enables efficient multi-document workflows. Open multiple notes simultaneously, reorder tabs with drag-and-drop, and navigate quickly with keyboard shortcuts.\n\n\ud83d\udcd1 Tab Basics\n\nOpening Tabs\n\nNew Empty Tab:\n- Click the + button in the tab bar\n- Press <kbd>Ctrl</kbd>+<kbd>T</kbd>\n- Right-click tab bar \u2192 \"New Tab\"\n\nOpen Note in New Tab:\n- <kbd>Ctrl</kbd>+<kbd>Click</kbd> any note link\n- <kbd>Ctrl</kbd>+<kbd>Click</kbd> search results\n- <kbd>Ctrl</kbd>+<kbd>Click</kbd> sidebar items\n- Right-click note \u2192 \"Open in New Tab\"\n\nDuplicate Current Tab:\n- Press <kbd>Ctrl</kbd>+<kbd>D</kbd>\n- Right-click tab \u2192 \"Duplicate\"\n\nTab Navigation\n\nKeyboard Shortcuts:\n- <kbd>Ctrl</kbd>+<kbd>1</kbd>-<kbd>9</kbd> - Jump to tab by number\n- <kbd>Ctrl</kbd>+<kbd>Tab</kbd> - Next tab\n- <kbd>Ctrl</kbd>+<kbd>Shift</kbd>+<kbd>Tab</kbd> - Previous tab\n\nMouse Navigation:\n- Click tab - Switch to tab\n- Middle-click tab - Close tab\n- Scroll on tab bar - Scroll through many tabs\n\nClosing Tabs\n\nSingle Tab:\n- Click the \u00d7 button on tab\n- Press <kbd>Ctrl</kbd>+<kbd>W</kbd>\n- Middle-click the tab\n\nMultiple Tabs:\n- <kbd>Ctrl</kbd>+<kbd>Shift</kbd>+<kbd>W</kbd> - Close all tabs\n- Right-click tab \u2192 \"Close Other Tabs\"\n- Right-click tab \u2192 \"Close Tabs to Right\"\n\nPinning Tabs\n\nPin Important Tabs:\n- Press <kbd>Alt</kbd>+<kbd>P</kbd> to pin/unpin current tab\n- Right-click tab \u2192 \"Pin Tab\"\n- Click the pin icon on the tab (when available)\n\nPinned Tab Features:\n- Protection from closure - Pinned tabs cannot be accidentally closed\n- Visual indicator - Pin icon shows tab is pinned\n- Persistent position - Pinned tabs stay at the beginning of the tab bar\n- Session persistence - Pinned tabs are restored when reopening the wiki\n- No accidental closure - Close button disabled on pinned tabs\n\n\ud83c\udfaf Drag-and-Drop Features\n\nReordering Tabs\nDrag tabs to reorder them for better organization:\n\n1. Click and hold on a tab\n2. Drag to desired position\n3. Drop to reorder\n\nVisual Feedback:\n- Tab being dragged becomes semi-transparent\n- Drop zone indicators show valid positions\n- Smooth animations provide feedback\n\nAdvanced Drag Operations\n\nDrag to Specific Positions:\n- Beginning - Drag to leftmost position\n- Between tabs - Drop between any two tabs\n- End - Drag to rightmost position\n\nMulti-Tab Dragging (Future Feature):\n- Select multiple tabs with <kbd>Ctrl</kbd>+<kbd>Click</kbd>\n- Drag entire selection to new position\n\n\ud83d\ude80 Tab Workflows\n\nResearch Workflow\nPerfect for gathering information from multiple sources:\n\n\n1. Start with main topic note\n2. Ctrl+Click related links \u2192 Open in background tabs\n3. Ctrl+1-9 to jump between tabs\n4. Drag tabs to group related content\n5. Pin reference tabs with Alt+P to keep them accessible\n\n\nExample Research Session:\n\nTab 1: \"JavaScript Basics\" (main topic)\nTab 2: \"Array Methods Reference\" (reference)\nTab 3: \"Async/Await Tutorial\" (related)\nTab 4: \"Code Examples\" (examples)\nTab 5: \"Best Practices\" (guidelines)\n\n\nWriting Workflow\nIdeal for content creation with references:\n\n\n1. Open draft in main tab\n2. Open reference materials in background tabs\n3. Use Ctrl+Tab to cycle between draft and references\n4. Pin style guide tab with Alt+P for persistent access\n5. Use duplicate tabs for before/after comparisons\n\n\nStudy Workflow\nOrganize learning materials efficiently:\n\n\n1. Course overview in first tab\n2. Current lesson in second tab  \n3. Practice exercises in third tab\n4. Reference materials in remaining tabs\n5. Reorder tabs by learning sequence\n\n\n\ud83c\udfa8 Tab Appearance & Indicators\n\nTab States\n\nActive Tab:\n- Highlighted background\n- Full opacity\n- Bold title text\n\nInactive Tabs:\n- Dimmed background\n- Reduced opacity\n- Normal title text\n\nLoading Tab:\n- Loading spinner icon\n- \"Loading...\" text\n- Disabled interaction\n\nVisual Indicators\n\nIcons:\n- \ud83d\udcc4 - Regular note\n- \ud83c\udfe0 - Home/Index page\n- \ud83d\udd0d - Search results\n- \u2699\ufe0f - Settings page\n- \ud83d\udccb - Empty/New tab\n\nStatus Indicators:\n- Modified - Dot indicator for unsaved changes\n- Pinned - \ud83d\udccc Pin icon for persistent tabs (protected from closure)\n- Shared - Share icon for shared content\n\nTab Titles\nTab titles are intelligently shortened:\n\n- Full title - \"JavaScript Advanced Concepts Tutorial\"\n- Shortened - \"JavaScript Advanced...\"\n- Minimal - \"JavaScript...\"\n- Icon only - When space is very limited\n\n\ud83d\udd27 Tab Management Features\n\nTab Persistence\nTabs are preserved across sessions:\n\n- Automatic saving - Open tabs saved to localStorage\n- Restore on startup - Previous session tabs restored\n- Crash recovery - Tabs recovered after browser crashes\n\nTab Limits\nManage performance with tab limits:\n\n- Default limit - 10 tabs (configurable)\n- Warning threshold - 8 tabs\n- Auto-close - Oldest unused tabs closed when limit reached\n- Exempt tabs - Pinned tabs are never auto-closed and don't count toward the limit\n\nTab Groups (Future Feature)\nOrganize tabs into logical groups:\n\n- Color coding - Assign colors to tab groups\n- Group names - Label groups for easy identification\n- Collapse groups - Hide/show entire groups\n- Group operations - Close/duplicate entire groups\n\n\u2699\ufe0f Tab Settings\n\nCustomization Options\nConfigure tab behavior in Settings \u2192 Tabs:\n\nAppearance:\n- Tab width - Minimum and maximum tab width\n- Show icons - Display icons in tabs\n- Show close buttons - Always/on hover/never\n- Animation speed - Tab transition animations\n\nBehavior:\n- Tab limit - Maximum number of open tabs\n- Auto-close - Close unused tabs automatically\n- Middle-click action - Close tab/new tab/custom\n- Scroll behavior - Mouse wheel scrolling in tab bar\n\nKeyboard:\n- Cycle order - Recently used vs. visual order\n- New tab position - End/after current/custom\n- Close tab focus - Previous/next/recent\n\n\ud83d\udca1 Tab Best Practices\n\nEfficient Tab Organization\n\nGroup Related Content:\n\nResearch tabs: Tab 1-3 (drag together)\nReference tabs: Tab 4-6 (keep at end)\nDraft tabs: Tab 7-8 (keep accessible)\n\n\nUse Descriptive Workflows:\n\nWorkflow 1: Learning new technology\n- Overview \u2192 Tutorial \u2192 Examples \u2192 Reference\n\nWorkflow 2: Project planning  \n- Requirements \u2192 Design \u2192 Research \u2192 Notes\n\nWorkflow 3: Content creation\n- Outline \u2192 Draft \u2192 References \u2192 Style guide\n\n\nPerformance Tips\n\nManage Tab Count:\n- Close unused tabs regularly\n- Use bookmarks for long-term references\n- Pin frequently accessed tabs with Alt+P\n- Set reasonable tab limits\n- Pinned tabs are protected from accidental closure\n\nOptimize for Your Screen:\n- Larger screens - More tabs visible\n- Smaller screens - Fewer tabs, more scrolling\n- Mobile - Limited tab functionality\n\nKeyboard Efficiency\n\nMaster Tab Shortcuts:\n\nCtrl+T - New tab (most important)\nCtrl+W - Close tab (second most important)\nAlt+P - Pin/unpin tab (protect important tabs)\nCtrl+1-9 - Jump to specific tabs\nCtrl+Tab - Cycle through tabs\n\n\nPower User Tips:\n\nCtrl+Shift+T - Reopen closed tab (future)\nCtrl+Shift+N - New private tab (future)\nCtrl+Shift+Tab - Reverse tab cycling\n\n\n\ud83c\udfaf Advanced Tab Techniques\n\nTab Templates\nCreate templates for common workflows:\n\nResearch Template:\n1. Main topic tab\n2. Reference tab  \n3. Notes tab\n4. Examples tab\n\nWriting Template:\n1. Outline tab\n2. Draft tab\n3. Style guide tab\n4. References tab\n\nTab Automation (Future)\nAutomate tab management with rules:\n\n- Auto-pin - Pin tabs matching patterns\n- Auto-close - Close tabs after inactivity\n- Auto-group - Group tabs by domain/topic\n- Auto-restore - Restore specific tab sets\n\nCross-Session Workflows\nMaintain workflows across browser sessions:\n\n1. Save tab sessions - Export current tab set\n2. Name sessions - \"Research Project Alpha\"\n3. Restore sessions - Load saved tab sets\n4. Share sessions - Export for team collaboration\n\n---\n\nTab Management Mastery\n\nEffective tab management transforms your note-taking workflow. Start with basic shortcuts, develop organization patterns, and gradually adopt advanced techniques that match your work style.\n\nRemember: The goal is productivity, not having the most tabs open. Find the balance that works for your workflow and screen size!\n\nQuick Start: Try opening 3-4 related notes in tabs right now and practice using <kbd>Ctrl</kbd>+<kbd>1</kbd>-<kbd>4</kbd> to jump between them. 1. Start with main topic note\n2. Ctrl+Click related links \u2192 Open in background tabs\n3. Ctrl+1-9 to jump between tabs\n4. Drag tabs to group related content\n5. Pin reference tabs with Alt+P to keep them accessible Tab 1: \"JavaScript Basics\" (main topic)\nTab 2: \"Array Methods Reference\" (reference)\nTab 3: \"Async/Await Tutorial\" (related)\nTab 4: \"Code Examples\" (examples)\nTab 5: \"Best Practices\" (guidelines) 1. Open draft in main tab\n2. Open reference materials in background tabs\n3. Use Ctrl+Tab to cycle between draft and references\n4. Pin style guide tab with Alt+P for persistent access\n5. Use duplicate tabs for before/after comparisons 1. Course overview in first tab\n2. Current lesson in second tab  \n3. Practice exercises in third tab\n4. Reference materials in remaining tabs\n5. Reorder tabs by learning sequence Research tabs: Tab 1-3 (drag together)\nReference tabs: Tab 4-6 (keep at end)\nDraft tabs: Tab 7-8 (keep accessible) Workflow 1: Learning new technology\n- Overview \u2192 Tutorial \u2192 Examples \u2192 Reference\n\nWorkflow 2: Project planning  \n- Requirements \u2192 Design \u2192 Research \u2192 Notes\n\nWorkflow 3: Content creation\n- Outline \u2192 Draft \u2192 References \u2192 Style guide Ctrl+T - New tab (most important)\nCtrl+W - Close tab (second most important)\nAlt+P - Pin/unpin tab (protect important tabs)\nCtrl+1-9 - Jump to specific tabs\nCtrl+Tab - Cycle through tabs Ctrl+Shift+T - Reopen closed tab (future)\nCtrl+Shift+N - New private tab (future)\nCtrl+Shift+Tab - Reverse tab cycling",
      "code_blocks_count": 8
    },
    {
      "path": "/notes/tutorials/features/pinned-tabs.md",
      "context": "tutorials",
      "metadata": {
        "title": "Pinned Tabs",
        "tags": [
          "tabs",
          "navigation",
          "productivity"
        ],
        "created": "2025-01-23",
        "author": "NotesWiki Team",
        "description": "Learn how to use pinned tabs to keep important notes always accessible",
        "updated": "2025-01-23",
        "category": null,
        "status": null,
        "aliases": [],
        "related": [],
        "dependencies": [],
        "keywords": [],
        "tableOfContents": "auto",
        "hideFromSearch": false
      },
      "content_preview": "Pinned tabs are a powerful feature that allows you to keep important notes always accessible and protected from accidental closure. When you pin a tab, it remains open and its content cannot be change...",
      "searchable_content": "\nPinned Tabs\n\nPinned tabs are a powerful feature that allows you to keep important notes always accessible and protected from accidental closure. When you pin a tab, it remains open and its content cannot be changed, making it perfect for reference materials, frequently accessed notes, or important documentation.\n\nWhat are Pinned Tabs?\n\nPinned tabs are special tabs that:\n- Cannot be closed accidentally - Protected from closure via close button, keyboard shortcuts, or bulk close operations\n- Cannot have their content changed - The note loaded in a pinned tab stays locked\n- Cannot be dragged - Pinned tabs stay in their position\n- Persist across sessions - Pinned tabs remain pinned when you reload the application\n- Have visual indicators - Shows a pin icon and hides the close button\n\nHow to Pin a Tab\n\nThere are two ways to pin a tab:\n\n1. Using the Context Menu\n1. Right-click on any tab\n2. Select \"Pin Tab\" from the context menu\n3. The tab will now show a pin icon (\ud83d\udccc) instead of a close button\n\n2. Using Keyboard Shortcut\n- Press Alt + P while the tab is active\n- The tab will be instantly pinned\n\nHow to Unpin a Tab\n\nTo unpin a tab and return it to normal:\n\n1. Using the Context Menu\n1. Right-click on the pinned tab\n2. Select \"Unpin Tab\" from the context menu\n3. The close button will reappear\n\n2. Using Keyboard Shortcut\n- Press Alt + P while the pinned tab is active\n- The tab will be unpinned\n\nPinned Tab Protection\n\nPinned tabs are protected in several ways:\n\n1. Close Protection\n- Individual close - Clicking close button or middle-click shows a warning\n- Close All Tabs - Pinned tabs remain open\n- Close Other Tabs - Pinned tabs are not affected\n- Keyboard shortcuts - Protected from Ctrl+W or similar shortcuts\n\n2. Content Protection\n- Navigation blocked - Clicking links in the sidebar won't change pinned tab content\n- Search results - Opening search results won't affect pinned tabs\n- URL navigation - Direct URL changes are blocked for pinned tabs\n- Split view - Pinned split view tabs maintain their content\n\n3. Visual Protection\n- No close button - Prevents accidental clicks\n- Pin icon - Clear visual indicator\n- Drag disabled - Cannot be accidentally moved\n\nUse Cases for Pinned Tabs\n\n1. Reference Documentation\nPin important reference materials that you need to consult frequently:\n- API documentation\n- Style guides\n- Configuration references\n- Cheat sheets\n\n2. Task Lists\nKeep your daily todo list or project tasks always visible:\n- Daily agenda\n- Project milestones\n- Sprint backlogs\n- Meeting notes\n\n3. Quick Access Notes\nPin frequently accessed notes for instant access:\n- Contact lists\n- Important links\n- Credentials (if stored securely)\n- Template documents\n\n4. Split View Reference\nUse pinned tabs in split view for side-by-side reference:\n- Pin documentation on one side\n- Work on implementation on the other\n- Compare versions or translations\n- Review guidelines while writing\n\nBest Practices\n\n1. Pin sparingly - Only pin tabs you truly need to keep open\n2. Use descriptive titles - Make sure pinned tabs have clear, identifiable titles\n3. Organize pinned tabs - Keep pinned tabs grouped at the beginning\n4. Review regularly - Unpin tabs that are no longer needed\n5. Combine with split view - Pin reference material in split view for maximum productivity\n\nKeyboard Shortcuts Summary\n\n| Action | Shortcut |\n|--------|----------|\n| Pin/Unpin Tab | Alt + P |\n| Switch Between Tabs | Alt + 1-9 |\n| Navigate Tabs | Alt + PageUp/PageDown |\n\nTips and Tricks\n\n- Quick Reference: Pin your most important documentation or notes for instant access\n- Protected Workspace: Pin tabs containing work-in-progress to prevent accidental closure\n- Session Persistence: Pinned tabs survive browser refreshes and application restarts\n- Visual Organization: Pinned tabs always appear first, making them easy to locate\n- Split View Power: Combine pinned tabs with split view for a powerful reference setup\n\nRelated Features\n\n- [[Tab Management]] - Learn about all tab features\n- [[Split View]] - Use pinned tabs with split view\n- [[Keyboard Shortcuts]] - Master all keyboard shortcuts\n- [[Session Management|Session Persistence]] - Understand how tabs are saved\n\nTroubleshooting\n\nQ: I can't close a pinned tab\nA: That's by design! Unpin the tab first using Alt+P or the context menu.\n\nQ: My pinned tab content changed\nA: This shouldn't happen. If it does, please report it as a bug.\n\nQ: Can I pin the split view tab?\nA: Yes! This keeps your split view layout protected from accidental closure.\n\nQ: How many tabs can I pin?\nA: There's no limit, but for usability, we recommend pinning only essential tabs.",
      "code_blocks_count": 0
    },
    {
      "path": "/notes/tutorials/features/drag-and-drop.md",
      "context": "tutorials",
      "metadata": {
        "title": "Drag and Drop",
        "tags": [
          "navigation",
          "tabs",
          "productivity",
          "ui"
        ],
        "created": "2025-01-23",
        "author": "NotesWiki Team",
        "description": "Master drag and drop functionality for efficient tab and note management",
        "updated": "2025-01-23",
        "category": null,
        "status": null,
        "aliases": [],
        "related": [],
        "dependencies": [],
        "keywords": [],
        "tableOfContents": "auto",
        "hideFromSearch": false
      },
      "content_preview": "NotesWiki includes intuitive drag and drop functionality that makes organizing your workspace effortless. You can reorder tabs, open notes in specific locations, and manage your workspace with simple ...",
      "searchable_content": "\nDrag and Drop\n\nNotesWiki includes intuitive drag and drop functionality that makes organizing your workspace effortless. You can reorder tabs, open notes in specific locations, and manage your workspace with simple mouse gestures.\n\nTab Reordering\n\nThe most common use of drag and drop is reordering your tabs to organize your workspace.\n\nHow to Reorder Tabs\n\n1. Click and hold on any tab (except pinned tabs)\n2. Drag the tab left or right to your desired position\n3. Look for the visual indicator - a blue line shows where the tab will be placed\n4. Release the mouse button to drop the tab in its new position\n\nVisual Feedback\n\nWhen dragging tabs, you'll see:\n- Dragging state - The tab being dragged becomes slightly transparent\n- Drop indicator - A blue vertical line shows exactly where the tab will be placed\n- Hover effects - Other tabs respond as you drag over them\n\nTab Reordering Rules\n\n- Regular tabs can be freely reordered\n- Pinned tabs cannot be dragged (they stay in place)\n- Tabs maintain their state when reordered (content, scroll position, etc.)\n- Changes persist across sessions\n\nDrag and Drop from File Tree\n\nWhen split view is enabled, you can drag notes from the file tree directly into split panes.\n\nHow to Use Split View Drag and Drop\n\n1. Enable split view using the split view button or Ctrl + /\n2. Locate a note in the file tree\n3. Drag the note from the file tree\n4. Drop it onto either the left or right pane\n5. The note will open in that specific pane\n\nSplit View Rules\n\n- Only works when split view is active\n- Cannot drop onto pinned panes\n- Visual indicators show which pane will receive the note\n- Maintains existing pane content until drop is completed\n\nBest Practices\n\n1. Organize by Workflow\n- Keep related tabs together\n- Place frequently accessed tabs at the beginning\n- Group tabs by project or context\n\n2. Use with Pinned Tabs\n- Pin important tabs first\n- Organize regular tabs around pinned ones\n- Pinned tabs serve as anchors for your layout\n\n3. Combine with Keyboard Shortcuts\n- Use Alt + 1-9 to quickly jump to reordered tabs\n- Reorder tabs to match number key access patterns\n- Place most important tabs in positions 1-3\n\nAdvanced Tips\n\nQuick Reorganization\n1. Close unnecessary tabs first\n2. Pin reference tabs\n3. Drag remaining tabs into logical order\n4. Use split view for side-by-side work\n\nWorkflow Patterns\n\nResearch Pattern:\n- Pin main research topic\n- Arrange source tabs in reading order\n- Keep notes tab at the end\n\nDevelopment Pattern:\n- Pin documentation\n- Order: specs \u2192 implementation \u2192 tests\n- Keep reference materials together\n\nWriting Pattern:\n- Pin outline or structure\n- Arrange research tabs chronologically\n- Keep draft at a consistent position\n\nLimitations\n\nWhat You Cannot Drag\n- Pinned tabs - These are locked in position\n- System tabs - Special tabs like split view when pinned\n- Between windows - Drag and drop only works within the same window\n\nBrowser Compatibility\n- Works in all modern browsers\n- Touch devices may have limited support\n- Some browsers may show different visual feedback\n\nAccessibility\n\nKeyboard Alternatives\nIf you cannot use drag and drop:\n- Use the tab context menu to close and reopen tabs in desired order\n- Utilize numbered shortcuts (Alt + 1-9) for quick access\n- Pin important tabs to keep them accessible\n\nVisual Indicators\n- High contrast drop indicators\n- Clear hover states\n- Smooth animations for better tracking\n\nTroubleshooting\n\nQ: I can't drag a tab\nA: Check if the tab is pinned. Pinned tabs cannot be dragged.\n\nQ: Drag and drop isn't working\nA: Try refreshing the page. Ensure JavaScript is enabled.\n\nQ: The tab jumped to the wrong position\nA: Wait for the drop indicator to appear before releasing.\n\nQ: Can I drag multiple tabs?\nA: No, only one tab can be dragged at a time.\n\nRelated Features\n\n- [[Tab Management]] - Complete guide to working with tabs\n- [[Pinned Tabs]] - Learn about tab pinning\n- [[Split View]] - Use drag and drop with split view\n- [[Keyboard Shortcuts]] - Keyboard alternatives to drag and drop\n\nPro Tips\n\n1. Muscle Memory: Develop consistent tab arrangements for different workflows\n2. Visual Grouping: Use drag and drop to create visual separations between tab groups\n3. Quick Access: Place frequently used tabs in easy-to-reach positions\n4. Cleanup Sessions: Periodically reorganize tabs to maintain efficiency\n5. Split View Power: Master dragging notes to split panes for research workflows",
      "code_blocks_count": 0
    },
    {
      "path": "/notes/tutorials/features/typography-fonts.md",
      "context": "tutorials",
      "metadata": {
        "title": "Typography and Fonts",
        "tags": [
          "customization",
          "readability",
          "accessibility",
          "fonts"
        ],
        "created": "2025-01-23",
        "author": "NotesWiki Team",
        "description": "Customize typography and fonts for optimal reading experience",
        "updated": "2025-01-23",
        "category": null,
        "status": null,
        "aliases": [],
        "related": [],
        "dependencies": [],
        "keywords": [],
        "tableOfContents": "auto",
        "hideFromSearch": false
      },
      "content_preview": "NotesWiki provides comprehensive typography controls to ensure a comfortable reading experience. Whether you prefer larger text for easier reading, specific font families for different content types, ...",
      "searchable_content": "\nTypography and Fonts\n\nNotesWiki provides comprehensive typography controls to ensure a comfortable reading experience. Whether you prefer larger text for easier reading, specific font families for different content types, or custom styling for your workspace, you have complete control over how text appears.\n\nFont Size Options\n\nAdjust the overall text size to match your preferences and screen setup.\n\nAvailable Sizes\n\n1. Small - Compact text for maximum content density\n2. Normal - Default size, balanced for most users\n3. Large - Increased readability, comfortable for extended reading\n4. Extra Large - Maximum size for accessibility needs\n\nHow to Change Font Size\n\n1. Click the Settings button (\u2699\ufe0f) or press Ctrl + ,\n2. Navigate to the General tab\n3. Find the Font Size dropdown\n4. Select your preferred size\n5. Changes apply immediately\n\nFont Size Effects\n\nChanging font size affects:\n- Body text in notes\n- Navigation sidebar text\n- UI elements and buttons\n- Table content\n- List items\n- Note: Code blocks maintain separate sizing for consistency\n\nFont Family Selection\n\nChoose from multiple font families to match your reading preferences.\n\nAvailable Font Families\n\n1. System (Default)\n- Uses your operating system's default font\n- Windows: Segoe UI\n- macOS: SF Pro Display\n- Linux: System default (often Ubuntu or DejaVu)\n- Best for native feel and performance\n\n2. Sans-serif\n- Clean, modern fonts without decorative strokes\n- Excellent for screen reading\n- High legibility at all sizes\n- Recommended for general use\n\n3. Serif\n- Traditional fonts with decorative strokes\n- Better for long-form reading\n- Creates a more formal appearance\n- Good for documentation or articles\n\n4. Monospace\n- Fixed-width characters\n- Each character occupies the same width\n- Ideal for technical content\n- Makes tables and lists align perfectly\n\n5. Code (JetBrains Mono)\n- Premium monospace font designed for programming\n- Includes ligatures for common code symbols\n- Enhanced readability for technical content\n- Pre-installed with NotesWiki\n\nHow to Change Font Family\n\n1. Open Settings (\u2699\ufe0f)\n2. Go to General tab\n3. Select from the Font Family dropdown\n4. Preview changes in real-time\n5. Click Save to apply\n\nCode Block Typography\n\nCode blocks have separate typography controls for optimal syntax readability.\n\nCode-Specific Features\n\n- Independent font size - Code maintains readable size regardless of body text\n- JetBrains Mono - Professional coding font with ligatures\n- Line numbers - Optional, toggleable in settings\n- Word wrap - Enable/disable based on preference\n- Syntax highlighting - Color-coded for 100+ languages\n\nCode Typography Settings\n\nIn Settings \u2192 Editor:\n- Show Line Numbers - Toggle line numbers in code blocks\n- Enable Word Wrap - Wrap long lines vs. horizontal scroll\n- Default Language - Set default syntax highlighting\n\nAdvanced Typography\n\nContent Width\n\nControl how wide your content appears:\n\n1. Narrow (65 characters)\n   - Optimal line length for reading\n   - Reduces eye movement\n   - Best for articles and documentation\n\n2. Normal (80 characters)\n   - Balanced width\n   - Default setting\n   - Works well for most content\n\n3. Wide (100 characters)\n   - More content visible\n   - Good for technical documentation\n   - Reduces vertical scrolling\n\n4. Full\n   - Uses entire available width\n   - Best for tables and wide content\n   - Maximum information density\n\nLine Height and Spacing\n\nWhile not directly configurable, NotesWiki automatically adjusts:\n- Line height based on font size\n- Paragraph spacing for readability\n- Heading margins for clear hierarchy\n- List indentation for structure\n\nTypography Best Practices\n\nFor Reading\n\n1. Long articles: Use Serif font with Normal or Large size\n2. Quick reference: Sans-serif with Normal size\n3. Extended sessions: Large size with Narrow width\n4. Dark themes: Consider increasing font size slightly\n\nFor Different Content Types\n\nTechnical Documentation:\n- Font: Monospace or Code\n- Size: Normal\n- Width: Wide or Full\n\nPersonal Notes:\n- Font: Sans-serif\n- Size: Your preference\n- Width: Normal\n\nAcademic Writing:\n- Font: Serif\n- Size: Normal or Large\n- Width: Narrow\n\nCode-Heavy Content:\n- Font: Code (JetBrains Mono)\n- Size: Normal\n- Enable line numbers\n\nAccessibility Considerations\n\nFor Visual Comfort\n\n1. Low vision: Use Extra Large size\n2. Eye strain: Try Large size with Narrow width\n3. Dyslexia: Sans-serif fonts often help\n4. Light sensitivity: Combine with dark themes\n\nHigh Contrast Tips\n\n- Larger font sizes work better with high contrast themes\n- Sans-serif fonts provide clearer character shapes\n- Narrow width reduces line tracking difficulty\n\nTheme and Typography Interaction\n\nDifferent themes work better with different typography settings:\n\nDark Themes\n- Slightly larger font size improves readability\n- Sans-serif fonts reduce character blur\n- Consider increasing content width\n\nLight Themes\n- Normal font sizes work well\n- Both serif and sans-serif are readable\n- Narrow width enhances focus\n\nSpecial Effect Themes\n- May require font size adjustment\n- Test readability with your chosen settings\n- Some decorative themes work better with specific fonts\n\nTroubleshooting\n\nQ: Fonts look blurry\nA: Try switching to System font or adjusting your browser's zoom level\n\nQ: JetBrains Mono isn't loading\nA: The font loads automatically. Try refreshing the page.\n\nQ: Changes aren't applying\nA: Click Save in settings and refresh if needed\n\nQ: Text is too small/large after theme change\nA: Some themes may affect perceived size. Adjust font size to compensate.\n\nTips for Optimal Reading\n\n1. Test different combinations - Try various font/size/width combinations\n2. Consider your screen - Larger screens may benefit from larger fonts\n3. Time of day matters - Use larger fonts when tired\n4. Match your content - Technical content may need different settings\n5. Regular breaks - Even with perfect typography, take eye breaks\n\nRelated Features\n\n- [[Themes]] - Combine typography with theme selection\n- [[Settings Customization]] - Explore all customization options\n- [[Content Width|Focus Mode]] - Control content presentation\n- [[Custom CSS]] - Advanced typography customization\n- [[Accessibility|Visual Accessibility]] - More accessibility options",
      "code_blocks_count": 0
    },
    {
      "path": "/notes/tutorials/features/tag-filtering.md",
      "context": "tutorials",
      "metadata": {
        "title": "Tag Filtering",
        "tags": [
          "search",
          "organization",
          "filtering",
          "tags",
          "navigation"
        ],
        "created": "2025-01-23",
        "author": "NotesWiki Team",
        "description": "Master the powerful tag filtering system to quickly find related content",
        "updated": "2025-01-23",
        "category": null,
        "status": null,
        "aliases": [],
        "related": [],
        "dependencies": [],
        "keywords": [],
        "tableOfContents": "auto",
        "hideFromSearch": false
      },
      "content_preview": "Tag filtering is a powerful way to quickly narrow down your notes to specific topics or categories. Unlike text search, tag filtering lets you browse and combine tags visually, making it perfect for e...",
      "searchable_content": "\nTag Filtering\n\nTag filtering is a powerful way to quickly narrow down your notes to specific topics or categories. Unlike text search, tag filtering lets you browse and combine tags visually, making it perfect for exploring related content or finding notes by category.\n\nOpening the Tag Filter\n\nAccess the tag filter in two ways:\n\n1. Keyboard Shortcut: Press Ctrl + F\n2. Tag Filter Button: Click the tag icon (\ud83c\udff7\ufe0f) in the header\n\nThis opens the visual tag filter modal showing all available tags.\n\nUnderstanding the Tag Filter Interface\n\nTag Display\n- Tag badges show each tag with its note count\n- Color coding indicates tag state:\n  - Normal (gray) - Available for selection\n  - Selected (blue) - Included in filter\n  - Excluded (red) - Explicitly excluded from results\n\nTag Search\n- Search box at the top to quickly find specific tags\n- Type to filter the tag list in real-time\n- Useful when you have many tags\n\nFilter Information\n- Active filter count shows number of selected tags\n- Results preview indicates how many notes match\n- Filter mode shows AND/OR logic (if applicable)\n\nBasic Tag Selection\n\nIncluding Tags (OR Logic)\n\n1. Click any tag to include it in your filter\n2. Tag turns blue indicating selection\n3. Results show notes with ANY of the selected tags\n4. Click additional tags to expand results\n\nExample: Selecting \"javascript\" and \"tutorial\" shows all notes tagged with either.\n\nExcluding Tags\n\n1. Right-click any tag to exclude it\n2. Tag turns red indicating exclusion\n3. Results hide notes with that tag\n4. Useful for filtering out unwanted content\n\nAlternative: Hold Ctrl while clicking to exclude\n\nExample: Select \"tutorial\" but exclude \"advanced\" to find beginner tutorials.\n\nAdvanced Filtering Techniques\n\nCombining Includes and Excludes\n\nCreate precise filters by combining both:\n\n1. Include tags for topics you want\n2. Exclude tags for content to avoid\n3. Results show included tags minus excluded ones\n\nExample Use Case:\n- Include: \"python\", \"tutorial\"\n- Exclude: \"deprecated\", \"draft\"\n- Result: Current Python tutorials only\n\nMulti-Tag Workflows\n\nResearch Workflow:\n1. Include all relevant topic tags\n2. Exclude \"archived\" or \"outdated\"\n3. Browse filtered results\n\nProject Organization:\n1. Include your project tag\n2. Include status tags like \"active\" or \"todo\"\n3. Exclude \"completed\" if focusing on current work\n\nTag Filter Controls\n\nClear Filters\n- Clear All button removes all tag selections\n- Resets to show all notes\n- Keyboard: Escape also clears and closes\n\nApply Filter\n- Apply button activates the filter\n- Updates the note list immediately\n- Filter remains active until cleared\n\nVisual Indicators\n- Badge numbers show note count per tag\n- Highlighted tags show current selection\n- Strikethrough on excluded tags (in some themes)\n\nSearch Operators vs Tag Filter\n\nWhen to Use Tag Filter\n\nUse tag filtering when you want to:\n- Browse by category without specific keywords\n- Combine multiple topics visually\n- Exclude categories of content\n- Explore available tags in your wiki\n\nWhen to Use Search\n\nUse text search (Ctrl + K) when you:\n- Know specific keywords\n- Need full-text search\n- Want to combine text and tag queries\n- Need advanced operators\n\nCombining Both\n\nPower user tip: Use search with tag operators:\n\ntag:javascript tag:tutorial -tag:advanced react\n\nThis searches for \"react\" in JavaScript tutorials, excluding advanced ones.\n\nPractical Examples\n\n1. Finding Learning Resources\n\nInclude: tutorial, guide, howto\nExclude: advanced, reference\n\n\n2. Project Management\n\nInclude: project-x, active\nExclude: completed, archived\n\n\n3. Knowledge Areas\n\nInclude: programming, web-dev\nExclude: deprecated, outdated\n\n\n4. Time-Based Filtering\n\nInclude: 2024, current\nExclude: archived, historical\n\n\nTag Organization Best Practices\n\nHierarchical Tagging\nConsider using prefixes for organization:\n- project-website\n- project-mobile\n- status-active\n- status-completed\n- type-tutorial\n- type-reference\n\nConsistent Naming\n- Use lowercase for consistency\n- Use hyphens for multi-word tags\n- Avoid special characters\n- Keep tags concise but descriptive\n\nTag Categories\nOrganize tags by purpose:\n- Topics: javascript, python, docker\n- Types: tutorial, reference, snippet\n- Status: draft, review, published\n- Projects: project-a, project-b\n- Dates: 2024, q1-2024\n\nPerformance Tips\n\nWith Many Tags\n- Use the search box to quickly find tags\n- Organize tags with consistent prefixes\n- Regular cleanup of unused tags\n- Consider tag hierarchies\n\nLarge Note Collections\n- Start with broad categories\n- Progressively narrow with excludes\n- Save common filter combinations\n- Use search for very specific queries\n\nKeyboard Shortcuts\n\n| Action | Shortcut |\n|--------|----------|\n| Open Tag Filter | Ctrl + F |\n| Clear and Close | Escape |\n| Toggle Tag | Click |\n| Exclude Tag | Right-click or Ctrl + Click |\n\nRelated Features\n\n- [[Search Guide]] - Full-text search and operators\n- [[Bookmarks]] - Save frequently accessed notes\n- [[Context Filtering]] - Filter by folders\n- [[Recent Files & Bookmarks|Recent Files]] - Quick access to recent work\n\nTips and Tricks\n\n1. Quick Exclude: Right-click is fastest for exclusions\n2. Bulk Select: Click multiple tags rapidly without waiting\n3. Preview Results: Watch the count update as you select\n4. Escape to Reset: Quick way to start over\n5. Combine Methods: Use both tag filter and search for precision\n\nCommon Issues\n\nQ: No tags appear in the filter\nA: Ensure your notes have tags in their frontmatter\n\nQ: Filter isn't applying\nA: Click the Apply button after making selections\n\nQ: Too many tags to browse\nA: Use the search box to filter the tag list\n\nQ: Can't see excluded tags clearly\nA: Some themes show exclusions better than others tag:javascript tag:tutorial -tag:advanced react Include: tutorial, guide, howto\nExclude: advanced, reference Include: project-x, active\nExclude: completed, archived Include: programming, web-dev\nExclude: deprecated, outdated Include: 2024, current\nExclude: archived, historical",
      "code_blocks_count": 5
    },
    {
      "path": "/notes/tutorials/features/custom-css.md",
      "context": "tutorials",
      "metadata": {
        "title": "Custom CSS",
        "tags": [
          "customization",
          "advanced",
          "styling",
          "css",
          "themes"
        ],
        "created": "2025-01-23",
        "author": "NotesWiki Team",
        "description": "Customize NotesWiki's appearance with your own CSS styles",
        "updated": "2025-01-23",
        "category": null,
        "status": null,
        "aliases": [],
        "related": [],
        "dependencies": [],
        "keywords": [],
        "tableOfContents": "auto",
        "hideFromSearch": false
      },
      "content_preview": "Custom CSS allows you to personalize NotesWiki beyond the built-in themes and settings. Whether you want to tweak a few colors, adjust spacing, or create an entirely unique look, custom CSS gives you ...",
      "searchable_content": "\nCustom CSS\n\nCustom CSS allows you to personalize NotesWiki beyond the built-in themes and settings. Whether you want to tweak a few colors, adjust spacing, or create an entirely unique look, custom CSS gives you complete control over the visual appearance.\n\nAccessing Custom CSS\n\n1. Open Settings (\u2699\ufe0f) or press Ctrl + ,\n2. Navigate to the Advanced tab\n3. Find the Custom CSS section\n4. Enter your CSS in the text editor\n5. Click Save to apply changes\n\nChanges take effect immediately without needing to refresh.\n\nCSS Variables\n\nNotesWiki uses CSS custom properties (variables) for theming. You can override any of these:\n\nCore Color Variables\ncss\n:root {\n  / Backgrounds /\n  --bg-primary: #1a1a1a;\n  --bg-secondary: #252525;\n  --bg-sidebar: #1e1e1e;\n  \n  / Text Colors /\n  --text-primary: #ffffff;\n  --text-secondary: #cccccc;\n  --text-muted: #999999;\n  \n  / Accent Colors /\n  --accent-primary: #007acc;\n  --accent-secondary: #0098ff;\n  --accent-error: #ff6b6b;\n  --accent-warning: #ffa500;\n  --accent-success: #4caf50;\n}\n\n\nCommon Customizations\n\n1. Change Accent Color\ncss\n:root {\n  --accent-primary: #ff6b6b;\n  --accent-secondary: #ff8787;\n  --link-color: #ff6b6b;\n}\n\n\n2. Adjust Spacing\ncss\n:root {\n  --spacing-xs: 0.5rem;\n  --spacing-sm: 1rem;\n  --spacing-md: 1.5rem;\n  --spacing-lg: 2rem;\n}\n\n\n3. Modify Fonts\ncss\n:root {\n  --font-family: 'Georgia', serif;\n  --font-mono: 'Fira Code', monospace;\n}\n\n\nComponent Styling\n\nNavigation Sidebar\ncss\n/ Wider sidebar /\n.sidebar {\n  width: 300px !important;\n}\n\n/ Custom folder colors /\n.folder-name {\n  color: #ffa500;\n}\n\n/ Highlight active file /\n.tree-item.active {\n  background-color: rgba(255, 255, 255, 0.1);\n  font-weight: bold;\n}\n\n\nTabs\ncss\n/ Rounded tabs /\n.tab {\n  border-radius: 8px 8px 0 0;\n  margin: 0 2px;\n}\n\n/ Colorful pinned tabs /\n.tab.pinned {\n  background-color: #ff6b6b;\n}\n\n/ Tab hover effect /\n.tab:hover {\n  transform: translateY(-2px);\n  transition: transform 0.2s;\n}\n\n\nContent Area\ncss\n/ Custom heading styles /\n.content h1 {\n  border-bottom: 3px solid var(--accent-primary);\n  padding-bottom: 0.5rem;\n}\n\n/ Styled blockquotes /\nblockquote {\n  border-left: 4px solid #ffa500;\n  background-color: rgba(255, 165, 0, 0.1);\n  font-style: italic;\n}\n\n/ Code block enhancements /\npre {\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.3);\n  border-radius: 8px;\n}\n\n\nAdvanced Customizations\n\nCustom Callouts\ncss\n/ Create a custom callout type /\n.callout-custom {\n  background-color: #e3f2fd;\n  border-color: #2196f3;\n  color: #0d47a1;\n}\n\n.callout-custom .callout-icon::before {\n  content: \"\ud83d\udca1\";\n}\n\n\nAnimation Effects\ncss\n/ Smooth transitions /\n {\n  transition: background-color 0.3s ease;\n}\n\n/ Animated links /\na {\n  position: relative;\n  text-decoration: none;\n}\n\na::after {\n  content: '';\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 0;\n  height: 2px;\n  background-color: var(--accent-primary);\n  transition: width 0.3s;\n}\n\na:hover::after {\n  width: 100%;\n}\n\n\nFocus Mode Enhancements\ncss\n/ Ultra-focused reading mode /\nbody.focus-mode .content {\n  max-width: 650px;\n  font-size: 1.2em;\n  line-height: 1.8;\n}\n\nbody.focus-mode {\n  background-color: #fafafa;\n}\n\n\nTheme Overrides\n\nOverride specific theme elements while keeping the base theme:\n\ncss\n/ Override theme colors while keeping theme structure /\n[data-theme=\"ayu-mirage\"] {\n  --bg-primary: #1f2430;\n  --accent-primary: #ffcc66;\n}\n\n/ Conditional styling based on theme /\n[data-theme=\"dark\"] .content {\n  text-shadow: 0 0 2px rgba(0, 0, 0, 0.5);\n}\n\n\nResponsive Customizations\n\ncss\n/ Mobile-specific styles /\n@media (max-width: 768px) {\n  .sidebar {\n    width: 100% !important;\n  }\n  \n  .content {\n    padding: 1rem !important;\n  }\n}\n\n/ Large screen optimizations /\n@media (min-width: 1400px) {\n  .content {\n    max-width: 1200px;\n  }\n}\n\n\nBest Practices\n\n1. Use CSS Variables\ncss\n/ Good - uses variables /\n.custom-element {\n  color: var(--text-primary);\n  background: var(--bg-secondary);\n}\n\n/ Avoid - hardcoded colors /\n.custom-element {\n  color: #ffffff;\n  background: #252525;\n}\n\n\n2. Maintain Specificity\ncss\n/ Use specific selectors /\n.sidebar .tree-item.active {\n  / styles /\n}\n\n/ Avoid !important when possible /\n.tree-item {\n  color: red !important; / Try to avoid /\n}\n\n\n3. Test Across Themes\nAlways test your custom CSS with multiple themes:\n- Light themes\n- Dark themes\n- High contrast themes\n\nCommon Use Cases\n\n1. Brand Colors\ncss\n:root {\n  --accent-primary: #your-brand-color;\n  --accent-secondary: #your-secondary-color;\n}\n\n\n2. Improved Readability\ncss\n.content {\n  font-size: 18px;\n  line-height: 1.7;\n  letter-spacing: 0.02em;\n}\n\n\n3. Custom Syntax Highlighting\ncss\n/ Override Prism.js theme colors /\n.token.keyword {\n  color: #ff79c6;\n}\n\n.token.string {\n  color: #f1fa8c;\n}\n\n\n4. Hide Elements\ncss\n/ Hide elements you don't use /\n.pomodoro-timer {\n  display: none;\n}\n\n/ Hide breadcrumbs /\n.breadcrumb {\n  display: none;\n}\n\n\nDebugging Tips\n\n1. Use Browser DevTools\n- Right-click \u2192 Inspect Element\n- Test CSS changes live\n- Copy working styles to custom CSS\n\n2. Check Specificity\nIf styles aren't applying:\ncss\n/ Increase specificity /\nbody .content h1 {\n  / styles /\n}\n\n/ Or use !important as last resort /\n.element {\n  color: red !important;\n}\n\n\n3. Validate CSS\nEnsure your CSS is valid:\n- No missing semicolons\n- Proper bracket matching\n- Valid property names\n\nSafety and Performance\n\nDo's\n- \u2705 Override CSS variables when possible\n- \u2705 Test with multiple themes\n- \u2705 Keep custom CSS organized\n- \u2705 Comment complex sections\n- \u2705 Back up your custom CSS\n\nDon'ts\n- \u274c Don't hide critical UI elements\n- \u274c Avoid breaking layouts with position changes\n- \u274c Don't use excessive animations\n- \u274c Avoid very large CSS files\n\nExamples Gallery\n\nMinimal Writer Theme\ncss\n/ Clean, distraction-free writing /\n:root {\n  --bg-primary: #fafafa;\n  --text-primary: #333;\n  --accent-primary: #333;\n}\n\n.sidebar { width: 200px; }\n.header { border-bottom: none; }\n.content { max-width: 650px; }\n\n\nNeon Glow Effect\ncss\n/ Cyberpunk-style glow /\n.tab.active {\n  box-shadow: 0 0 20px var(--accent-primary);\n}\n\nh1, h2 {\n  text-shadow: 0 0 10px currentColor;\n}\n\n\nPaper Notebook Style\ncss\n/ Lined paper effect /\n.content {\n  background-image: repeating-linear-gradient(\n    transparent,\n    transparent 1.5rem,\n    #e0e0e0 1.5rem,\n    #e0e0e0 calc(1.5rem + 1px)\n  );\n  line-height: 1.5rem;\n}\n\n\nRelated Features\n\n- [[Themes]] - Built-in theme system\n- [[Typography and Fonts|Typography]] - Font customization\n- [[Settings Customization]] - Other customization options\n- [[Focus Mode]] - Distraction-free writing\n- [[Print Mode|Print Styles]] - Custom print styling\n\nSharing Custom CSS\n\nShare your custom CSS with others:\n1. Copy your CSS from settings\n2. Save to a .css file\n3. Share via GitHub Gist or similar\n4. Others can paste into their custom CSS\n\nRemember: Custom CSS is stored locally and needs to be manually backed up! :root {\n  /* Backgrounds */\n  --bg-primary: #1a1a1a;\n  --bg-secondary: #252525;\n  --bg-sidebar: #1e1e1e;\n  \n  /* Text Colors */\n  --text-primary: #ffffff;\n  --text-secondary: #cccccc;\n  --text-muted: #999999;\n  \n  /* Accent Colors */\n  --accent-primary: #007acc;\n  --accent-secondary: #0098ff;\n  --accent-error: #ff6b6b;\n  --accent-warning: #ffa500;\n  --accent-success: #4caf50;\n} :root {\n  --accent-primary: #ff6b6b;\n  --accent-secondary: #ff8787;\n  --link-color: #ff6b6b;\n} :root {\n  --spacing-xs: 0.5rem;\n  --spacing-sm: 1rem;\n  --spacing-md: 1.5rem;\n  --spacing-lg: 2rem;\n} :root {\n  --font-family: 'Georgia', serif;\n  --font-mono: 'Fira Code', monospace;\n} /* Wider sidebar */\n.sidebar {\n  width: 300px !important;\n}\n\n/* Custom folder colors */\n.folder-name {\n  color: #ffa500;\n}\n\n/* Highlight active file */\n.tree-item.active {\n  background-color: rgba(255, 255, 255, 0.1);\n  font-weight: bold;\n} /* Rounded tabs */\n.tab {\n  border-radius: 8px 8px 0 0;\n  margin: 0 2px;\n}\n\n/* Colorful pinned tabs */\n.tab.pinned {\n  background-color: #ff6b6b;\n}\n\n/* Tab hover effect */\n.tab:hover {\n  transform: translateY(-2px);\n  transition: transform 0.2s;\n} /* Custom heading styles */\n.content h1 {\n  border-bottom: 3px solid var(--accent-primary);\n  padding-bottom: 0.5rem;\n}\n\n/* Styled blockquotes */\nblockquote {\n  border-left: 4px solid #ffa500;\n  background-color: rgba(255, 165, 0, 0.1);\n  font-style: italic;\n}\n\n/* Code block enhancements */\npre {\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.3);\n  border-radius: 8px;\n} /* Create a custom callout type */\n.callout-custom {\n  background-color: #e3f2fd;\n  border-color: #2196f3;\n  color: #0d47a1;\n}\n\n.callout-custom .callout-icon::before {\n  content: \"\ud83d\udca1\";\n} /* Smooth transitions */\n* {\n  transition: background-color 0.3s ease;\n}\n\n/* Animated links */\na {\n  position: relative;\n  text-decoration: none;\n}\n\na::after {\n  content: '';\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 0;\n  height: 2px;\n  background-color: var(--accent-primary);\n  transition: width 0.3s;\n}\n\na:hover::after {\n  width: 100%;\n} /* Ultra-focused reading mode */\nbody.focus-mode .content {\n  max-width: 650px;\n  font-size: 1.2em;\n  line-height: 1.8;\n}\n\nbody.focus-mode {\n  background-color: #fafafa;\n} /* Override theme colors while keeping theme structure */\n[data-theme=\"ayu-mirage\"] {\n  --bg-primary: #1f2430;\n  --accent-primary: #ffcc66;\n}\n\n/* Conditional styling based on theme */\n[data-theme*=\"dark\"] .content {\n  text-shadow: 0 0 2px rgba(0, 0, 0, 0.5);\n} /* Mobile-specific styles */\n@media (max-width: 768px) {\n  .sidebar {\n    width: 100% !important;\n  }\n  \n  .content {\n    padding: 1rem !important;\n  }\n}\n\n/* Large screen optimizations */\n@media (min-width: 1400px) {\n  .content {\n    max-width: 1200px;\n  }\n} /* Good - uses variables */\n.custom-element {\n  color: var(--text-primary);\n  background: var(--bg-secondary);\n}\n\n/* Avoid - hardcoded colors */\n.custom-element {\n  color: #ffffff;\n  background: #252525;\n} /* Use specific selectors */\n.sidebar .tree-item.active {\n  /* styles */\n}\n\n/* Avoid !important when possible */\n.tree-item {\n  color: red !important; /* Try to avoid */\n} :root {\n  --accent-primary: #your-brand-color;\n  --accent-secondary: #your-secondary-color;\n} .content {\n  font-size: 18px;\n  line-height: 1.7;\n  letter-spacing: 0.02em;\n} /* Override Prism.js theme colors */\n.token.keyword {\n  color: #ff79c6;\n}\n\n.token.string {\n  color: #f1fa8c;\n} /* Hide elements you don't use */\n.pomodoro-timer {\n  display: none;\n}\n\n/* Hide breadcrumbs */\n.breadcrumb {\n  display: none;\n} /* Increase specificity */\nbody .content h1 {\n  /* styles */\n}\n\n/* Or use !important as last resort */\n.element {\n  color: red !important;\n} /* Clean, distraction-free writing */\n:root {\n  --bg-primary: #fafafa;\n  --text-primary: #333;\n  --accent-primary: #333;\n}\n\n.sidebar { width: 200px; }\n.header { border-bottom: none; }\n.content { max-width: 650px; } /* Cyberpunk-style glow */\n.tab.active {\n  box-shadow: 0 0 20px var(--accent-primary);\n}\n\nh1, h2 {\n  text-shadow: 0 0 10px currentColor;\n} /* Lined paper effect */\n.content {\n  background-image: repeating-linear-gradient(\n    transparent,\n    transparent 1.5rem,\n    #e0e0e0 1.5rem,\n    #e0e0e0 calc(1.5rem + 1px)\n  );\n  line-height: 1.5rem;\n}",
      "code_blocks_count": 22
    },
    {
      "path": "/notes/tutorials/features/auto-theme.md",
      "context": "tutorials",
      "metadata": {
        "title": "Auto Theme Switching",
        "tags": [
          "themes",
          "customization",
          "accessibility",
          "automation"
        ],
        "created": "2025-01-23",
        "author": "NotesWiki Team",
        "description": "Automatically switch themes based on your system's dark mode preference",
        "updated": "2025-01-23",
        "category": null,
        "status": null,
        "aliases": [],
        "related": [],
        "dependencies": [],
        "keywords": [],
        "tableOfContents": "auto",
        "hideFromSearch": false
      },
      "content_preview": "Auto theme switching allows NotesWiki to automatically adapt its appearance based on your operating system's dark mode setting. This creates a seamless experience that matches your system-wide prefere...",
      "searchable_content": "\nAuto Theme Switching\n\nAuto theme switching allows NotesWiki to automatically adapt its appearance based on your operating system's dark mode setting. This creates a seamless experience that matches your system-wide preference and can help reduce eye strain by using appropriate themes for different times of day.\n\nHow Auto Theme Works\n\nWhen enabled, auto theme:\n1. Detects your system preference - Checks if your OS is in light or dark mode\n2. Applies matching theme - Switches between your chosen light and dark themes\n3. Updates in real-time - Changes immediately when you toggle system dark mode\n4. Remembers your choices - Saves your preferred themes for each mode\n\nEnabling Auto Theme\n\nQuick Setup\n\n1. Open Settings (\u2699\ufe0f) or press Ctrl + ,\n2. Go to the General tab\n3. Toggle \"Auto Theme\" to ON\n4. NotesWiki immediately switches to match your system\n\nChoosing Auto Theme Pairs\n\nWhen auto theme is enabled:\n1. Light Mode Theme - Select your preferred theme for light mode\n2. Dark Mode Theme - Select your preferred theme for dark mode\n3. Both selections are saved automatically\n\nSetting Up Theme Pairs\n\nRecommended Combinations\n\nClassic Pairing:\n- Light: GitHub Light\n- Dark: GitHub Dark\n\nHigh Contrast:\n- Light: Light\n- Dark: Dracula\n\nSoft Colors:\n- Light: Soft Era\n- Dark: Tokyo Night\n\nMaterial Design:\n- Light: Material\n- Dark: Material Ocean\n\nSolarized:\n- Light: Solarized Light\n- Dark: Solarized Dark\n\nCreating Custom Pairs\n\nConsider these factors when pairing themes:\n1. Contrast levels - Similar contrast ratios for consistency\n2. Color temperature - Warm light with warm dark, etc.\n3. Style consistency - Matching design philosophies\n4. Personal preference - What feels comfortable to your eyes\n\nSystem Requirements\n\nSupported Operating Systems\n\nAuto theme works with:\n- Windows 10/11 - Uses system dark mode setting\n- macOS 10.14+ - Mojave and later with dark mode\n- Linux - Most desktop environments with dark mode\n- iOS/iPadOS - Follows system appearance\n- Android - Follows system theme (Android 10+)\n\nBrowser Support\n\nAll modern browsers support auto theme:\n- Chrome/Edge 76+\n- Firefox 67+\n- Safari 12.1+\n- Opera 63+\n\nManual Override\n\nTemporary Override\n\nWhile auto theme is enabled:\n1. Manually select any theme from the theme gallery\n2. This creates a temporary override\n3. Auto theme resumes when system preference changes\n\nDisable Auto Theme\n\nTo return to manual theme control:\n1. Open Settings\n2. Toggle \"Auto Theme\" to OFF\n3. Your current theme remains active\n4. Manual theme selection resumes\n\nAdvanced Configuration\n\nTime-Based Switching\n\nWhile NotesWiki doesn't directly support time-based switching, you can achieve this by:\n\n1. Using OS scheduling:\n   - Windows: Night Light settings\n   - macOS: Night Shift or shortcuts\n   - Linux: Redshift or similar tools\n\n2. Browser extensions:\n   - Dark Reader with scheduling\n   - Auto Dark Mode extensions\n\nMultiple Theme Rotation\n\nFor more than two themes:\n1. Set up OS automation to change dark mode multiple times\n2. Adjust auto theme pairs between changes\n3. Create a rotation schedule\n\nBenefits of Auto Theme\n\nEye Strain Reduction\n- Bright themes during day reduce squinting\n- Dark themes at night reduce blue light\n- Automatic switching prevents jarring transitions\n\nBattery Savings\n- Dark themes on OLED displays save battery\n- Automatic optimization based on time of day\n- No manual intervention needed\n\nConsistency\n- Matches your system-wide appearance\n- Unified experience across applications\n- Reduces cognitive load from mismatched themes\n\nTroubleshooting\n\nAuto Theme Not Working\n\nCheck system settings:\n1. Ensure OS dark mode is properly configured\n2. Try toggling system dark mode to test\n3. Check browser permissions for theme detection\n\nBrowser-specific fixes:\n- Chrome: Check chrome://flags/#enable-force-dark\n- Firefox: Verify ui.systemUsesDarkTheme in about:config\n- Safari: Ensure \"Use dark appearance\" is allowed for websites\n\nTheme Not Switching\n\n1. Refresh the page - Sometimes needed after enabling\n2. Check theme compatibility - Ensure both themes load properly\n3. Clear cache - Browser cache might interfere\n4. Check console - Look for error messages\n\nIncorrect Theme Applied\n\nIf the wrong theme appears:\n1. Toggle auto theme off and on\n2. Manually select correct themes for each mode\n3. Test by switching OS dark mode\n\nBest Practices\n\nChoosing Complementary Themes\n\nSimilar Style:\n- Keep visual consistency between modes\n- Example: Ayu Light \u2194 Ayu Mirage\n\nContrast Consideration:\n- Don't pair extreme light with extreme dark\n- Gradual transitions are easier on eyes\n\nColor Temperature:\n- Warm light themes with warm dark themes\n- Cool light themes with cool dark themes\n\nTesting Your Setup\n\n1. Toggle OS dark mode several times\n2. Check readability in both modes\n3. Test at different times of day\n4. Verify all UI elements remain visible\n\nIntegration with Other Features\n\nFocus Mode\n- Auto theme works seamlessly with focus mode\n- Each theme maintains its focus mode styling\n- Consistent experience across modes\n\nCustom CSS\n- Custom CSS applies to both themes\n- Use theme-specific selectors for different styles:\ncss\n[data-theme=\"github-light\"] {\n  / Light mode specific styles /\n}\n\n[data-theme=\"github-dark\"] {\n  / Dark mode specific styles /\n}\n\n\nTypography Settings\n- Font settings remain consistent\n- Consider slightly larger fonts for dark themes\n- Test readability in both modes\n\nTips and Tricks\n\n1. Schedule OS dark mode for sunrise/sunset\n2. Use high contrast pairs if you have vision concerns\n3. Test themes at different times before committing\n4. Create custom CSS for smooth transitions\n5. Match terminal themes for development work\n\nCommon Use Cases\n\nDaily Work Schedule\n- Light theme: 9 AM - 6 PM\n- Dark theme: 6 PM - 9 AM\n- Automatic switching via OS\n\nPresentation Mode\n- Temporarily disable for consistent appearance\n- Re-enable after presentation\n- Prevents unexpected theme changes\n\nShared Devices\n- Auto theme adapts to each user's preference\n- No manual switching needed\n- Consistent experience for all users\n\nRelated Features\n\n- [[Themes]] - Explore all available themes\n- [[Custom CSS]] - Customize themes further\n- [[Settings Customization]] - Other settings options\n- [[Typography and Fonts|Typography]] - Adjust for each theme\n- [[Focus Mode]] - Combine with auto theme\n\nFuture Possibilities\n\nWhile not currently available, potential enhancements could include:\n- Multiple theme schedules\n- Location-based switching\n- Custom switching conditions\n- Theme transition animations\n\nFor now, auto theme provides reliable, system-integrated theme switching that covers most use cases effectively. [data-theme=\"github-light\"] {\n  /* Light mode specific styles */\n}\n\n[data-theme=\"github-dark\"] {\n  /* Dark mode specific styles */\n}",
      "code_blocks_count": 1
    },
    {
      "path": "/notes/tutorials/features/external-links.md",
      "context": "tutorials",
      "metadata": {
        "title": "External Links",
        "tags": [
          "navigation",
          "links",
          "settings",
          "security"
        ],
        "created": "2025-01-23",
        "author": "NotesWiki Team",
        "description": "Control how external links behave in your wiki",
        "updated": "2025-01-23",
        "category": null,
        "status": null,
        "aliases": [],
        "related": [],
        "dependencies": [],
        "keywords": [],
        "tableOfContents": "auto",
        "hideFromSearch": false
      },
      "content_preview": "External links in NotesWiki are handled intelligently to maintain your workflow while providing access to outside resources. You can control whether external links open in new tabs, display warnings, ...",
      "searchable_content": "\nExternal Links\n\nExternal links in NotesWiki are handled intelligently to maintain your workflow while providing access to outside resources. You can control whether external links open in new tabs, display warnings, or follow other behaviors based on your preferences.\n\nWhat Are External Links?\n\nExternal links are any links that point outside your wiki:\n- Web URLs: https://example.com\n- Email links: mailto:user@example.com\n- Protocol links: ftp://, file://, etc.\n- Absolute URLs: Any link starting with http:// or https://\n\nInternal links include:\n- Wiki links: [[Page Name]]\n- Relative paths: ../notes/example.md\n- Hash links: #section-name\n\nDefault Behavior\n\nBy default, external links:\n1. Open in new tabs - Preserves your wiki context\n2. Show visual indicators - Small icon after the link\n3. Include security attributes - rel=\"noopener noreferrer\"\n4. Maintain your position - Wiki stays on current page\n\nConfiguring External Links\n\nSettings Options\n\nNavigate to Settings \u2192 Navigation to find:\n\n1. Open in New Tab\n   - Enabled (default): Links open in new browser tabs\n   - Disabled: Links replace current wiki tab\n\n2. Show External Link Icon\n   - Enabled: Shows \u2197\ufe0f icon after external links\n   - Disabled: No visual indicator\n\n3. Warn Before Opening\n   - Enabled: Shows confirmation before opening\n   - Disabled: Opens immediately on click\n\nLink Behavior Patterns\n\nStandard External Link\nmarkdown\nCheck out GitHub\n\n- Opens in new tab (if enabled)\n- Shows external icon\n- Maintains current wiki page\n\nEmail Links\nmarkdown\nContact us at support@example.com\n\n- Opens default email client\n- No new tab needed\n- Works with web-based email\n\nProtocol Links\nmarkdown\nDownload via FTP\n\n- Handled by browser/OS\n- May prompt for application\n\nSecurity Considerations\n\nAutomatic Security\n\nAll external links automatically include:\nhtml\n<a href=\"https://example.com\" \n   target=\"blank\" \n   rel=\"noopener noreferrer\">\n\n\n- noopener: Prevents window.opener access\n- noreferrer: Hides referrer information\n- target=\"blank\": Opens in new tab\n\nWhy This Matters\n\n1. Privacy: Referrer hiding protects your wiki URL\n2. Security: Prevents external sites from controlling your wiki\n3. Performance: New tabs don't affect wiki performance\n\nVisual Indicators\n\nExternal Link Icons\n\nDefault styling shows:\n- \u2197\ufe0f or \ud83d\udd17 icon after external links\n- Different color (often accent color)\n- Subtle animation on hover\n\nCustom Styling\n\nUse custom CSS to modify appearance:\ncss\n/ Change external link color /\na[target=\"blank\"] {\n  color: #0066cc;\n}\n\n/ Custom external link icon /\na[target=\"blank\"]::after {\n  content: \" \u2197\";\n  font-size: 0.8em;\n  vertical-align: super;\n}\n\n/ Remove external link indicators /\na[target=\"blank\"]::after {\n  display: none;\n}\n\n\nBest Practices\n\nLink Text\n\nGood: Descriptive link text\nmarkdown\nLearn more in the Python documentation\n\n\nAvoid: Generic link text\nmarkdown\nClick here for more info\n\n\nLink Organization\n\n1. Group related links in resource sections\n2. Use link lists for multiple external resources\n3. Add descriptions for context\n4. Check links regularly for validity\n\nPerformance Tips\n\n- Avoid too many external links per page\n- Consider creating dedicated reference pages\n- Use descriptive titles to reduce clicks\n\nCommon Use Cases\n\nDocumentation References\nmarkdown\nReferences\n- MDN Web Docs\n- Stack Overflow\n- Can I Use\n\n\nAttribution Links\nmarkdown\n> \"Quote from article\" - Source\n\n\nTool Integration\nmarkdown\nEdit this diagram in draw.io\n\n\nAdvanced Configuration\n\nPer-Link Behavior\n\nOverride default behavior inline:\nmarkdown\n<!-- Force same tab -->\n<a href=\"https://example.com\" target=\"self\">Same tab link</a>\n\n<!-- Force new tab -->\n<a href=\"https://example.com\" target=\"blank\">New tab link</a>\n\n\nJavaScript Handling\n\nFor dynamic links in custom scripts:\njavascript\n// Add external link attributes\ndocument.querySelectorAll('a[href^=\"http\"]').forEach(link => {\n  if (!link.hostname.includes(window.location.hostname)) {\n    link.target = 'blank';\n    link.rel = 'noopener noreferrer';\n  }\n});\n\n\nKeyboard Shortcuts\n\nWorking with external links via keyboard:\n\n| Action | Shortcut |\n|--------|----------|\n| Open link | Enter |\n| Open in new tab | Ctrl/Cmd + Enter |\n| Open in new window | Shift + Enter |\n| Copy link address | Right-click \u2192 Copy link |\n\nTroubleshooting\n\nLinks Not Opening\n\nCheck browser settings:\n- Pop-up blocker may interfere\n- Browser security settings\n- Extension conflicts\n\nSolutions:\n1. Whitelist your wiki domain\n2. Disable aggressive ad blockers\n3. Check browser console for errors\n\nIcon Not Showing\n\nIf external link icons are missing:\n1. Check theme compatibility\n2. Verify settings are enabled\n3. Clear browser cache\n4. Check custom CSS conflicts\n\nSecurity Warnings\n\nSome browsers warn about:\n- Mixed content (HTTP links on HTTPS wiki)\n- Suspicious domains\n- Invalid certificates\n\nBest practice: Use HTTPS links when possible\n\nMobile Considerations\n\nTouch Behavior\n\nOn mobile devices:\n- Tap: Opens based on settings\n- Long press: Shows link menu\n- Two-finger tap: May open in new tab\n\nMobile Settings\n\nConsider different settings for mobile:\n- New tab behavior may vary\n- External apps may intercept links\n- Data usage considerations\n\nIntegration with Other Features\n\nSearch Results\n- External links in search are clearly marked\n- Settings apply to search result links\n- Preview shows domain for external links\n\nBookmarks\n- External links can be bookmarked\n- Bookmark indicator shows link type\n- Quick access to external resources\n\nSplit View\n- External links respect split view context\n- Can open external sites in split panes\n- Maintains internal/external separation\n\nPrivacy Tips\n\nHiding Referrer\nmarkdown\n<!-- No referrer for specific link -->\n<a href=\"https://example.com\" rel=\"noreferrer\">Private link</a>\n\n\nURL Shortening\n- Consider privacy implications\n- Use trusted shorteners only\n- Document original URLs\n\nTracking Parameters\n- Remove unnecessary UTM parameters\n- Clean URLs before sharing\n- Consider user privacy\n\nRelated Features\n\n- [[Wiki Links]] - Internal linking system\n- [[Navigation|Link Navigation]] - General navigation\n- [[Keyboard Shortcuts]] - Link keyboard controls\n- [[Custom CSS]] - Styling external links\n- [[Security|Privacy & Security]] - Security considerations Check out [GitHub](https://github.com) Contact us at [support@example.com](mailto:support@example.com) Download via [FTP](ftp://files.example.com) <a href=\"https://example.com\" \n   target=\"_blank\" \n   rel=\"noopener noreferrer\"> /* Change external link color */\na[target=\"_blank\"] {\n  color: #0066cc;\n}\n\n/* Custom external link icon */\na[target=\"_blank\"]::after {\n  content: \" \u2197\";\n  font-size: 0.8em;\n  vertical-align: super;\n}\n\n/* Remove external link indicators */\na[target=\"_blank\"]::after {\n  display: none;\n} Learn more in the [Python documentation](https://docs.python.org) Click [here](https://docs.python.org) for more info ## References\n- [MDN Web Docs](https://developer.mozilla.org)\n- [Stack Overflow](https://stackoverflow.com)\n- [Can I Use](https://caniuse.com) > \"Quote from article\" - [Source](https://example.com/article) Edit this diagram in [draw.io](https://app.diagrams.net) <!-- Force same tab -->\n<a href=\"https://example.com\" target=\"_self\">Same tab link</a>\n\n<!-- Force new tab -->\n<a href=\"https://example.com\" target=\"_blank\">New tab link</a> // Add external link attributes\ndocument.querySelectorAll('a[href^=\"http\"]').forEach(link => {\n  if (!link.hostname.includes(window.location.hostname)) {\n    link.target = '_blank';\n    link.rel = 'noopener noreferrer';\n  }\n}); <!-- No referrer for specific link -->\n<a href=\"https://example.com\" rel=\"noreferrer\">Private link</a>",
      "code_blocks_count": 13
    },
    {
      "path": "/notes/tutorials/features/print-mode.md",
      "context": "tutorials",
      "metadata": {
        "title": "Print Mode",
        "tags": [
          "export",
          "printing",
          "pdf",
          "documentation"
        ],
        "created": "2025-01-23",
        "author": "NotesWiki Team",
        "description": "Print your notes with optimized formatting and layout",
        "updated": "2025-01-23",
        "category": null,
        "status": null,
        "aliases": [],
        "related": [],
        "dependencies": [],
        "keywords": [],
        "tableOfContents": "auto",
        "hideFromSearch": false
      },
      "content_preview": "NotesWiki includes intelligent print styling that automatically optimizes your notes for printing or PDF export. When you print a note, unnecessary UI elements are hidden and the content is reformatte...",
      "searchable_content": "\nPrint Mode\n\nNotesWiki includes intelligent print styling that automatically optimizes your notes for printing or PDF export. When you print a note, unnecessary UI elements are hidden and the content is reformatted for optimal readability on paper.\n\nHow to Print\n\nQuick Print\n1. Keyboard shortcut: Press Ctrl + P (Windows/Linux) or Cmd + P (Mac)\n2. Browser menu: File \u2192 Print\n3. Right-click menu: Right-click \u2192 Print\n\nWhat Gets Printed\n\nWhen printing, NotesWiki automatically:\n- Shows: Note content, headings, text, images, tables, code blocks\n- Hides: Navigation sidebar, header bar, tabs, buttons, tooltips\n- Optimizes: Layout, margins, font sizes, page breaks\n\nPrint Optimization Features\n\nAutomatic Adjustments\n\n1. Clean Layout\n   - Removes all UI chrome\n   - Centers content on page\n   - Applies appropriate margins\n   - Uses print-friendly fonts\n\n2. Smart Page Breaks\n   - Avoids breaking inside paragraphs\n   - Keeps headings with content\n   - Prevents orphaned lines\n   - Maintains table integrity\n\n3. Image Handling\n   - Scales large images to fit\n   - Maintains aspect ratios\n   - Ensures images don't break across pages\n   - Converts to grayscale if needed\n\n4. Code Block Formatting\n   - Preserves syntax highlighting\n   - Maintains line numbers\n   - Wraps long lines\n   - Uses monospace fonts\n\nPrint Settings\n\nBrowser Print Dialog\n\nConfigure in your browser's print dialog:\n\n1. Layout\n   - Portrait or Landscape\n   - Fit to page width\n   - Scale percentage\n\n2. Paper\n   - Size (Letter, A4, etc.)\n   - Margins (Normal, Narrow, Custom)\n   - Headers and footers\n\n3. Options\n   - Background graphics\n   - Selection only\n   - Pages to print\n\nRecommended Settings\n\nFor Documents:\n- Paper: Letter/A4\n- Margins: Normal\n- Scale: 100%\n- Background: Off\n\nFor Code:\n- Orientation: Landscape\n- Margins: Narrow\n- Scale: Fit to width\n- Background: On (for syntax colors)\n\nAdvanced Print Styling\n\nCustom Print CSS\n\nAdd print-specific styles via Custom CSS:\n\ncss\n@media print {\n  / Custom page margins /\n  @page {\n    margin: 1in;\n    size: letter;\n  }\n  \n  / Force page breaks /\n  h1 {\n    page-break-before: always;\n  }\n  \n  / Prevent breaks /\n  pre, table {\n    page-break-inside: avoid;\n  }\n  \n  / Hide specific elements /\n  .no-print {\n    display: none !important;\n  }\n  \n  / Custom header /\n  body::before {\n    content: \"Confidential Document\";\n    position: fixed;\n    top: 0;\n    right: 0;\n    font-size: 12px;\n    color: #999;\n  }\n}\n\n\nPrint-Specific Classes\n\nUse these classes in your notes:\n\nmarkdown\n<div class=\"page-break\"></div>\n<!-- Forces a page break -->\n\n<div class=\"no-print\">\nThis content won't appear in print\n</div>\n\n<div class=\"print-only\" style=\"display:none;\">\nThis only appears when printing\n</div>\n\n\nCreating PDFs\n\nBrowser PDF Export\n\nMost browsers can save as PDF:\n\n1. Press Ctrl/Cmd + P\n2. Select \"Save as PDF\" as destination\n3. Configure options:\n   - Paper size\n   - Margins\n   - Background graphics\n4. Click Save\n\nPDF Best Practices\n\n1. Check preview before saving\n2. Test links - they remain clickable in PDFs\n3. Embed fonts for consistency\n4. Include backgrounds for code highlighting\n5. Set appropriate margins for binding\n\nPrint Layouts\n\nSingle Note\n\nPrinting the current note:\n- Content fills the page width\n- Automatic pagination\n- Headers create outline structure\n- Images inline with text\n\nMultiple Notes\n\nTo print multiple notes:\n1. Open each in separate tabs\n2. Use browser's \"Print all tabs\" if available\n3. Or create a combined document first\n\nTable of Contents\n\nLong documents automatically generate:\n- Page numbers for headings\n- Hierarchical structure\n- Works with PDF bookmarks\n\nSpecial Content Types\n\nTables\n- Tables maintain borders and shading\n- Large tables may rotate to landscape\n- Column widths adjust for paper\n- Headers repeat on new pages\n\nCode Blocks\ncss\n/ Code maintains formatting /\n@media print {\n  pre {\n    font-size: 10pt;\n    line-height: 1.2;\n  }\n}\n\n- Syntax highlighting preserved\n- Line numbers optional\n- Background shading configurable\n\nImages\n- High resolution maintained\n- Captions print below images\n- Large images scale down\n- SVGs remain vector\n\nCallouts\n> [!note]\n> Callouts maintain their styling and icons in print\n\n- Icons convert to unicode\n- Backgrounds print in grayscale\n- Borders remain visible\n\nTroubleshooting\n\nContent Cut Off\n\nIf content is cut off:\n1. Try landscape orientation\n2. Reduce scale to 90% or \"Fit\"\n3. Adjust margins to \"Narrow\"\n4. Check custom CSS for conflicts\n\nMissing Elements\n\nIf elements don't print:\n1. Check browser print preview\n2. Enable \"Background graphics\"\n3. Verify no display: none in print CSS\n4. Try different browser\n\nPoor Quality\n\nFor better print quality:\n1. Use PDF export instead of direct print\n2. Increase browser zoom before printing\n3. Use high-quality paper settings\n4. Enable \"Print backgrounds\"\n\nTips for Print-Friendly Notes\n\nStructure\n1. Use clear heading hierarchy\n2. Keep paragraphs concise\n3. Use lists for easy scanning\n4. Add page breaks before major sections\n\nFormatting\n1. Avoid relying on color alone\n2. Ensure sufficient contrast\n3. Use standard fonts\n4. Keep line lengths reasonable\n\nImages\n1. Use high-resolution images\n2. Add descriptive captions\n3. Position images inline\n4. Avoid floating layouts\n\nPlatform-Specific Notes\n\nWindows\n- Use \"Microsoft Print to PDF\"\n- Check printer preferences\n- Adjust ClearType for printing\n\nmacOS\n- Use Preview for PDF adjustments\n- Check ColorSync profiles\n- Use \"Save as PDF\" in print dialog\n\nLinux\n- Install CUPS-PDF for PDF printing\n- Check ghostscript settings\n- Use print preview extensively\n\nCommon Use Cases\n\nMeeting Notes\n- Print for offline reference\n- Share physical copies\n- Archive important decisions\n\nDocumentation\n- Create user manuals\n- Generate reference guides\n- Produce training materials\n\nCode Reviews\n- Print code with comments\n- Annotate physical copies\n- Share in meetings\n\nStudy Materials\n- Create physical study guides\n- Print for offline learning\n- Make annotatable copies\n\nRelated Features\n\n- [[Export|Export Options]] - Other export formats\n- [[Custom CSS]] - Advanced print styling\n- [[Typography and Fonts|Typography]] - Font considerations\n- [[Themes]] - Theme impact on printing\n- [[PDF Export|Creating PDFs]] - Dedicated PDF features\n\nPro Tips\n\n1. Preview First: Always check print preview\n2. Save Settings: Browsers remember print settings\n3. Test Prints: Do a test page first\n4. PDF Archive: Save PDFs for consistent output\n5. Print Styles: Develop custom print CSS for your needs @media print {\n  /* Custom page margins */\n  @page {\n    margin: 1in;\n    size: letter;\n  }\n  \n  /* Force page breaks */\n  h1 {\n    page-break-before: always;\n  }\n  \n  /* Prevent breaks */\n  pre, table {\n    page-break-inside: avoid;\n  }\n  \n  /* Hide specific elements */\n  .no-print {\n    display: none !important;\n  }\n  \n  /* Custom header */\n  body::before {\n    content: \"Confidential Document\";\n    position: fixed;\n    top: 0;\n    right: 0;\n    font-size: 12px;\n    color: #999;\n  }\n} <div class=\"page-break\"></div>\n<!-- Forces a page break -->\n\n<div class=\"no-print\">\nThis content won't appear in print\n</div>\n\n<div class=\"print-only\" style=\"display:none;\">\nThis only appears when printing\n</div> /* Code maintains formatting */\n@media print {\n  pre {\n    font-size: 10pt;\n    line-height: 1.2;\n  }\n}",
      "code_blocks_count": 3
    },
    {
      "path": "/notes/index.md",
      "context": null,
      "metadata": {
        "title": "Notes Wiki - Home",
        "tags": [
          "home",
          "index",
          "documentation"
        ],
        "created": "2025-01-18",
        "author": "Wiki Team",
        "description": "Your personal knowledge management system - start here!",
        "updated": null,
        "category": null,
        "status": null,
        "aliases": [],
        "related": [],
        "dependencies": [],
        "keywords": [],
        "tableOfContents": "auto",
        "hideFromSearch": false
      },
      "content_preview": "Your powerful, offline-first personal knowledge management system. Everything you need to organize, search, and access your notes efficiently.\n\n\n\nNew to Notes Wiki? Start here:\n1. [[tutorials/getting-...",
      "searchable_content": "\nWelcome to Notes Wiki \ud83c\udf89\n\nYour powerful, offline-first personal knowledge management system. Everything you need to organize, search, and access your notes efficiently.\n\n\ud83d\ude80 Quick Start\n\nNew to Notes Wiki? Start here:\n1. [[tutorials/getting-started/welcome|Welcome Guide]] - 5-minute introduction\n2. [[tutorials/getting-started/creating-notes|Creating Notes]] - Learn note structure and organization\n3. [[tutorials/features/search-guide|Search Guide]] - Master the powerful search system\n4. [[tutorials/features/keyboard-shortcuts|Keyboard Shortcuts]] - Speed up your workflow\n\n\ud83d\udcda Feature Tutorials\n\n\ud83d\udcdd Core Features\n- [[tutorials/features/tab-management|Tab Management]] - Multi-tab browsing system\n- [[tutorials/features/search-guide|Advanced Search]] - Powerful search with operators\n- [[tutorials/features/themes|Themes Gallery]] - 70 beautiful themes\n- [[tutorials/features/settings-customization|Settings & Customization]] - Make it yours\n\n\ud83e\udded Navigation & Organization  \n- [[tutorials/features/table-of-contents|Table of Contents]] - Auto-generated navigation\n- [[tutorials/features/wiki-links|Wiki-Style Links]] - Connect your notes\n- [[tutorials/features/bookmarks|Bookmarks]] - Save favorite notes\n- [[tutorials/features/recent-files-bookmarks|Recent Files & Pinning]] - Quick access to files\n- [[tutorials/features/context-filtering|Context Filtering]] - Organize by categories\n\n\ud83d\udcd6 Reading Experience\n- [[tutorials/features/focus-mode|Focus Mode]] - Distraction-free reading\n- [[tutorials/features/reading-progress|Reading Progress]] - Track your position\n- [[tutorials/features/in-note-search|In-Note Search]] - Find text within notes\n\n\ud83d\udcbb Content Creation\n- [[tutorials/features/code-blocks|Code Blocks]] - Syntax highlighting & features\n- [[tutorials/features/markdown-callouts|Markdown Callouts]] - Highlight important info\n- [[tutorials/features/images-media|Images & Media]] - Embed visual content\n\n\ud83d\udee0\ufe0f Productivity Tools\n- [[tutorials/features/pomodoro-timer|Pomodoro Timer]] - Built-in focus timer\n- [[tutorials/features/split-view|Split View]] - Work with multiple notes side-by-side\n- [[tutorials/features/sticky-notes|Sticky Notes]] - Floating mini-notes for quick thoughts\n- [[tutorials/features/keyboard-shortcuts|Keyboard Shortcuts]] - Complete shortcut guide\n\n\ud83d\ude80 Advanced Features\n\n- [[tutorials/advanced/combined-code-blocks|Combined Code Blocks]] - Auto-aggregate code from notes\n\n\ud83c\udfaf Common Workflows\n\n\ud83d\udcda Knowledge Management\n1. Create structured notes with frontmatter\n2. Organize with folders and tags\n3. Link related notes with wiki-links\n4. Search and filter as needed\n\n\ud83d\udc68\u200d\ud83d\udcbb Technical Documentation\n1. Use code blocks with syntax highlighting\n2. Create tutorials with combined code blocks\n3. Add callouts for important information\n4. Organize by project or technology\n\n\ud83d\udcdd Personal Notes\n1. Create daily journal entries\n2. Tag for easy retrieval\n3. Use bookmarks for frequent access\n4. Track reading progress on long notes\n\n\ud83d\udd27 Technical Information\n\nSystem Requirements\n- \u2705 Any modern web browser\n- \u2705 No installation required\n- \u2705 Works offline after first load\n- \u2705 No server dependencies\n\nBrowser Compatibility\n- Chrome 57+\n- Firefox 52+\n- Safari 10.1+\n- Edge 16+\n\nKey Technologies\n- Vanilla JavaScript (no framework dependencies)\n- Markdown rendering with marked.js\n- Syntax highlighting with Prism.js\n- Pure CSS themes\n\n\ud83d\udcca Feature Overview\n\n| Category | Features |\n|----------|----------|\n| Navigation | Tabs, Search, TOC, Wiki Links, Bookmarks |\n| Editing | Markdown, Code Blocks, Callouts, Frontmatter |\n| Customization | 50+ Themes, Settings, Keyboard Shortcuts |\n| Productivity | Focus Mode, Timer, Recent Files, Progress Tracking |\n| Organization | Tags, Contexts, Folders, Search Operators |\n\n\ud83c\udd98 Need Help?\n\n- Keyboard Help: Press ? anytime to see all shortcuts\n- Search Tips: Use \"quotes\" for exact phrases\n- Navigation: Ctrl+K for quick search\n- Settings: Ctrl+, to customize\n\n\ud83c\udf89 Tips for Success\n\n1. Start Simple: Create a few notes to get familiar\n2. Use Tags: They make finding notes much easier\n3. Link Notes: Build connections with wiki-links\n4. Customize: Find a theme and settings you love\n5. Keyboard Shortcuts: Learn a few to speed up\n\n---\n\nReady to start? Create your first note or explore the tutorials above. Welcome to your new knowledge management system!",
      "code_blocks_count": 0
    },
    {
      "path": "/notes/tutorials/getting-started/welcome.md",
      "context": "tutorials",
      "metadata": {
        "title": "Welcome to Notes Wiki",
        "tags": [
          "tutorial",
          "getting-started"
        ],
        "created": "2025-01-18",
        "author": "Wiki Team",
        "description": "Your comprehensive guide to getting started with Notes Wiki",
        "updated": null,
        "category": null,
        "status": null,
        "aliases": [],
        "related": [],
        "dependencies": [],
        "keywords": [],
        "tableOfContents": "auto",
        "hideFromSearch": false
      },
      "content_preview": "Welcome to your personal knowledge management system! This guide will help you get started with Notes Wiki in just a few minutes.\n\n\n\n\n\n1. Navigate Notes: Click on any note in the sidebar to open it\n2....",
      "searchable_content": "\nWelcome to Notes Wiki\n\nWelcome to your personal knowledge management system! This guide will help you get started with Notes Wiki in just a few minutes.\n\n\ud83d\ude80 Quick Start\n\nFirst Steps\n\n1. Navigate Notes: Click on any note in the sidebar to open it\n2. Search Everything: Press Ctrl+K or / to search across all notes\n3. Open Multiple Tabs: Middle-click or Ctrl+click notes to open in new tabs\n4. Switch Themes: Press Ctrl+, to open settings and choose from 70 themes\n\nEssential Features at a Glance\n\n- \ud83d\udcd1 Multi-tab browsing - Work with multiple notes simultaneously\n- \ud83d\udd0d Powerful search - Find anything instantly with advanced operators\n- \ud83c\udfa8 70 themes - Customize your reading experience\n- \ud83d\udcf1 Fully responsive - Works on desktop, tablet, and mobile\n- \ud83d\udd12 Privacy-first - Everything runs locally in your browser\n\n\ud83d\udcc2 Understanding the Interface\n\nSidebar Navigation\n- Contexts: Top-level folders that organize your notes (Personal, Technical, etc.)\n- File Tree: Expandable folders showing your note structure\n- Recent Files: Quick access to recently viewed notes\n- Filter by Tags: Click tags to filter the file tree\n\nMain Content Area\n- Tabs: Each open note appears as a tab (drag to reorder)\n- Note Content: The main reading area with full markdown support\n- Table of Contents: Auto-generated outline for easy navigation\n- Reading Progress: Track your position in longer notes\n\nHeader Actions\n- Search (Ctrl+K): Global search across all notes\n- Context Filter: Switch between note categories\n- Settings (Ctrl+,): Customize your experience\n\n\ud83c\udfaf Core Concepts\n\nNotes Are Markdown Files\nAll notes are written in Markdown with YAML frontmatter:\n\nyaml\n---\ntitle: My Note Title\ntags: [tag1, tag2]\nauthor: Your Name\ncreated: 2025-01-18\n---\n\nNote content starts here\n\n\nEverything Is Searchable\nThe search indexes:\n- Note titles and content\n- Code blocks\n- Tags and metadata\n- File paths\n\nOffline-First Design\nOnce loaded, Notes Wiki works completely offline. Your notes are stored as simple markdown files that you can edit with any text editor.\n\n\ud83d\ude80 Next Steps\n\nExplore these tutorials to master Notes Wiki:\n\n1. [[../features/search-guide|Master the Search]] - Learn advanced search techniques\n2. [[../features/tab-management|Tab Management]] - Work efficiently with multiple notes\n3. [[../features/keyboard-shortcuts|Keyboard Shortcuts]] - Speed up your workflow\n4. [[../features/themes|Themes Gallery]] - Customize your appearance\n\n\ud83d\udca1 Pro Tips\n\n- Press ? anytime to see all keyboard shortcuts\n- Press F to enter focus mode for distraction-free reading\n- Use Ctrl+F to search within the current note\n- Drag and drop tabs to reorder them\n- Right-click tabs for more options\n\n\ud83c\udd98 Getting Help\n\n- Keyboard Shortcuts: Press ? to see all available shortcuts\n- This Tutorial: Return here anytime by clicking \"Welcome\" in the tutorials\n- Report Issues: Found a bug? Report it on our GitHub page\n\n---\n\nReady to dive in? Start by exploring the features tutorials or just begin taking notes. Welcome to your new knowledge management system! \ud83c\udf89 ---\ntitle: My Note Title\ntags: [tag1, tag2]\nauthor: Your Name\ncreated: 2025-01-18\n---\n\n# Note content starts here",
      "code_blocks_count": 1
    },
    {
      "path": "/notes/tutorials/getting-started/creating-notes.md",
      "context": "tutorials",
      "metadata": {
        "title": "Creating and Organizing Notes",
        "tags": [
          "tutorial",
          "getting-started",
          "markdown",
          "frontmatter"
        ],
        "created": "2025-01-18",
        "author": "Wiki Team",
        "description": "Learn how to create, structure, and organize your notes effectively",
        "updated": null,
        "category": null,
        "status": null,
        "aliases": [],
        "related": [],
        "dependencies": [],
        "keywords": [],
        "tableOfContents": "auto",
        "hideFromSearch": false
      },
      "content_preview": "Learn how to create well-structured notes with proper metadata, organize them effectively, and make them searchable.\n\n\n\n\nEvery note consists of two parts:\n1. Frontmatter: Metadata in YAML format\n2. Co...",
      "searchable_content": "\nCreating and Organizing Notes\n\nLearn how to create well-structured notes with proper metadata, organize them effectively, and make them searchable.\n\n\ud83d\udcdd Note Structure\n\nBasic Anatomy\nEvery note consists of two parts:\n1. Frontmatter: Metadata in YAML format\n2. Content: Your actual note in Markdown\n\nExample Note\n\nmarkdown\n---\ntitle: My First Note\ntags: [personal, ideas]\nauthor: Your Name\ncreated: 2025-01-18\ndescription: A brief description for search results\n---\n\nMy First Note\n\nYour content starts here...\n\n\n\ud83d\udccb Frontmatter Explained\n\nRequired Fields\n\nTitle\nThe display name for your note:\nyaml\ntitle: JavaScript Array Methods\n\n\nRecommended Fields\n\nTags\nCategorize your notes for easy filtering:\nyaml\ntags: [javascript, programming, tutorial]\n\n\nAuthor\nTrack who created the note:\nyaml\nauthor: John Doe\n\n\nCreated Date\nWhen the note was first written:\nyaml\ncreated: 2025-01-18\n\n\nDescription\nBrief summary for search results:\nyaml\ndescription: Complete guide to JavaScript array methods with examples\n\n\nOptional Fields\n\nUpdated Date\nTrack last modification:\nyaml\nupdated: 2025-01-19\n\n\nCategory\nAdditional organization:\nyaml\ncategory: tutorials\n\n\nStatus\nTrack note completion:\nyaml\nstatus: draft  # or 'complete', 'review'\n\n\n\ud83d\udcc1 File Organization\n\nDirectory Structure\nOrganize notes in logical folders:\n\nnotes/\n\u251c\u2500\u2500 personal/\n\u2502   \u251c\u2500\u2500 journal/\n\u2502   \u2514\u2500\u2500 ideas/\n\u251c\u2500\u2500 work/\n\u2502   \u251c\u2500\u2500 projects/\n\u2502   \u2514\u2500\u2500 meetings/\n\u251c\u2500\u2500 learning/\n\u2502   \u251c\u2500\u2500 courses/\n\u2502   \u2514\u2500\u2500 books/\n\u2514\u2500\u2500 reference/\n    \u251c\u2500\u2500 code-snippets/\n    \u2514\u2500\u2500 cheatsheets/\n\n\nNaming Conventions\n\nFile Names\n- Use descriptive names: docker-deployment-guide.md\n- Avoid spaces: use hyphens or underscores\n- Keep lowercase for consistency\n- Include dates for time-sensitive notes: 2025-01-18-meeting-notes.md\n\nFolder Names\n- Short and descriptive\n- Use singular or plural consistently\n- Group related content logically\n\n\ud83c\udff7\ufe0f Effective Tagging\n\nTag Strategy\n\nHierarchical Tags\nCreate tag hierarchies:\nyaml\ntags: [programming, programming/javascript, programming/javascript/react]\n\n\nConsistent Naming\n- Choose singular or plural: book vs books\n- Use consistent separators: machine-learning vs machinelearning\n- Document your conventions\n\nCommon Tag Categories\n- Topic: javascript, docker, react\n- Type: tutorial, reference, journal\n- Status: draft, complete, needs-review\n- Project: project-x, client-y\n\n\ud83c\udfa8 Content Best Practices\n\nUse Markdown Features\n\nHeadings for Structure\nmarkdown\nMain Title\nSection\nSubsection\n\n\nLists for Organization\nmarkdown\n- Bullet points for unordered items\n1. Numbered lists for sequences\n   - Nested items with indentation\n\n\nCode Blocks with Language\nmarkdown\njavascript\nconst example = \"Always specify the language\";\n\n\n\nLinks and References\nmarkdown\nExternal Link\n[[Internal Wiki Link]]\n\n\n\ud83d\udd0d Making Notes Searchable\n\nOptimize for Search\n\nUse Descriptive Titles\n- \u2705 \"Docker Compose Multi-Container Setup\"\n- \u274c \"Docker Notes\"\n\nInclude Keywords\nAdd relevant terms in your content naturally\n\nWrite Clear Descriptions\nThe description field appears in search results\n\nTag Thoroughly\nMore tags = easier to find\n\n\ud83d\udca1 Organization Tips\n\nPersonal Knowledge Management\n\nDaily Notes\nyaml\ntitle: Daily Note - 2025-01-18\ntags: [journal, daily]\n\n\nProject Documentation\nyaml\ntitle: Project X - Architecture Overview\ntags: [project-x, architecture, documentation]\n\n\nLearning Notes\nyaml\ntitle: React Hooks - Study Notes\ntags: [learning, react, javascript, frontend]\n\n\nContext-Based Organization\n\nUse Contexts\nTop-level folders as contexts:\n- personal/ - Private notes\n- work/ - Professional content\n- reference/ - Quick lookup materials\n- learning/ - Educational content\n\n\ud83d\ude80 Workflow Examples\n\nMeeting Notes Template\nmarkdown\n---\ntitle: Team Meeting - 2025-01-18\ntags: [meeting, team, project-x]\nauthor: Your Name\ncreated: 2025-01-18\n---\n\nTeam Meeting - 2025-01-18\n\nAttendees\n- John Doe\n- Jane Smith\n\nAgenda\n1. Project updates\n2. Blockers\n3. Next steps\n\nNotes\n...\n\nAction Items\n- [ ] Task 1 - @John\n- [ ] Task 2 - @Jane\n\n\nTechnical Documentation\nmarkdown\n---\ntitle: API Authentication Guide\ntags: [api, authentication, documentation]\nauthor: Tech Team\ncreated: 2025-01-18\nupdated: 2025-01-19\nstatus: complete\n---\n\nAPI Authentication Guide\n\nOverview\n...\n\nImplementation\n...\n\n\n\ud83d\udd27 Building the Index\n\nAfter creating or modifying notes:\nbash\nnpm run build\n\n\nThis updates the search index with your new content.\n\n---\n\nWell-organized notes are the foundation of an effective knowledge management system. Start with good structure, and your future self will thank you! ---\ntitle: My First Note\ntags: [personal, ideas]\nauthor: Your Name\ncreated: 2025-01-18\ndescription: A brief description for search results\n---\n\n# My First Note\n\nYour content starts here... title: JavaScript Array Methods tags: [javascript, programming, tutorial] author: John Doe created: 2025-01-18 description: Complete guide to JavaScript array methods with examples updated: 2025-01-19 category: tutorials status: draft  # or 'complete', 'review' notes/\n\u251c\u2500\u2500 personal/\n\u2502   \u251c\u2500\u2500 journal/\n\u2502   \u2514\u2500\u2500 ideas/\n\u251c\u2500\u2500 work/\n\u2502   \u251c\u2500\u2500 projects/\n\u2502   \u2514\u2500\u2500 meetings/\n\u251c\u2500\u2500 learning/\n\u2502   \u251c\u2500\u2500 courses/\n\u2502   \u2514\u2500\u2500 books/\n\u2514\u2500\u2500 reference/\n    \u251c\u2500\u2500 code-snippets/\n    \u2514\u2500\u2500 cheatsheets/ tags: [programming, programming/javascript, programming/javascript/react] # Main Title\n## Section\n### Subsection - Bullet points for unordered items\n1. Numbered lists for sequences\n   - Nested items with indentation   [External Link](https://example.com)\n[[Internal Wiki Link]] title: Daily Note - 2025-01-18\ntags: [journal, daily] title: Project X - Architecture Overview\ntags: [project-x, architecture, documentation] title: React Hooks - Study Notes\ntags: [learning, react, javascript, frontend] ---\ntitle: Team Meeting - 2025-01-18\ntags: [meeting, team, project-x]\nauthor: Your Name\ncreated: 2025-01-18\n---\n\n# Team Meeting - 2025-01-18\n\n## Attendees\n- John Doe\n- Jane Smith\n\n## Agenda\n1. Project updates\n2. Blockers\n3. Next steps\n\n## Notes\n...\n\n## Action Items\n- [ ] Task 1 - @John\n- [ ] Task 2 - @Jane ---\ntitle: API Authentication Guide\ntags: [api, authentication, documentation]\nauthor: Tech Team\ncreated: 2025-01-18\nupdated: 2025-01-19\nstatus: complete\n---\n\n# API Authentication Guide\n\n## Overview\n...\n\n## Implementation\n... npm run build",
      "code_blocks_count": 22
    },
    {
      "path": "/notes/tutorials/features/table-of-contents.md",
      "context": "tutorials",
      "metadata": {
        "title": "Table of Contents Navigation",
        "tags": [
          "tutorial",
          "navigation",
          "toc"
        ],
        "created": "2025-01-18",
        "author": "Wiki Team",
        "description": "Learn how to use the automatic table of contents for easy navigation",
        "updated": null,
        "category": null,
        "status": null,
        "aliases": [],
        "related": [],
        "dependencies": [],
        "keywords": [],
        "tableOfContents": "auto",
        "hideFromSearch": false
      },
      "content_preview": "The Table of Contents (TOC) feature automatically generates an outline from your note's headings, making it easy to navigate long documents.\n\n\n\n\nWhen you open any note with multiple headings, a Table ...",
      "searchable_content": "\nTable of Contents Navigation\n\nThe Table of Contents (TOC) feature automatically generates an outline from your note's headings, making it easy to navigate long documents.\n\n\ud83c\udfaf How It Works\n\nAutomatic Generation\nWhen you open any note with multiple headings, a Table of Contents appears on the right side of the screen. It:\n- Extracts all headings (H1-H6) from your note\n- Creates a hierarchical, clickable outline\n- Updates automatically as you edit\n\nVisual Indicators\n- Active Section Highlighting: The current section you're reading is highlighted\n- Progress Tracking: A subtle indicator shows how far you've scrolled\n- Nested Structure: Sub-headings are indented to show document structure\n\n\ud83d\uddb1\ufe0f Using the Table of Contents\n\nClick to Navigate\nSimply click any heading in the TOC to jump directly to that section. The page scrolls smoothly to bring the section into view.\n\nCollapse and Expand\n- Click the collapse icon at the top to hide the TOC\n- Click again to expand it\n- Your preference is remembered\n\nAuto-Hide on Mobile\nOn smaller screens, the TOC automatically hides to save space. You can still access it by clicking the TOC button.\n\n\u2699\ufe0f Settings and Customization\n\nEnable/Disable TOC\n1. Open Settings (Ctrl+,)\n2. Find \"Show Table of Contents\"\n3. Toggle on/off as desired\n\nWhen TOC Appears\nThe Table of Contents only appears when:\n- The note has 2 or more headings\n- The setting is enabled\n- There's enough screen width (desktop/tablet)\n\n\ud83d\udcdd Writing TOC-Friendly Notes\n\nBest Practices\n1. Use Clear Headings: Make headings descriptive\n2. Maintain Hierarchy: Use proper heading levels (H1 \u2192 H2 \u2192 H3)\n3. Keep It Organized: Group related content under appropriate headings\n\nExample Structure\nmarkdown\nMain Title (H1)\n\nIntroduction (H2)\nContent here...\n\nMain Concepts (H2)\n\nConcept One (H3)\nExplanation...\n\nConcept Two (H3)\nMore details...\n\nConclusion (H2)\nFinal thoughts...\n\n\n\ud83c\udfa8 Visual Styling\n\nThe TOC adapts to your chosen theme:\n- Light themes: Clean borders and subtle backgrounds\n- Dark themes: Appropriate contrast for easy reading\n- Accent colors: Match your theme's primary color\n\n\ud83d\udca1 Pro Tips\n\n1. Keyboard Navigation: After clicking a TOC item, use arrow keys to read\n2. Quick Collapse: Double-click the TOC header to toggle\n3. Smooth Scrolling: All navigation uses smooth scrolling for better UX\n4. Reading Position: The TOC remembers your position even after collapse\n\n\ud83d\udd27 Troubleshooting\n\nTOC Not Showing?\n- Check if the note has at least 2 headings\n- Verify TOC is enabled in settings\n- Try refreshing the page (F5)\n\nIncorrect Highlighting?\n- This can happen with very short sections\n- The highlight updates as you scroll\n- Click a heading to ensure proper positioning\n\n---\n\nThe Table of Contents is one of the most useful features for navigating long documents. Try it on this very page to see it in action! # Main Title (H1)\n\n## Introduction (H2)\nContent here...\n\n## Main Concepts (H2)\n\n### Concept One (H3)\nExplanation...\n\n### Concept Two (H3)\nMore details...\n\n## Conclusion (H2)\nFinal thoughts...",
      "code_blocks_count": 1
    },
    {
      "path": "/notes/tutorials/features/wiki-links.md",
      "context": "tutorials",
      "metadata": {
        "title": "Wiki-Style Links",
        "tags": [
          "tutorial",
          "navigation",
          "links"
        ],
        "created": "2025-01-18",
        "author": "Wiki Team",
        "description": "Create connections between notes using wiki-style [[Note Title]] links",
        "updated": null,
        "category": null,
        "status": null,
        "aliases": [],
        "related": [],
        "dependencies": [],
        "keywords": [],
        "tableOfContents": "auto",
        "hideFromSearch": false
      },
      "content_preview": "Connect your notes together using wiki-style links with the [[Note Title]] syntax. This powerful feature helps you build a interconnected knowledge base.\n\n\n\n\nSimply wrap any note title in double squar...",
      "searchable_content": "\nWiki-Style Links\n\nConnect your notes together using wiki-style links with the [[Note Title]] syntax. This powerful feature helps you build a interconnected knowledge base.\n\n\ud83d\udd17 Basic Usage\n\nCreating Links\nSimply wrap any note title in double square brackets:\nmarkdown\nCheck out my thoughts in [[Daily Journal]]\n\n\nThis creates a clickable link to the \"Daily Journal\" note.\n\nHow It Works\n1. Type [[ to start a link\n2. Add the note title\n3. Close with ]]\n4. The link is automatically created when the note renders\n\n\ud83d\udcdd Link Formats\n\nBy Title\nThe most common format - just use the note's title:\nmarkdown\nSee also [[JavaScript Tips]] for more examples\n\n\nCase Insensitive\nLinks are case-insensitive for convenience:\n- [[javascript tips]] \n- [[JavaScript Tips]]\n- [[JAVASCRIPT TIPS]]\n\nAll link to the same note!\n\nPartial Matches\nThe system tries to find the best match:\n- [[React Guide]] might match \"React Development Guide\"\n- [[Python]] might match \"Python Programming Basics\"\n\n\ud83c\udfaf Advanced Features\n\nLink Behavior\n- Click: Opens in current tab\n- Ctrl+Click: Opens in new tab\n- Middle-Click: Opens in new tab\n\nVisual Indicators\n- Valid Links: Appear in your theme's link color\n- Hover Effect: Shows the full note path on hover\n- Active Styling: Links to the current note are highlighted\n\n\ud83d\udca1 Best Practices\n\nMeaningful Titles\nGive your notes clear, unique titles:\n- \u2705 \"Docker Deployment Guide\"\n- \u274c \"Guide\" or \"Notes\"\n\nCreate Link Networks\nBuild connections between related topics:\nmarkdown\nAfter learning [[JavaScript Basics]], move on to [[Advanced JavaScript Patterns]] and explore [[React Framework Guide]].\n\n\nUse for Navigation\nCreate index pages with links:\nmarkdown\nMy Learning Path\n1. [[HTML Fundamentals]]\n2. [[CSS Styling Guide]]\n3. [[JavaScript Essentials]]\n4. [[React Getting Started]]\n\n\n\ud83d\udd0d Finding Linked Notes\n\nSearch Integration\nSearch for notes that link to a specific note:\n\nSearch: \"[[JavaScript Tips]]\"\n\n\nOrphaned Notes\nNotes without any incoming links can be found through search to help you connect them.\n\n\u26a1 Workflow Tips\n\nQuick Note Creation\n1. Write [[New Topic]] in your current note\n2. Click the link (it will show as valid even if the note doesn't exist yet)\n3. Create the new note with that exact title\n\nRefactoring Links\nWhen renaming a note:\n1. Update the note's title in frontmatter\n2. Search for the old [[Title]] across all notes\n3. Update links to use the new title\n\n\ud83c\udfa8 Styling\n\nWiki links inherit your theme's link styling:\n- Color: Matches theme's primary link color\n- Hover: Standard hover effects apply\n- Visited: May show different color if theme supports it\n\n\ud83d\udd27 Troubleshooting\n\nLink Not Working?\n1. Check the exact note title (view the note's frontmatter)\n2. Ensure the note exists in the index\n3. Try rebuilding the index: npm run build\n\nMultiple Matches?\nIf multiple notes have similar titles:\n- The system picks the best match\n- Use more specific titles to avoid ambiguity\n\n---\n\nWiki-style links are essential for building a connected knowledge base. Start linking your notes today to create a powerful personal wiki! Check out my thoughts in [[Daily Journal]] See also [[JavaScript Tips]] for more examples After learning [[JavaScript Basics]], move on to [[Advanced JavaScript Patterns]] and explore [[React Framework Guide]]. ## My Learning Path\n1. [[HTML Fundamentals]]\n2. [[CSS Styling Guide]]\n3. [[JavaScript Essentials]]\n4. [[React Getting Started]] Search: \"[[JavaScript Tips]]\"",
      "code_blocks_count": 5
    },
    {
      "path": "/notes/tutorials/features/focus-mode.md",
      "context": "tutorials",
      "metadata": {
        "title": "Focus Mode - Distraction-Free Reading",
        "tags": [
          "tutorial",
          "reading",
          "focus"
        ],
        "created": "2025-01-18",
        "author": "Wiki Team",
        "description": "Enter focus mode for an immersive, distraction-free reading experience",
        "updated": null,
        "category": null,
        "status": null,
        "aliases": [],
        "related": [],
        "dependencies": [],
        "keywords": [],
        "tableOfContents": "auto",
        "hideFromSearch": false
      },
      "content_preview": "Focus mode transforms your reading experience by hiding all UI elements except the content, creating a clean, distraction-free environment.\n\n\n\n\nPress the F key anytime to toggle focus mode on/off.\n\n\n-...",
      "searchable_content": "\nFocus Mode - Distraction-Free Reading\n\nFocus mode transforms your reading experience by hiding all UI elements except the content, creating a clean, distraction-free environment.\n\n\ud83c\udfaf Entering Focus Mode\n\nQuick Toggle\nPress the F key anytime to toggle focus mode on/off.\n\nAlternative Methods\n- Click the focus mode button (eye icon) in the note header\n- Use the button in the toolbar\n\n\ud83d\udc41\ufe0f What Focus Mode Does\n\nHidden Elements\nWhen activated, focus mode hides:\n- \u2713 Sidebar navigation\n- \u2713 Tab bar\n- \u2713 Header controls\n- \u2713 Floating buttons\n- \u2713 All UI chrome\n\nWhat Remains\nOnly the essential reading elements stay visible:\n- \ud83d\udcc4 Note content (centered and optimized)\n- \ud83d\udcd1 Table of contents (if enabled)\n- \ud83d\udcca Reading progress bar\n- \ud83d\udd0d In-note search (when activated)\n\n\ud83c\udfa8 Visual Experience\n\nContent Optimization\n- Centered Layout: Content is perfectly centered on screen\n- Optimal Width: Maintains readable line length\n- Clean Background: Removes all visual distractions\n- Smooth Transition: Elegant fade animation when toggling\n\nTheme Integration\nFocus mode respects your chosen theme:\n- Background colors remain consistent\n- Text contrast is preserved\n- Code blocks maintain syntax highlighting\n\n\u26a1 Workflow Integration\n\nReading Long Documents\nPerfect for:\n- \ud83d\udcda Reading lengthy tutorials\n- \ud83d\udcd6 Studying documentation\n- \u270d\ufe0f Reviewing your notes\n- \ud83c\udfaf Deep concentration sessions\n\nQuick Access Features\nEven in focus mode, you can:\n- Press Ctrl+F to search within the note\n- Use Esc or F to exit focus mode\n- Scroll normally with mouse or keyboard\n- Click links to navigate\n\n\u2328\ufe0f Keyboard Shortcuts\n\n| Action | Shortcut |\n|--------|----------|\n| Toggle Focus Mode | F |\n| Exit Focus Mode | Esc or F |\n| Search in Note | Ctrl+F |\n| Scroll | Arrow keys / Space |\n\n\ud83c\udfaf Best Use Cases\n\nDeep Reading Sessions\n- Minimize distractions during study\n- Focus on complex technical documentation\n- Immerse yourself in long-form content\n\nNote Review\n- Review your notes without UI distractions\n- Prepare for presentations\n- Proofread and edit content\n\nLearning Mode\n- Follow tutorials step-by-step\n- Read programming guides\n- Study reference materials\n\n\u2699\ufe0f Customization\n\nSettings Integration\nFocus mode respects your settings:\n- Font size: Maintains your preferred size\n- Line height: Keeps your spacing preferences\n- Content width: Uses your selected width setting\n\nTable of Contents\nThe TOC remains available in focus mode:\n- Helps navigate long documents\n- Can be collapsed if desired\n- Maintains reading position tracking\n\n\ud83d\udca1 Pro Tips\n\n1. Combine with Search: Use Ctrl+F in focus mode to find specific content\n2. Reading Progress: The progress bar helps track your position\n3. Quick Toggle: Press F twice quickly to check something in the UI\n4. Multiple Monitors: Great for dedicating one screen to focused reading\n\n\ud83d\udd27 Troubleshooting\n\nFocus Mode Not Activating?\n- Ensure you're viewing a note (not search or settings)\n- Try clicking the focus button instead of keyboard\n- Check if another modal is open\n\nContent Not Centered?\n- This is usually theme-related\n- Try switching themes\n- Ensure browser zoom is at 100%\n\n---\n\nFocus mode is your gateway to distraction-free reading. Press F right now to experience it with this tutorial!",
      "code_blocks_count": 0
    },
    {
      "path": "/notes/tutorials/features/code-blocks.md",
      "context": "tutorials",
      "metadata": {
        "title": "Code Blocks & Syntax Highlighting",
        "tags": [
          "tutorial",
          "code",
          "markdown",
          "syntax-highlighting"
        ],
        "created": "2025-01-18",
        "author": "Wiki Team",
        "description": "Master code blocks with syntax highlighting, line numbers, and advanced features",
        "updated": null,
        "category": null,
        "status": null,
        "aliases": [],
        "related": [],
        "dependencies": [],
        "keywords": [],
        "tableOfContents": "auto",
        "hideFromSearch": false
      },
      "content_preview": "Display code beautifully with syntax highlighting for 100+ programming languages, line numbers, custom titles, and more.\n\n\n\n\nWrap code in triple backticks:\n\nmarkdown\n\nfunction hello() {\n    console.lo...",
      "searchable_content": "\nCode Blocks & Syntax Highlighting\n\nDisplay code beautifully with syntax highlighting for 100+ programming languages, line numbers, custom titles, and more.\n\n\ud83d\udcdd Basic Code Blocks\n\nSimple Code Block\nWrap code in triple backticks:\n\nmarkdown\n\nfunction hello() {\n    console.log(\"Hello, World!\");\n}\n\n\n\nWith Language Specification\nAdd the language for syntax highlighting:\n\nmarkdown\njavascript\nfunction hello() {\n    console.log(\"Hello, World!\");\n}\n\n\n\n\ud83c\udfa8 Syntax Highlighting\n\nSupported Languages\nThe wiki supports 100+ languages including:\n- Web: HTML, CSS, JavaScript, TypeScript\n- Backend: Python, Java, Go, Rust, C++\n- Data: SQL, JSON, YAML, XML\n- Scripting: Bash, PowerShell, Ruby\n- And many more!\n\nExamples\n\npython\nPython example\ndef fibonacci(n):\n    if n <= 1:\n        return n\n    return fibonacci(n-1) + fibonacci(n-2)\n\n\nsql\n-- SQL example\nSELECT users.name, COUNT(orders.id) as ordercount\nFROM users\nLEFT JOIN orders ON users.id = orders.userid\nGROUP BY users.id\nHAVING ordercount > 5;\n\n\n\ud83c\udff7\ufe0f Advanced Features\n\nCustom Titles\nAdd descriptive titles to code blocks:\n\nmarkdown\njavascript title:\"API Configuration\"\nconst config = {\n    apiUrl: 'https://api.example.com',\n    timeout: 5000\n};\n\n\n\nResult:\njavascript title:\"API Configuration\"\nconst config = {\n    apiUrl: 'https://api.example.com',\n    timeout: 5000\n};\n\n\nCollapsible Code Blocks\nMake long code blocks collapsible:\n\nmarkdown\npython title:\"Long Example\" collapse:true\nThis code block starts collapsed\ndef longfunction():\n    # ... lots of code ...\n    pass\n\n\n\n\ud83d\udd22 Line Numbers\n\nEnable Globally\n1. Open Settings (Ctrl+,)\n2. Toggle \"Show line numbers\"\n3. All code blocks now display line numbers\n\nBenefits\n- Easy reference to specific lines\n- Better for tutorials and documentation\n- Maintains alignment with word wrap\n\n\ud83d\udd27 Code Block Actions\n\nCopy Button\nEvery code block has a copy button:\n- Hover over any code block\n- Click the \ud83d\udccb copy icon\n- Code is copied to clipboard\n\nExpand/Collapse\nFor collapsible blocks:\n- Click the toggle button\n- State is preserved while viewing\n\n\ud83d\udca1 Best Practices\n\nChoose the Right Language\nAlways specify the language for better highlighting:\n- \u2705  javascript\n- \u274c  js (might work but less reliable)\n- \u274c  text (no highlighting)\n\nUse Descriptive Titles\nHelp readers understand the code's purpose:\nbash title:\"Install Dependencies\"\nnpm install express mongoose dotenv\n\n\nOrganize Long Code\nFor lengthy examples:\n1. Use collapsible blocks\n2. Break into multiple blocks with explanations\n3. Add titles to each section\n\n\ud83c\udfaf Special Features\n\nFile Names in Titles\nShow file paths in titles:\njavascript title:\"src/components/Header.jsx\"\nexport function Header() {\n    return <h1>My App</h1>;\n}\n\n\nTerminal Output\nUse bash or shell for command line:\nbash\n$ npm run build\nBuilding project...\n\u2713 Build complete!\n\n\nDiff Highlighting\nShow code changes:\ndiff\n- const old = \"red\";\n+ const new = \"green\";\n\n\n\u2699\ufe0f Settings & Customization\n\nLine Numbers Toggle\n- Global setting affects all code blocks\n- Applies immediately without refresh\n- CSS-based implementation (no JavaScript overhead)\n\nTheme Integration\n- Syntax colors adapt to your chosen theme\n- Dark themes have appropriate contrast\n- Light themes remain readable\n\n\ud83d\ude80 Pro Tips\n\n1. Language Aliases: Both yml and yaml work\n2. No Language: Use  text for plain text\n3. JSON Formatting: JSON is automatically pretty-printed\n4. Copy Preserves Format: Copied code maintains proper indentation\n\n\ud83d\udd0d Troubleshooting\n\nNo Syntax Highlighting?\n- Check if language is specified correctly\n- Some languages have multiple names (e.g., c++, cpp)\n- Use  text if language isn't supported\n\nLine Numbers Not Showing?\n- Verify setting is enabled\n- Refresh the page if needed\n- Check if theme supports line numbers\n\n---\n\nCode blocks are essential for technical documentation. Master these features to create beautiful, readable code examples!     # Python example\ndef fibonacci(n):\n    if n <= 1:\n        return n\n    return fibonacci(n-1) + fibonacci(n-2) -- SQL example\nSELECT users.name, COUNT(orders.id) as order_count\nFROM users\nLEFT JOIN orders ON users.id = orders.user_id\nGROUP BY users.id\nHAVING order_count > 5;   javascript API Configuration const config = {\n    apiUrl: 'https://api.example.com',\n    timeout: 5000\n};   bash Install Dependencies npm install express mongoose dotenv javascript src/components/Header.jsx export function Header() {\n    return <h1>My App</h1>;\n} $ npm run build\nBuilding project...\n\u2713 Build complete! - const old = \"red\";\n+ const new = \"green\";",
      "code_blocks_count": 15
    },
    {
      "path": "/notes/tutorials/features/in-note-search.md",
      "context": "tutorials",
      "metadata": {
        "title": "In-Note Search",
        "tags": [
          "tutorial",
          "search",
          "navigation"
        ],
        "created": "2025-01-18",
        "author": "Wiki Team",
        "description": "Search and highlight text within the current note with keyboard navigation",
        "updated": null,
        "category": null,
        "status": null,
        "aliases": [],
        "related": [],
        "dependencies": [],
        "keywords": [],
        "tableOfContents": "auto",
        "hideFromSearch": false
      },
      "content_preview": "Find and highlight specific text within your current note using the built-in search feature. Navigate through matches with keyboard shortcuts.\n\n\n\n\nPress Ctrl+F (or Cmd+F on Mac) to open the search bar...",
      "searchable_content": "\nIn-Note Search\n\nFind and highlight specific text within your current note using the built-in search feature. Navigate through matches with keyboard shortcuts.\n\n\ud83d\udd0d Activating Search\n\nKeyboard Shortcut\nPress Ctrl+F (or Cmd+F on Mac) to open the search bar at the top of the note.\n\nWhat Happens\n1. A search input appears at the top\n2. Focus moves to the search box\n3. Start typing to search immediately\n\n\ud83c\udfaf Search Features\n\nReal-Time Highlighting\n- Matches are highlighted as you type\n- Yellow background for visibility\n- All matches shown simultaneously\n\nMatch Counter\nShows current match and total: 1 of 5 matches\n\nNavigation Controls\n- Next Match: Press Enter or click \u2192\n- Previous Match: Press Shift+Enter or click \u2190\n- Close Search: Press Esc or click \u2715\n\n\u2328\ufe0f Keyboard Navigation\n\n| Action | Shortcut |\n|--------|----------|\n| Open Search | Ctrl+F |\n| Next Match | Enter |\n| Previous Match | Shift+Enter |\n| Close Search | Esc |\n\n\ud83c\udfa8 Visual Features\n\nMatch Highlighting\n- All Matches: Light yellow background\n- Current Match: Bright yellow with border\n- Smooth Scrolling: Auto-scrolls to show matches\n\nSearch Bar Design\n- Minimal, non-intrusive design\n- Adapts to your theme colors\n- Clear match counter\n- Intuitive navigation buttons\n\n\ud83d\udca1 Search Tips\n\nCase Sensitivity\nSearch is case-insensitive by default:\n- Searching \"javascript\" finds \"JavaScript\", \"JAVASCRIPT\", etc.\n\nPartial Matches\nFinds text within words:\n- Searching \"script\" matches \"JavaScript\", \"scripts\", \"scripting\"\n\nSpecial Characters\nMost special characters work:\n- Search for function() or @import\n- Regex patterns are treated as literal text\n\n\ud83c\udfaf Use Cases\n\nCode Review\nFind specific functions or variables:\n1. Press Ctrl+F\n2. Type function name\n3. Navigate through all occurrences\n\nProofreading\nCheck word usage:\n- Search for commonly confused words\n- Find repeated phrases\n- Locate specific terms\n\nNavigation\nJump to sections quickly:\n- Search for heading text\n- Find specific examples\n- Locate references\n\n\ud83d\udd27 Advanced Usage\n\nCombining with TOC\n1. Use TOC for section navigation\n2. Use in-note search for specific content\n3. Together they provide complete navigation\n\nSearch Persistence\n- Search stays active while reading\n- Click anywhere in note to continue reading\n- Highlights remain visible\n\nMultiple Terms\nSearch for different terms sequentially:\n1. Search first term\n2. Review matches\n3. Change search term\n4. New matches highlighted\n\n\u26a1 Performance\n\nOptimized for Large Notes\n- Efficient highlighting algorithm\n- Smooth scrolling to matches\n- No lag even with many matches\n\nMemory Efficient\n- Cleans up highlights when closed\n- No impact on note rendering\n- Lightweight implementation\n\n\ud83c\udfa8 Theme Integration\n\nSearch adapts to your theme:\n- Dark Themes: Appropriate highlight colors\n- Light Themes: Visible but not harsh\n- Custom Themes: Uses theme variables\n\n\ud83d\udca1 Pro Tips\n\n1. Quick Jumps: Use Enter repeatedly to cycle through matches\n2. Reverse Navigation: Hold Shift+Enter to go backwards\n3. Persistent Search: Leave search open while reading\n4. Exact Phrases: Search for multi-word phrases\n5. Quick Close: Press Esc twice to close and clear\n\n\ud83d\udd0d Limitations\n\nCurrent Limitations\n- No regex support (searches literal text)\n- No whole-word-only option\n- Searches visible content only\n\nBest For\n- Finding specific text quickly\n- Navigating long documents\n- Reviewing code or documentation\n- Proofreading and editing\n\n---\n\nTry it now! Press Ctrl+F and search for \"search\" to see how many times it appears in this tutorial.",
      "code_blocks_count": 0
    },
    {
      "path": "/notes/tutorials/features/reading-progress.md",
      "context": "tutorials",
      "metadata": {
        "title": "Reading Progress & Time Estimation",
        "tags": [
          "tutorial",
          "reading",
          "navigation"
        ],
        "created": "2025-01-18",
        "author": "Wiki Team",
        "description": "Track your reading progress and get time estimates for notes",
        "updated": null,
        "category": null,
        "status": null,
        "aliases": [],
        "related": [],
        "dependencies": [],
        "keywords": [],
        "tableOfContents": "auto",
        "hideFromSearch": false
      },
      "content_preview": "Stay informed about your reading progress with visual indicators and time estimates based on average reading speed.\n\n\n\n\nA thin progress bar appears at the top of each note showing:\n- Current position ...",
      "searchable_content": "\nReading Progress & Time Estimation\n\nStay informed about your reading progress with visual indicators and time estimates based on average reading speed.\n\n\ud83d\udcca Progress Bar\n\nVisual Indicator\nA thin progress bar appears at the top of each note showing:\n- Current position as you scroll\n- Smooth animation for better UX\n- Theme-matched colors for consistency\n\nHow It Works\n- Calculates based on scroll position\n- Updates in real-time as you read\n- Accounts for entire document length\n- Hidden when at the very top\n\n\u23f1\ufe0f Reading Time Estimation\n\nAutomatic Calculation\nEach note shows estimated reading time based on:\n- Word count of the entire note\n- Average reading speed (200 words/minute)\n- Formatted display (e.g., \"5 min read\")\n\nWhere It Appears\nFind reading time in:\n- Note header metadata\n- Search results preview\n- Recent files list\n\n\ud83d\udcc8 Progress Tracking Features\n\nScroll Position Memory\nThe wiki remembers where you left off:\n- Position saved when switching tabs\n- Restored when returning to a note\n- Per-tab basis for multiple instances\n\nVisual Feedback\n- Progress percentage shown in some themes\n- Smooth scrolling to positions\n- Clear indicators of document boundaries\n\n\ud83c\udfaf Use Cases\n\nLong Document Navigation\nPerfect for:\n- \ud83d\udcda Lengthy tutorials\n- \ud83d\udcd6 Documentation reading\n- \ud83d\udcdd Research papers\n- \ud83d\udccb Meeting minutes\n\nTime Management\n- Plan reading sessions\n- Estimate documentation review time\n- Track learning progress\n- Schedule breaks appropriately\n\n\u2699\ufe0f How Reading Time Works\n\nCalculation Method\n\nWords in document \u00f7 200 WPM = Reading time in minutes\n\n\nFactors Considered\n- Text content only (not code blocks)\n- Headings and paragraphs included\n- Average adult reading speed\n- Rounded to nearest minute\n\nExamples\n- 500 words = 3 min read\n- 1000 words = 5 min read\n- 2000 words = 10 min read\n\n\ud83c\udfa8 Visual Styling\n\nProgress Bar Appearance\n- Height: Thin 3-4px bar\n- Color: Matches theme accent\n- Position: Fixed at viewport top\n- Z-index: Above content, below modals\n\nTheme Integration\nDifferent themes style the progress bar:\n- Dark themes: Subtle glow effect\n- Light themes: Clean solid color\n- Custom themes: Uses CSS variables\n\n\ud83d\udca1 Reading Tips\n\nEffective Reading\n1. Check time estimate before starting\n2. Use TOC for long documents\n3. Monitor progress for breaks\n4. Combine with focus mode for immersion\n\nNavigation Helpers\n- Home key: Jump to start\n- End key: Jump to end  \n- Page Up/Down: Smooth scrolling\n- Space bar: Page down\n\n\ud83d\udd27 Technical Details\n\nPerformance\n- Lightweight implementation\n- No impact on scrolling performance\n- Throttled updates for efficiency\n- CSS-based animations\n\nAccessibility\n- Respects reduced motion preferences\n- Keyboard navigation friendly\n- Screen reader compatible\n- High contrast support\n\n\ud83d\udcf1 Responsive Behavior\n\nMobile Devices\n- Progress bar remains visible\n- Touch scrolling supported\n- Optimized for small screens\n- Same features as desktop\n\nTablet Experience  \n- Full progress tracking\n- Comfortable reading width\n- Touch-friendly interface\n- Landscape/portrait support\n\n\ud83c\udfaf Pro Tips\n\n1. Quick Progress Check: Glance at bar to see position\n2. Time Budgeting: Use estimates to plan reading\n3. Break Planning: Take breaks at section boundaries\n4. Speed Reading: Actual time may vary with familiarity\n\n\ud83d\udd0d Related Features\n\nComplements These Features\n- Table of Contents: Navigate to specific sections\n- Focus Mode: Immersive reading experience\n- In-Note Search: Find specific content\n- Bookmarks: Save important notes\n\n---\n\nThis note is approximately a 3-minute read. Watch the progress bar fill as you scroll through this content! Words in document \u00f7 200 WPM = Reading time in minutes",
      "code_blocks_count": 1
    },
    {
      "path": "/notes/tutorials/features/bookmarks.md",
      "context": "tutorials",
      "metadata": {
        "title": "Bookmarks - Save Your Favorite Notes",
        "tags": [
          "tutorial",
          "bookmarks",
          "organization",
          "navigation"
        ],
        "created": "2025-01-18",
        "author": "Wiki Team",
        "description": "Learn how to bookmark important notes for quick access",
        "updated": null,
        "category": null,
        "status": null,
        "aliases": [],
        "related": [],
        "dependencies": [],
        "keywords": [],
        "tableOfContents": "auto",
        "hideFromSearch": false
      },
      "content_preview": "Keep your most important notes at your fingertips with the bookmarking system. Save, organize, and quickly access your favorite content.\n\n\n\n\nWhile viewing any note:\n1. Click the star icon (\u2606) in the n...",
      "searchable_content": "\nBookmarks - Save Your Favorite Notes\n\nKeep your most important notes at your fingertips with the bookmarking system. Save, organize, and quickly access your favorite content.\n\n\u2b50 Creating Bookmarks\n\nQuick Bookmark\nWhile viewing any note:\n1. Click the star icon (\u2606) in the note header\n2. The star fills (\u2605) indicating it's bookmarked\n3. Note is instantly added to your bookmarks\n\nKeyboard Shortcut\nPress Ctrl+D to toggle bookmark for current note\n\nVisual Feedback\n- Empty star (\u2606): Not bookmarked\n- Filled star (\u2605): Bookmarked\n- Animation: Smooth transition when toggling\n\n\ud83d\udcda Accessing Bookmarks\n\nFrom the Header\n1. Click the Bookmarks button in the header\n2. Dropdown shows all bookmarked notes\n3. Click any bookmark to open it\n\nQuick Access\n- Recent bookmarks appear at the top\n- Shows note title and description\n- Hover for full path tooltip\n\n\ud83d\uddc2\ufe0f Managing Bookmarks\n\nRemove Bookmarks\nSeveral ways to remove:\n1. Toggle: Click the star icon again on bookmarked note\n2. From List: Click the \u2715 next to bookmark in dropdown\n3. Keyboard: Press Ctrl+D on bookmarked note\n\nBookmark Limit\n- Default: 50 bookmarks maximum\n- Oldest bookmarks auto-removed when limit reached\n- Prevents bookmark overload\n\n\ud83c\udfaf Smart Features\n\nBookmark Persistence\n- Saved in browser's local storage\n- Survives page refreshes\n- Syncs across tabs instantly\n- No account needed\n\nBookmark Information\nEach bookmark stores:\n- Note title - For display\n- File path - For navigation\n- Description - Quick preview\n- Bookmark date - For sorting\n\nVisual Indicators\n- In File Tree: Bookmarked notes show star icon\n- In Search Results: Bookmarks highlighted\n- In Tabs: Tab shows bookmark indicator\n\n\ud83d\udca1 Use Cases\n\nQuick Reference\nBookmark these types of notes:\n- \ud83d\udccb Daily templates\n- \ud83d\udd27 Configuration guides\n- \ud83d\udcda Index/overview pages\n- \ud83c\udfaf Current projects\n- \ud83d\udcdd Frequently edited notes\n\nWorkflow Integration\n1. Project Work: Bookmark all project-related notes\n2. Learning Path: Bookmark tutorial sequence\n3. Daily Routine: Bookmark daily/weekly notes\n4. Reference: Bookmark cheat sheets and guides\n\n\u26a1 Pro Tips\n\nBookmark Organization\n1. Use descriptive titles - Easy to identify in list\n2. Add descriptions - Help future you remember why\n3. Regular cleanup - Remove outdated bookmarks\n4. Project grouping - Bookmark related notes together\n\nKeyboard Workflow\n1. Open note: Ctrl+K \u2192 search \u2192 Enter\n2. Bookmark it: Ctrl+D\n3. Access bookmarks: Click header dropdown\n4. Quick switching between bookmarked notes\n\n\ud83d\udd27 Troubleshooting\n\nBookmarks Not Saving?\n- Check browser's local storage isn't full\n- Ensure cookies/storage enabled\n- Try different browser if issues persist\n\nLost Bookmarks?\n- Bookmarks are browser-specific\n- Clear browser data removes bookmarks\n- Use same browser for consistency\n\nCan't Bookmark?\n- Ensure you're viewing a note\n- Check if bookmark limit reached\n- Try refreshing the page\n\n\ud83c\udfa8 Visual Design\n\nTheme Integration\n- Star color matches theme accent\n- Dropdown styled consistently\n- Smooth animations throughout\n- High contrast for accessibility\n\nMobile Experience\n- Touch-friendly bookmark button\n- Responsive dropdown menu\n- Same features as desktop\n- Swipe gestures supported\n\n\ud83d\udd0d Related Features\n\nComplements These Tools\n- Recent Files: Auto-tracked history\n- Search: Find any note quickly\n- Tags: Organize by topics\n- Wiki Links: Connect related notes\n\nBookmark vs Recent Files\n| Feature | Bookmarks | Recent Files |\n|---------|-----------|--------------|\n| Manual | \u2713 Yes | \u2717 Auto |\n| Persistent | \u2713 Forever |  Limited |\n| Limit | 50 notes | 20 notes |\n| Purpose | Favorites | History |\n\n\ud83d\udcbe Data Management\n\nExport Bookmarks\nCurrently bookmarks are browser-only. Future features may include:\n- Export to JSON\n- Sync across devices\n- Backup/restore options\n\nPrivacy\n- All bookmarks stored locally\n- No server communication\n- No tracking or analytics\n- Complete user control\n\n---\n\nStart bookmarking your important notes now! Click the star icon on this tutorial to try it out.",
      "code_blocks_count": 0
    },
    {
      "path": "/notes/tutorials/features/context-filtering.md",
      "context": "tutorials",
      "metadata": {
        "title": "Context Filtering - Organize by Categories",
        "tags": [
          "tutorial",
          "organization",
          "navigation",
          "contexts"
        ],
        "created": "2025-01-18",
        "author": "Wiki Team",
        "description": "Use contexts to organize and filter your notes by top-level categories",
        "updated": null,
        "category": null,
        "status": null,
        "aliases": [],
        "related": [],
        "dependencies": [],
        "keywords": [],
        "tableOfContents": "auto",
        "hideFromSearch": false
      },
      "content_preview": "Contexts are top-level folders that help you organize notes into major categories like Personal, Work, Reference, etc. The context filtering system adapts to your screen size and number of categories....",
      "searchable_content": "\nContext Filtering - Organize by Categories\n\nContexts are top-level folders that help you organize notes into major categories like Personal, Work, Reference, etc. The context filtering system adapts to your screen size and number of categories.\n\n\ud83d\udcc2 Understanding Contexts\n\nWhat Are Contexts?\nContexts are the top-level folders in your /notes/ directory:\n\nnotes/\n\u251c\u2500\u2500 personal/     \u2190 Context\n\u251c\u2500\u2500 work/         \u2190 Context  \n\u251c\u2500\u2500 reference/    \u2190 Context\n\u2514\u2500\u2500 tutorials/    \u2190 Context\n\n\nAutomatic Detection\nThe system automatically:\n- Detects all top-level folders\n- Counts notes in each context\n- Creates filter buttons/dropdown\n- Updates when notes are added\n\n\ud83c\udfaf Using Context Filters\n\nDesktop View (Wide Screens)\nOn larger screens with few contexts:\n- Individual buttons appear in the header\n- Click to filter notes by that context\n- \"All\" button shows everything\n- Active context is highlighted\n\nMobile/Dropdown View\nOn smaller screens or with many contexts:\n- Dropdown menu replaces buttons\n- Click to open context list\n- Select context to filter\n- Current context shown in button\n\nAutomatic Switching\nThe UI switches between views based on:\n- Screen width: Mobile < 768px\n- Context count: 6+ forces dropdown\n- Dynamic resize: Adapts as you resize\n\n\ud83d\udd0d Filtering Behavior\n\nHow It Works\nWhen you select a context:\n1. Sidebar updates to show only that context's notes\n2. File tree filters to matching folders\n3. Search scope adjusts to context (optional)\n4. URL updates for bookmarking\n\nCombining with Other Filters\nContext filtering works with:\n- Tag filtering: Further refine within context\n- Search: Search within selected context\n- Recent files: Shows context-specific recents\n\n\ud83d\udca1 Organization Best Practices\n\nRecommended Contexts\nCommon context patterns:\n- personal/ - Private notes, journal, ideas\n- work/ - Professional documentation\n- reference/ - Quick lookup, cheatsheets\n- projects/ - Project-specific notes\n- learning/ - Courses, tutorials, books\n- archive/ - Old/completed items\n\nNaming Conventions\n- Use lowercase for consistency\n- Keep names short and clear\n- Avoid special characters\n- Use singular or plural consistently\n\nContext Limits\n- No hard limit on contexts\n- 6+ contexts trigger dropdown view\n- Consider consolidating if too many\n- Use subfolders for further organization\n\n\ud83c\udfa8 Visual Design\n\nButton Appearance\n- Matches theme colors\n- Subtle hover effects\n- Active state clearly visible\n- Responsive sizing\n\nDropdown Styling\n- Compact design for mobile\n- Clear selection indicator\n- Smooth animations\n- Touch-friendly targets\n\n\u26a1 Workflow Tips\n\nQuick Context Switching\n1. Keyboard: Use number keys (future feature)\n2. Mouse: Click context buttons\n3. Touch: Tap dropdown on mobile\n4. Bookmarks: Save filtered URLs\n\nProject Organization\nCreate contexts by project phase:\n\nnotes/\n\u251c\u2500\u2500 active-projects/\n\u251c\u2500\u2500 planning/\n\u251c\u2500\u2500 completed/\n\u2514\u2500\u2500 ideas/\n\n\nRole-Based Contexts\nOrganize by your roles:\n\nnotes/\n\u251c\u2500\u2500 developer/\n\u251c\u2500\u2500 manager/\n\u251c\u2500\u2500 personal/\n\u2514\u2500\u2500 learning/\n\n\n\ud83d\udd27 Advanced Usage\n\nURL Parameters\nDirect links to contexts:\n\n#/context/personal\n#/context/work\n\n\nPersistent Selection\n- Context selection is remembered\n- Survives page refreshes\n- Stored in localStorage\n- Reset with \"All\" button\n\nSearch Integration\nWhen searching with context active:\n- Results filtered to that context\n- Context badge shown in results\n- Clear context to search all\n\n\ud83d\udcf1 Responsive Behavior\n\nBreakpoints\n- Mobile: < 768px width\n- Tablet: 768px - 1024px\n- Desktop: > 1024px\n\nTouch Interactions\n- Tap to open dropdown\n- Tap outside to close\n- Swipe support (future)\n- Large touch targets\n\n\ud83c\udfaf Common Patterns\n\nWork/Personal Separation\n\nnotes/\n\u251c\u2500\u2500 work/\n\u2502   \u251c\u2500\u2500 meetings/\n\u2502   \u251c\u2500\u2500 projects/\n\u2502   \u2514\u2500\u2500 documentation/\n\u2514\u2500\u2500 personal/\n    \u251c\u2500\u2500 journal/\n    \u251c\u2500\u2500 ideas/\n    \u2514\u2500\u2500 learning/\n\n\nKnowledge Base Structure\n\nnotes/\n\u251c\u2500\u2500 guides/\n\u251c\u2500\u2500 reference/\n\u251c\u2500\u2500 troubleshooting/\n\u2514\u2500\u2500 archive/\n\n\n\ud83d\udd0d Troubleshooting\n\nContexts Not Showing?\n1. Ensure folders exist in /notes/\n2. Folders must contain .md files\n3. Rebuild index: npm run build\n4. Check for typos in folder names\n\nDropdown Not Working?\n- Clear browser cache\n- Check JavaScript console\n- Verify no CSS conflicts\n- Try different browser\n\n---\n\nContext filtering helps you focus on what matters. Organize your notes into meaningful categories and switch between them effortlessly! notes/\n\u251c\u2500\u2500 personal/     \u2190 Context\n\u251c\u2500\u2500 work/         \u2190 Context  \n\u251c\u2500\u2500 reference/    \u2190 Context\n\u2514\u2500\u2500 tutorials/    \u2190 Context notes/\n\u251c\u2500\u2500 active-projects/\n\u251c\u2500\u2500 planning/\n\u251c\u2500\u2500 completed/\n\u2514\u2500\u2500 ideas/ notes/\n\u251c\u2500\u2500 developer/\n\u251c\u2500\u2500 manager/\n\u251c\u2500\u2500 personal/\n\u2514\u2500\u2500 learning/ #/context/personal\n#/context/work notes/\n\u251c\u2500\u2500 work/\n\u2502   \u251c\u2500\u2500 meetings/\n\u2502   \u251c\u2500\u2500 projects/\n\u2502   \u2514\u2500\u2500 documentation/\n\u2514\u2500\u2500 personal/\n    \u251c\u2500\u2500 journal/\n    \u251c\u2500\u2500 ideas/\n    \u2514\u2500\u2500 learning/ notes/\n\u251c\u2500\u2500 guides/\n\u251c\u2500\u2500 reference/\n\u251c\u2500\u2500 troubleshooting/\n\u2514\u2500\u2500 archive/",
      "code_blocks_count": 6
    },
    {
      "path": "/notes/tutorials/features/split-view.md",
      "context": "tutorials",
      "metadata": {
        "title": "Split View",
        "tags": [
          "interface",
          "productivity",
          "tabs"
        ],
        "created": "2025-01-18",
        "author": "Wiki Admin",
        "description": "Work with multiple notes side-by-side using split view functionality",
        "updated": null,
        "category": null,
        "status": null,
        "aliases": [],
        "related": [],
        "dependencies": [],
        "keywords": [],
        "tableOfContents": "auto",
        "hideFromSearch": false
      },
      "content_preview": "Split view allows you to view and edit multiple notes side-by-side, dramatically improving your productivity when working with related content.\n\n\n\nThere are several ways to enable split view:\n\n\nClick ...",
      "searchable_content": "\nSplit View\n\nSplit view allows you to view and edit multiple notes side-by-side, dramatically improving your productivity when working with related content.\n\nActivating Split View\n\nThere are several ways to enable split view:\n\n\ud83d\uddb1\ufe0f Button Click\nClick the split view icon (two rectangles) in the header navigation bar.\n\n\u2328\ufe0f Future Shortcut\nA keyboard shortcut will be available in future updates.\n\nHow Split View Works\n\nWhen split view is enabled:\n\n1. Two Panes: Your workspace is divided into left and right panes\n2. Active Pane: One pane is \"active\" (highlighted with a colored border)\n3. Independent Content: Each pane can display different notes\n4. Resizable: Drag the divider to adjust pane sizes\n\nUsing Split View\n\n\ud83d\udccb Opening Notes\n- Click any note to open it in the active pane\n- Drag and drop notes from sidebar directly into any pane\n- Click a pane to make it active\n- Visual feedback: Panes highlight when dragging notes over them\n\n\ud83d\udccf Resizing Panes\n- Drag the divider between panes to adjust widths\n- Minimum width: 300px per pane\n- Visual feedback: Divider changes color on hover\n\n\ud83c\udfaf Active Pane\n- The active pane has a colored border\n- New notes open in the active pane\n- Click any pane to make it active\n\n\ud83d\uddb1\ufe0f Drag & Drop\n- Drag notes from the sidebar file tree into any pane\n- Visual feedback: Notes show grab cursor when draggable\n- Drop zones: Panes highlight with colored border during drag\n- Auto-activate: Dropping a note automatically makes that pane active\n\nUse Cases\n\n\ud83d\udcda Research & Writing\n- Open reference material in one pane\n- Write notes in the other pane\n\n\ud83d\udd17 Cross-Referencing\n- Compare different versions of documents\n- View related notes simultaneously\n\n\ud83d\udcd6 Learning\n- Tutorial in one pane\n- Practice notes in the other\n\n\ud83d\udee0\ufe0f Development\n- Documentation in one pane\n- Code examples in the other\n\nMobile Experience\n\nOn mobile devices:\n- Split view automatically becomes single pane\n- Only the active pane is shown\n- Tap to switch between panes\n\nTips & Tricks\n\n\u26a1 Efficiency Tips\n1. Bookmark frequently compared notes for quick access\n2. Use wiki links to jump between related content\n3. Resize panes based on content importance\n4. Focus mode works in split view too\n\n\ud83c\udfa8 Visual Organization\n- Different themes help distinguish panes\n- Use the table of contents in longer documents\n- Search within notes works in both panes\n\nDisabling Split View\n\nTo return to single-pane view:\n1. Click the split view button again\n2. The interface returns to normal layout\n3. Your current note remains active\n\nTechnical Notes\n\n\ud83e\udde0 Memory Management\n- Split view uses minimal additional memory\n- Each pane maintains its own scroll position\n- Tab system works independently in each pane\n\n\ud83d\udcbe Settings Persistence\n- Split view state is saved automatically\n- Pane sizes are remembered between sessions\n- Preferences sync across tabs\n\nSplit view transforms your note-taking workflow, making it easy to work with multiple documents efficiently!",
      "code_blocks_count": 0
    },
    {
      "path": "/notes/tutorials/features/sticky-notes.md",
      "context": "tutorials",
      "metadata": {
        "title": "Quick Notes Panel",
        "tags": [
          "productivity",
          "quick-notes",
          "interface"
        ],
        "created": "2025-01-18",
        "author": "Wiki Admin",
        "description": "Slide-out panel for quick thoughts and temporary notes",
        "updated": "2025-06-22",
        "category": null,
        "status": null,
        "aliases": [],
        "related": [],
        "dependencies": [],
        "keywords": [],
        "tableOfContents": "auto",
        "hideFromSearch": false
      },
      "content_preview": "The Quick Notes panel provides a dedicated space for capturing thoughts, ideas, and temporary notes without interrupting your main workflow. The elegant slide-out panel keeps your notes organized and ...",
      "searchable_content": "\nQuick Notes Panel\n\nThe Quick Notes panel provides a dedicated space for capturing thoughts, ideas, and temporary notes without interrupting your main workflow. The elegant slide-out panel keeps your notes organized and easily accessible.\n\nAccessing Quick Notes\n\n\ud83d\uddb1\ufe0f Click Method\nClick the Quick Notes icon (document with lines) in the header navigation bar.\n\n\u2328\ufe0f Keyboard Shortcut\nPress Ctrl+Shift+S (or Cmd+Shift+S on Mac) to toggle the Quick Notes panel.\n\nFeatures\n\n\ud83d\udcdd Multiple Notes Management\n- Tab System: Each note appears as a tab at the top of the panel\n- Easy Switching: Click any tab to switch between notes\n- Preview: See the first 30 characters of each note in the tab\n- Date Tracking: View when each note was last updated\n\n\u2728 Clean Interface\n- Slide-out Panel: Smoothly slides in from the right side\n- Full Height: Uses the entire screen height for maximum space\n- Auto-save: Notes save automatically as you type\n- Persistent: All notes saved across browser sessions\n\nPanel Controls\n\nThe Quick Notes panel includes intuitive controls:\n\n\u2795 Add New Note\n- Button: Plus icon in the header\n- Action: Creates a new empty note\n- Focus: Automatically focuses the text area\n\n\u274c Close Panel\n- Button: \u00d7 icon in the header\n- Action: Slides the panel away\n- Shortcut: Also use Ctrl+Shift+S to toggle\n\n\ud83d\uddd1\ufe0f Delete Note\n- Button: \u00d7 icon on each note tab\n- Action: Removes the selected note\n- Confirmation: Asks before deleting (if enabled in settings)\n\nSmart Behaviors\n\n\ud83d\udcbe Auto-Save\n- Content saves automatically as you type (1-second delay)\n- All notes persist between browser sessions\n- No manual save needed\n\n\ud83d\udd04 Note Management\n- Switch between notes with a single click\n- Notes organized chronologically by last update\n- Empty notes show helpful placeholder text\n\n\ud83d\udcf1 Responsive Design\n- Panel adapts to screen size\n- On mobile, uses full screen width\n- Touch-friendly interface for tablets\n\nPractical Use Cases\n\n\ud83d\udcdd Quick Capture\n- Jot down ideas without leaving your current page\n- Capture quotes or references while reading\n- Save code snippets for later use\n\n\ud83c\udfaf Research Notes\n- Keep research findings in one place\n- Track questions to investigate\n- Store temporary information during exploration\n\n\ud83e\udde0 Brainstorming\n- Draft outlines for new documents\n- Collect related thoughts and ideas\n- Build connections between concepts\n\n\ud83d\udccb Task Management\n- Create quick to-do lists\n- Track progress on current work\n- Note follow-up items from reading\n\nMobile Experience\n\n\ud83d\udcf1 Touch Support\n- Tap tabs to switch between notes\n- Swipe to scroll through long notes\n- Tap \u00d7 button to delete notes\n\n\ud83d\udcd0 Responsive Design\n- Full-screen panel on mobile devices\n- Larger touch targets for easy interaction\n- Optimized text input for mobile keyboards\n\nStorage & Privacy\n\n\ud83d\udcbd Local Storage\n- All sticky notes stored in browser localStorage\n- No data sent to external servers\n- Completely private and offline\n\n\ud83e\uddf9 Cleanup\n- Clear browser data to remove all stickies\n- Individual deletion via close button\n- No automatic expiration\n\nTips & Best Practices\n\n\u26a1 Workflow Tips\n1. One thought per note: Keep each note focused on a single topic\n2. Regular cleanup: Delete completed or outdated notes\n3. Use keyboard shortcut: Ctrl+Shift+S for quick access\n\n\ud83c\udfa8 Organization\n- Date awareness: Check note dates to track age\n- Preview scanning: Use tab previews to find notes quickly\n- Limit active notes: Keep 5-10 notes maximum for clarity\n\n\ud83d\udd04 Workflow Integration\n- Open panel while reading to capture insights\n- Use for drafting before creating permanent notes\n- Keep research questions visible while exploring\n- Track progress on complex topics\n\nThe Quick Notes panel seamlessly integrates temporary note-taking into your workflow, ensuring no thought is lost while maintaining a clean, organized interface!",
      "code_blocks_count": 0
    },
    {
      "path": "/notes/tutorials/advanced/combined-code-blocks.md",
      "context": "tutorials",
      "metadata": {
        "title": "Combined Code Blocks - Automatic Code Aggregation",
        "tags": [
          "tutorial",
          "code",
          "advanced",
          "automation"
        ],
        "created": "2025-01-18",
        "author": "Wiki Team",
        "description": "Automatically combine all code blocks from a page into a single, copyable block",
        "updated": null,
        "category": null,
        "status": null,
        "aliases": [],
        "related": [],
        "dependencies": [],
        "keywords": [],
        "tableOfContents": "auto",
        "hideFromSearch": false
      },
      "content_preview": "Transform your tutorials and documentation by automatically combining all code blocks into a single, complete code file at the end of your note.\n\n\n\nThe combined code blocks feature:\n- Collects all cod...",
      "searchable_content": "\nCombined Code Blocks - Automatic Code Aggregation\n\nTransform your tutorials and documentation by automatically combining all code blocks into a single, complete code file at the end of your note.\n\n\ud83c\udfaf What It Does\n\nThe combined code blocks feature:\n- Collects all code blocks from your note\n- Filters based on your criteria\n- Combines them into one copyable block\n- Adds section markers and comments\n- Appears automatically at the note's end\n\n\u2699\ufe0f Basic Configuration\n\nAdd this to your note's frontmatter:\n\nyaml title:\"Basic Setup\"\n---\ntitle: My Tutorial\ncombineCodeBlocks: true\ncombinedBlockLanguage: javascript\n---\n\n\nThis will combine all code blocks into a JavaScript code block at the bottom.\n\n\ud83d\udee0\ufe0f Advanced Configuration\n\nFull Options Example\n\nyaml title:\"Advanced Configuration\"\n---\ntitle: React Tutorial\ncombineCodeBlocks: true\ncombinedBlockLanguage: javascript\ncombinedBlockTitle: \"Complete React App\"\ncombinedBlockOptions:\n  includeBlockTitles: true      # Add section comments\n  includeOnlyLanguage: javascript  # Only JavaScript blocks\n  skipEmptyBlocks: true         # Ignore empty blocks\n  separator: \"\\n// ---\\n\"       # Between sections\n  excludePatterns: [\"test\", \"example\"]  # Skip these\n---\n\n\nConfiguration Options Explained\n\n| Option | Description | Default |\n|--------|-------------|---------|\n| combineCodeBlocks | Enable/disable feature | false |\n| combinedBlockLanguage | Language for syntax highlighting | text |\n| combinedBlockTitle | Custom title for combined block | Auto-generated |\n| includeBlockTitles | Add titles as comments | true |\n| includeOnlyLanguage | Filter by language | null (all) |\n| skipEmptyBlocks | Skip empty code blocks | true |\n| separator | Text between blocks | \\n// ---\\n |\n| excludePatterns | Title patterns to exclude | [] |\n\n\ud83d\udccb Real-World Examples\n\nTutorial Pattern\nPerfect for step-by-step tutorials:\n\n1. Setup section with imports\n2. Implementation with main code  \n3. Usage examples\n4. Combined complete code at the end\n\nAPI Documentation\n\nyaml title:\"API Documentation Config\"\n---\ncombineCodeBlocks: true\ncombinedBlockLanguage: python\ncombinedBlockTitle: \"Complete API Client\"\ncombinedBlockOptions:\n  includeOnlyLanguage: python\n  excludePatterns: [\"output\", \"response\"]\n---\n\n\n\ud83c\udfa8 Smart Features\n\nLanguage-Aware Comments\nThe system knows comment syntax for 30+ languages:\n- JavaScript/Java: // Comment\n- Python/Ruby: # Comment\n- HTML/XML: <!-- Comment -->\n- CSS: / Comment /\n- SQL: -- Comment\n\nFiltering Examples\n\nInclude Only JavaScript:\nyaml\ncombinedBlockOptions:\n  includeOnlyLanguage: javascript\n\n\nExclude Test Code:\nyaml\ncombinedBlockOptions:\n  excludePatterns: [\"test\", \"mock\", \"example\"]\n\n\nCustom Separators:\nyaml\ncombinedBlockOptions:\n  separator: \"\\n\\n/ ==================== /\\n\\n\"\n\n\n\ud83d\udca1 Best Practices\n\nUse Clear Titles\nGive your code blocks descriptive titles:\njavascript title:\"Database Connection\"\nconst db = await connect(config);\n\n\nOrganize by Purpose\nStructure your tutorial logically:\n1. Configuration\n2. Core functions\n3. Utilities\n4. Main execution\n\nLanguage Consistency\nWhen combining code:\n- Keep the same language throughout\n- Or use includeOnlyLanguage to filter\n- Set appropriate combinedBlockLanguage\n\n\ud83c\udfaf Use Cases\n\nComplete Applications\nBuild tutorials that result in a working app:\n- Show pieces step-by-step\n- Explain each section\n- Provide complete code at end\n\nConfiguration Files\nCombine multiple config snippets:\n- Environment variables\n- Database settings  \n- API configurations\n- Complete config file at end\n\nLearning Paths\nProgressive examples that build:\n- Basic concepts first\n- Advanced features next\n- Full implementation at end\n\n\ud83d\udd0d Visual Indicators\n\nThe combined code block has:\n- Distinctive Border: Dashed line separator\n- Special Styling: Stands out from regular blocks\n- Clear Title: Shows number of blocks combined\n- Full Features: Copy button, syntax highlighting, line numbers\n\n\u26a1 Workflow Tips\n\n1. Plan Your Structure: Organize code blocks logically\n2. Use Exclusions: Filter out example/test code\n3. Test the Output: Ensure combined code works\n4. Document Dependencies: Note requirements in text\n\n\ud83d\udd27 Troubleshooting\n\nNot Seeing Combined Block?\n- Check combineCodeBlocks: true in frontmatter\n- Ensure you have code blocks in the note\n- Verify no syntax errors in YAML\n\nWrong Blocks Included?\n- Check your filter settings\n- Use excludePatterns for unwanted blocks\n- Verify language specifications\n\n---\n\nNote: This very page has combined code blocks enabled! Check the bottom to see all the YAML configurations combined into one block. yaml Basic Setup ---\ntitle: My Tutorial\ncombineCodeBlocks: true\ncombinedBlockLanguage: javascript\n--- yaml Advanced Configuration ---\ntitle: React Tutorial\ncombineCodeBlocks: true\ncombinedBlockLanguage: javascript\ncombinedBlockTitle: \"Complete React App\"\ncombinedBlockOptions:\n  includeBlockTitles: true      # Add section comments\n  includeOnlyLanguage: javascript  # Only JavaScript blocks\n  skipEmptyBlocks: true         # Ignore empty blocks\n  separator: \"\\n// ---\\n\"       # Between sections\n  excludePatterns: [\"test\", \"example\"]  # Skip these\n--- yaml API Documentation Config ---\ncombineCodeBlocks: true\ncombinedBlockLanguage: python\ncombinedBlockTitle: \"Complete API Client\"\ncombinedBlockOptions:\n  includeOnlyLanguage: python\n  excludePatterns: [\"output\", \"response\"]\n--- combinedBlockOptions:\n  includeOnlyLanguage: javascript combinedBlockOptions:\n  excludePatterns: [\"test\", \"mock\", \"example\"] combinedBlockOptions:\n  separator: \"\\n\\n/* ==================== */\\n\\n\" javascript Database Connection const db = await connect(config);",
      "code_blocks_count": 7
    },
    {
      "path": "/notes/tutorials/features/images-media.md",
      "context": "tutorials",
      "metadata": {
        "title": "Image Usage Guide",
        "tags": [
          "documentation",
          "guide",
          "images"
        ],
        "created": "2025-01-06",
        "author": "Wiki Admin",
        "description": "How to add and use images in your notes",
        "updated": null,
        "category": null,
        "status": null,
        "aliases": [],
        "related": [],
        "dependencies": [],
        "keywords": [],
        "tableOfContents": "auto",
        "hideFromSearch": false
      },
      "content_preview": "This guide demonstrates how to add images to your notes using various methods and styling options.\n\n\n\n\nThe simplest way to add an image is using standard Markdown syntax:\n\nmarkdown\n!Alt text\n\n\nExample...",
      "searchable_content": "\nImage Usage Guide\n\nThis guide demonstrates how to add images to your notes using various methods and styling options.\n\nBasic Image Usage\n\nStandard Markdown Syntax\nThe simplest way to add an image is using standard Markdown syntax:\n\nmarkdown\n!Alt text\n\n\nExample:\nmarkdown\n!A beautiful sunset over the mountains\n\n\nHTML Image Syntax\nFor more control, use HTML img tags:\n\nhtml\n<img src=\"/images/example.jpg\" alt=\"Detailed description\" title=\"Hover tooltip text\">\n\n\nWith Click-to-Enlarge\nhtml\n<a href=\"/images/full-size/diagram.png\" target=\"blank\">\n  <img src=\"/images/thumbnails/diagram.png\" alt=\"System architecture diagram\">\n</a>\n\n\nImage Storage Organization\n\nRecommended Directory Structure\n\n/images/\n\u251c\u2500\u2500 notes/              # General note images\n\u251c\u2500\u2500 tutorials/          # Tutorial screenshots\n\u251c\u2500\u2500 reference/          # Charts, diagrams, references\n\u251c\u2500\u2500 projects/           # Project-specific images\n\u251c\u2500\u2500 screenshots/        # UI screenshots\n\u251c\u2500\u2500 diagrams/           # Technical diagrams\n\u251c\u2500\u2500 icons/             # Small icons and symbols\n\u251c\u2500\u2500 banners/           # Header/banner images\n\u251c\u2500\u2500 thumbnails/        # Smaller preview versions\n\u2514\u2500\u2500 originals/         # Full-resolution source images\n\n\nFile Naming Conventions\n- Use descriptive names: user-login-flow.png instead of img1.png\n- Include dimensions for variants: logo-256x256.png, logo-128x128.png\n- Use consistent format: project-namescreenshot2024-01-15.png\n\nImage Sizing and Alignment\n\nSize Control with Keywords\nUse size keywords in your alt text for automatic sizing:\n\nmarkdown\n!tiny: Small icon          # Max width: 100px\n!small: Medium image             # Max width: 300px  \n!medium: Standard image          # Max width: 600px\n!large: Full width image         # Max width: 900px\n!full: Container width           # 100% width\n!xlarge: Extra large             # Max width: 1200px\n\n\nAlignment Options\nControl image positioning with alignment keywords:\n\nmarkdown\n!left: Float left with text wrap\n!right: Float right with text wrap\n!center: Centered block image\n!inline: Inline with text\n\n\nCombining Size and Alignment\nmarkdown\n!left small: Small left-aligned image\n!right medium: Medium right-aligned image\n!center large: Large centered image\n\n\nCustom CSS Classes (HTML Method)\nhtml\n<img src=\"/images/example.jpg\" \n     alt=\"Description\" \n     class=\"img-responsive img-rounded img-shadow\"\n     style=\"max-width: 450px;\">\n\n\nAdvanced Image Layouts\n\nImages with Captions\nMultiple caption approaches:\n\nMethod 1: HTML Figure Element\nhtml\n<figure>\n  <img src=\"/images/architecture.png\" alt=\"System architecture overview\">\n  <figcaption>\n    <strong>Figure 1:</strong> High-level system architecture showing \n    microservices, databases, and external integrations.\n  </figcaption>\n</figure>\n\n\nMethod 2: Markdown with HTML Caption\nmarkdown\n!Database schema diagram\nFigure 2: Database relationship diagram showing all tables and foreign keys\n\n\nMethod 3: Enhanced Figure with Styling\nhtml\n<figure class=\"image-figure\">\n  <img src=\"/images/user-flow.png\" \n       alt=\"User registration and onboarding flow\" \n       title=\"Click to view full size\">\n  <figcaption>\n    <span class=\"figure-label\">User Flow Diagram</span><br>\n    Complete user journey from registration through first login, \n    including email verification and profile setup steps.\n  </figcaption>\n</figure>\n\n\nSide-by-Side Image Comparisons\nhtml\n<div class=\"image-comparison\">\n  <div class=\"comparison-item\">\n    <img src=\"/images/before.png\" alt=\"Before optimization\">\n    <p><strong>Before:</strong> Page load time 3.2 seconds</p>\n  </div>\n  <div class=\"comparison-item\">\n    <img src=\"/images/after.png\" alt=\"After optimization\">\n    <p><strong>After:</strong> Page load time 0.8 seconds</p>\n  </div>\n</div>\n\n\nImage Gallery Layout\nhtml\n<div class=\"image-gallery\">\n  <div class=\"gallery-item\">\n    <img src=\"/images/gallery/screenshot-1.png\" alt=\"Login screen\">\n    <span class=\"gallery-caption\">Login Interface</span>\n  </div>\n  <div class=\"gallery-item\">\n    <img src=\"/images/gallery/screenshot-2.png\" alt=\"Dashboard view\">\n    <span class=\"gallery-caption\">Main Dashboard</span>\n  </div>\n  <div class=\"gallery-item\">\n    <img src=\"/images/gallery/screenshot-3.png\" alt=\"Settings panel\">\n    <span class=\"gallery-caption\">Settings Panel</span>\n  </div>\n</div>\n\n\nImage Formats and Use Cases\n\nJPEG - Best for Photographs\nmarkdown\n!Mountain landscape photo\n\n- Use for: Photos, complex images with many colors\n- Compression: Lossy, smaller file sizes\n- Transparency: Not supported\n\nPNG - Best for Screenshots and Graphics\nmarkdown\n!User interface screenshot\n\n- Use for: Screenshots, logos, images with transparency\n- Compression: Lossless, larger file sizes\n- Transparency: Supported\n\nSVG - Best for Logos and Icons\nmarkdown\n!Company logo\n\n- Use for: Logos, icons, simple graphics\n- Scalability: Vector-based, infinite scaling\n- File size: Very small for simple graphics\n\nWebP - Modern Format\nhtml\n<picture>\n  <source srcset=\"/images/hero.webp\" type=\"image/webp\">\n  <img src=\"/images/hero.jpg\" alt=\"Hero image with fallback\">\n</picture>\n\n\nGIF - Animated Images\nmarkdown\n!Loading animation\n\n\nResponsive Image Techniques\n\nDifferent Sizes for Different Screens\nhtml\n<picture>\n  <source media=\"(max-width: 480px)\" srcset=\"/images/mobile/banner-480w.jpg\">\n  <source media=\"(max-width: 768px)\" srcset=\"/images/tablet/banner-768w.jpg\">\n  <source media=\"(max-width: 1200px)\" srcset=\"/images/desktop/banner-1200w.jpg\">\n  <img src=\"/images/desktop/banner-1200w.jpg\" alt=\"Responsive banner image\">\n</picture>\n\n\nHigh-DPI Display Support\nhtml\n<img src=\"/images/logo.png\" \n     srcset=\"/images/logo.png 1x, /images/logo@2x.png 2x\" \n     alt=\"Company logo\">\n\n\nLazy Loading for Performance\nhtml\n<img src=\"/images/placeholder.jpg\" \n     data-src=\"/images/large-image.jpg\" \n     alt=\"Large image with lazy loading\"\n     loading=\"lazy\">\n\n\nExternal vs Local Images\n\nLocal Images (Recommended)\nmarkdown\n<!-- Relative path from project root -->\n!Local screenshot\n\n<!-- Absolute path (if needed) -->\n!Local diagram\n\n\nExternal Images\nmarkdown\n<!-- Direct external URL -->\n!External image\n\n<!-- External with fallback -->\n!Profile photo\n\n\nCDN Images with Local Fallback\nhtml\n<img src=\"https://cdn.example.com/images/banner.jpg\" \n     alt=\"Banner image\" \n     onerror=\"this.src='/images/fallback/banner.jpg'\">\n\n\nAccessibility and SEO Optimization\n\nComprehensive Alt Text\nmarkdown\n<!-- Poor alt text -->\n!Image\n\n<!-- Good alt text -->\n!Bar chart showing 40% increase in user engagement over 6 months\n\n<!-- Context-specific alt text -->\n!Error: Form validation showing required email field highlighted in red\n\n\nTitle Attributes for Additional Context\nhtml\n<img src=\"/images/complex-diagram.png\" \n     alt=\"Database relationship diagram\" \n     title=\"Click to view full-size version with zoom capability\">\n\n\nARIA Labels for Enhanced Accessibility\nhtml\n<img src=\"/images/status-icon.png\" \n     alt=\"Success status\" \n     aria-label=\"Operation completed successfully\"\n     role=\"img\">\n\n\nDecorative Images\nhtml\n<!-- For purely decorative images -->\n<img src=\"/images/decorative-border.png\" alt=\"\" role=\"presentation\">\n\n\nImage Optimization Examples\n\nFile Size Optimization\nmarkdown\n<!-- Original: 2.5MB -->\n!Original photo\n\n<!-- Optimized: 250KB -->\n!Optimized photo\n\n<!-- Thumbnail: 15KB -->\n!Thumbnail preview\n\n\nProgressive Loading Strategy\nhtml\n<!-- Thumbnail loads first -->\n<img src=\"/images/thumbnails/preview.jpg\" \n     alt=\"Preview image\"\n     style=\"filter: blur(5px); transition: filter 0.3s;\">\n\n<!-- Full image loads in background -->\n<img src=\"/images/full/high-res.jpg\" \n     alt=\"Full resolution image\"\n     onload=\"this.previousElementSibling.style.filter='none';\"\n     style=\"position: absolute; opacity: 0; transition: opacity 0.3s;\">\n\n\nAdvanced Image Features\n\nImage Maps (Clickable Areas)\nhtml\n<img src=\"/images/office-layout.png\" alt=\"Office floor plan\" usemap=\"#office-map\">\n<map name=\"office-map\">\n  <area shape=\"rect\" coords=\"10,10,100,50\" href=\"#meeting-room\" alt=\"Conference Room A\">\n  <area shape=\"circle\" coords=\"150,75,25\" href=\"#kitchen\" alt=\"Kitchen Area\">\n  <area shape=\"poly\" coords=\"200,10,250,50,200,90,150,50\" href=\"#workspace\" alt=\"Open Workspace\">\n</map>\n\n\nImage Overlays and Annotations\nhtml\n<div class=\"image-container\">\n  <img src=\"/images/screenshot.png\" alt=\"Application interface\">\n  <div class=\"image-overlay\">\n    <div class=\"annotation\" style=\"top: 20%; left: 30%;\">\n      <span class=\"annotation-marker\">1</span>\n      <div class=\"annotation-tooltip\">Navigation menu</div>\n    </div>\n    <div class=\"annotation\" style=\"top: 50%; left: 70%;\">\n      <span class=\"annotation-marker\">2</span>\n      <div class=\"annotation-tooltip\">Main content area</div>\n    </div>\n  </div>\n</div>\n\n\nImage Carousels/Slideshows\nhtml\n<div class=\"image-slideshow\">\n  <div class=\"slide active\">\n    <img src=\"/images/slides/slide-1.jpg\" alt=\"Feature overview\">\n    <p class=\"slide-caption\">Main features and capabilities</p>\n  </div>\n  <div class=\"slide\">\n    <img src=\"/images/slides/slide-2.jpg\" alt=\"Implementation details\">\n    <p class=\"slide-caption\">Technical implementation</p>\n  </div>\n  <div class=\"slide\">\n    <img src=\"/images/slides/slide-3.jpg\" alt=\"Results and metrics\">\n    <p class=\"slide-caption\">Performance metrics and results</p>\n  </div>\n</div>\n\n\nExternal Images and Hosting\n\nGitHub Images\nmarkdown\n!README diagram\n\n\nGitLab Images  \nmarkdown\n!Architecture diagram\n\n\nImage Hosting Services\nmarkdown\n<!-- Imgur -->\n!Hosted image\n\n<!-- AWS S3 -->\n!S3 hosted\n\n<!-- Cloudinary -->\n!Cloudinary optimized\n\n\nBest Practices\n\n1. Use descriptive alt text - This helps with accessibility and SEO\n2. Optimize image sizes - Large images slow down page loading\n3. Use appropriate formats:\n   - JPEG for photographs\n   - PNG for screenshots and images with transparency\n   - SVG for logos and diagrams\n4. Organize images - Keep your images directory structure clean and logical\n\nImage Styling\n\nAll images automatically receive:\n- Rounded corners for a modern look\n- Subtle shadow on hover\n- Smooth transitions\n- Responsive sizing (never exceed container width)\n\nLive Example\n\nHere's a demonstration using a placeholder image:\n\n!Demo placeholder image\n\nExample Gallery\n\nHere's how you might create an image gallery using a combination of techniques:\n\nmarkdown\nProject Screenshots\n\n!small left: Login screen\nThe login screen features a clean, minimalist design with email and password fields.\n\n!small right: Dashboard view\nThe dashboard provides an overview of all key metrics and recent activity.\n\n<figure>\n  <img src=\"/images/projects/analytics.png\" alt=\"Analytics page showing graphs\">\n  <figcaption>The analytics page offers detailed insights with interactive charts and graphs.</figcaption>\n</figure>\n\n\nAlignment Examples\n\nLeft-aligned Image\n!left small: Sample image aligned to the left\nLorem ipsum dolor sit amet, consectetur adipiscing elit. This text wraps around the left-aligned image. The image is floated to the left with appropriate margins to create a nice visual flow. You can continue adding more text here and it will wrap around the image naturally.\n\nRight-aligned Image\n!right small: Sample image aligned to the right\nLorem ipsum dolor sit amet, consectetur adipiscing elit. This text wraps around the right-aligned image. The image is floated to the right with appropriate margins. This creates an interesting layout where text flows on the left side of the image.\n\nCentered Image with Caption\n<figure>\n  <img src=\"/images/notes/demo-placeholder.svg\" alt=\"medium: Centered demonstration image\">\n  <figcaption>This is a centered image with a caption. The caption provides additional context about the image content.</figcaption>\n</figure>\n\nTroubleshooting\n\nImage not showing?\n- Check the file path is correct\n- Ensure the image file exists in the /images/ directory\n- Verify the file extension matches (case-sensitive on some systems)\n\nImage too large?\n- Use the size keywords (small, medium, large)\n- Consider optimizing the image file itself\n- Use image compression tools before uploading\n\nText not wrapping properly?\n- Ensure you're using the correct alignment syntax\n- Add clear fixes after floated images if needed ![Alt text](path/to/image.jpg) ![A beautiful sunset over the mountains](/images/notes/sunset.jpg) <img src=\"/images/example.jpg\" alt=\"Detailed description\" title=\"Hover tooltip text\"> <a href=\"/images/full-size/diagram.png\" target=\"_blank\">\n  <img src=\"/images/thumbnails/diagram.png\" alt=\"System architecture diagram\">\n</a> /images/\n\u251c\u2500\u2500 notes/              # General note images\n\u251c\u2500\u2500 tutorials/          # Tutorial screenshots\n\u251c\u2500\u2500 reference/          # Charts, diagrams, references\n\u251c\u2500\u2500 projects/           # Project-specific images\n\u251c\u2500\u2500 screenshots/        # UI screenshots\n\u251c\u2500\u2500 diagrams/           # Technical diagrams\n\u251c\u2500\u2500 icons/             # Small icons and symbols\n\u251c\u2500\u2500 banners/           # Header/banner images\n\u251c\u2500\u2500 thumbnails/        # Smaller preview versions\n\u2514\u2500\u2500 originals/         # Full-resolution source images ![tiny: Small icon](/images/icons/settings.png)          # Max width: 100px\n![small: Medium image](/images/example.jpg)             # Max width: 300px  \n![medium: Standard image](/images/example.jpg)          # Max width: 600px\n![large: Full width image](/images/example.jpg)         # Max width: 900px\n![full: Container width](/images/example.jpg)           # 100% width\n![xlarge: Extra large](/images/example.jpg)             # Max width: 1200px ![left: Float left with text wrap](/images/example.jpg)\n![right: Float right with text wrap](/images/example.jpg)\n![center: Centered block image](/images/example.jpg)\n![inline: Inline with text](/images/small-icon.png) ![left small: Small left-aligned image](/images/thumb.jpg)\n![right medium: Medium right-aligned image](/images/screenshot.png)\n![center large: Large centered image](/images/banner.jpg) <img src=\"/images/example.jpg\" \n     alt=\"Description\" \n     class=\"img-responsive img-rounded img-shadow\"\n     style=\"max-width: 450px;\"> <figure>\n  <img src=\"/images/architecture.png\" alt=\"System architecture overview\">\n  <figcaption>\n    <strong>Figure 1:</strong> High-level system architecture showing \n    microservices, databases, and external integrations.\n  </figcaption>\n</figure> ![Database schema diagram](/images/database-schema.png)\n*Figure 2: Database relationship diagram showing all tables and foreign keys* <figure class=\"image-figure\">\n  <img src=\"/images/user-flow.png\" \n       alt=\"User registration and onboarding flow\" \n       title=\"Click to view full size\">\n  <figcaption>\n    <span class=\"figure-label\">User Flow Diagram</span><br>\n    Complete user journey from registration through first login, \n    including email verification and profile setup steps.\n  </figcaption>\n</figure> <div class=\"image-comparison\">\n  <div class=\"comparison-item\">\n    <img src=\"/images/before.png\" alt=\"Before optimization\">\n    <p><strong>Before:</strong> Page load time 3.2 seconds</p>\n  </div>\n  <div class=\"comparison-item\">\n    <img src=\"/images/after.png\" alt=\"After optimization\">\n    <p><strong>After:</strong> Page load time 0.8 seconds</p>\n  </div>\n</div> <div class=\"image-gallery\">\n  <div class=\"gallery-item\">\n    <img src=\"/images/gallery/screenshot-1.png\" alt=\"Login screen\">\n    <span class=\"gallery-caption\">Login Interface</span>\n  </div>\n  <div class=\"gallery-item\">\n    <img src=\"/images/gallery/screenshot-2.png\" alt=\"Dashboard view\">\n    <span class=\"gallery-caption\">Main Dashboard</span>\n  </div>\n  <div class=\"gallery-item\">\n    <img src=\"/images/gallery/screenshot-3.png\" alt=\"Settings panel\">\n    <span class=\"gallery-caption\">Settings Panel</span>\n  </div>\n</div> ![Mountain landscape photo](/images/landscapes/mountain-sunset.jpg) ![User interface screenshot](/images/screenshots/dashboard.png) ![Company logo](/images/logos/company-logo.svg) <picture>\n  <source srcset=\"/images/hero.webp\" type=\"image/webp\">\n  <img src=\"/images/hero.jpg\" alt=\"Hero image with fallback\">\n</picture> ![Loading animation](/images/animations/loading-spinner.gif) <picture>\n  <source media=\"(max-width: 480px)\" srcset=\"/images/mobile/banner-480w.jpg\">\n  <source media=\"(max-width: 768px)\" srcset=\"/images/tablet/banner-768w.jpg\">\n  <source media=\"(max-width: 1200px)\" srcset=\"/images/desktop/banner-1200w.jpg\">\n  <img src=\"/images/desktop/banner-1200w.jpg\" alt=\"Responsive banner image\">\n</picture> <img src=\"/images/logo.png\" \n     srcset=\"/images/logo.png 1x, /images/logo@2x.png 2x\" \n     alt=\"Company logo\"> <img src=\"/images/placeholder.jpg\" \n     data-src=\"/images/large-image.jpg\" \n     alt=\"Large image with lazy loading\"\n     loading=\"lazy\"> <!-- Relative path from project root -->\n![Local screenshot](/images/screenshots/interface.png)\n\n<!-- Absolute path (if needed) -->\n![Local diagram](../images/diagrams/flow-chart.svg) <!-- Direct external URL -->\n![External image](https://example.com/images/photo.jpg)\n\n<!-- External with fallback -->\n![Profile photo](https://avatars.githubusercontent.com/user123?s=200) <img src=\"https://cdn.example.com/images/banner.jpg\" \n     alt=\"Banner image\" \n     onerror=\"this.src='/images/fallback/banner.jpg'\"> <!-- Poor alt text -->\n![Image](/images/chart.png)\n\n<!-- Good alt text -->\n![Bar chart showing 40% increase in user engagement over 6 months](/images/engagement-chart.png)\n\n<!-- Context-specific alt text -->\n![Error: Form validation showing required email field highlighted in red](/images/form-error.png) <img src=\"/images/complex-diagram.png\" \n     alt=\"Database relationship diagram\" \n     title=\"Click to view full-size version with zoom capability\"> <img src=\"/images/status-icon.png\" \n     alt=\"Success status\" \n     aria-label=\"Operation completed successfully\"\n     role=\"img\"> <!-- For purely decorative images -->\n<img src=\"/images/decorative-border.png\" alt=\"\" role=\"presentation\"> <!-- Original: 2.5MB -->\n![Original photo](/images/originals/vacation-photo.jpg)\n\n<!-- Optimized: 250KB -->\n![Optimized photo](/images/optimized/vacation-photo-compressed.jpg)\n\n<!-- Thumbnail: 15KB -->\n![Thumbnail preview](/images/thumbnails/vacation-photo-thumb.jpg) <!-- Thumbnail loads first -->\n<img src=\"/images/thumbnails/preview.jpg\" \n     alt=\"Preview image\"\n     style=\"filter: blur(5px); transition: filter 0.3s;\">\n\n<!-- Full image loads in background -->\n<img src=\"/images/full/high-res.jpg\" \n     alt=\"Full resolution image\"\n     onload=\"this.previousElementSibling.style.filter='none';\"\n     style=\"position: absolute; opacity: 0; transition: opacity 0.3s;\"> <img src=\"/images/office-layout.png\" alt=\"Office floor plan\" usemap=\"#office-map\">\n<map name=\"office-map\">\n  <area shape=\"rect\" coords=\"10,10,100,50\" href=\"#meeting-room\" alt=\"Conference Room A\">\n  <area shape=\"circle\" coords=\"150,75,25\" href=\"#kitchen\" alt=\"Kitchen Area\">\n  <area shape=\"poly\" coords=\"200,10,250,50,200,90,150,50\" href=\"#workspace\" alt=\"Open Workspace\">\n</map> <div class=\"image-container\">\n  <img src=\"/images/screenshot.png\" alt=\"Application interface\">\n  <div class=\"image-overlay\">\n    <div class=\"annotation\" style=\"top: 20%; left: 30%;\">\n      <span class=\"annotation-marker\">1</span>\n      <div class=\"annotation-tooltip\">Navigation menu</div>\n    </div>\n    <div class=\"annotation\" style=\"top: 50%; left: 70%;\">\n      <span class=\"annotation-marker\">2</span>\n      <div class=\"annotation-tooltip\">Main content area</div>\n    </div>\n  </div>\n</div> <div class=\"image-slideshow\">\n  <div class=\"slide active\">\n    <img src=\"/images/slides/slide-1.jpg\" alt=\"Feature overview\">\n    <p class=\"slide-caption\">Main features and capabilities</p>\n  </div>\n  <div class=\"slide\">\n    <img src=\"/images/slides/slide-2.jpg\" alt=\"Implementation details\">\n    <p class=\"slide-caption\">Technical implementation</p>\n  </div>\n  <div class=\"slide\">\n    <img src=\"/images/slides/slide-3.jpg\" alt=\"Results and metrics\">\n    <p class=\"slide-caption\">Performance metrics and results</p>\n  </div>\n</div> ![README diagram](https://raw.githubusercontent.com/username/repo/main/docs/diagram.png) ![Architecture diagram](https://gitlab.com/username/project/-/raw/main/docs/architecture.png) <!-- Imgur -->\n![Hosted image](https://i.imgur.com/AbCdEfG.png)\n\n<!-- AWS S3 -->\n![S3 hosted](https://my-bucket.s3.amazonaws.com/images/photo.jpg)\n\n<!-- Cloudinary -->\n![Cloudinary optimized](https://res.cloudinary.com/account/image/upload/v1234/sample.jpg) ### Project Screenshots\n\n![small left: Login screen](/images/projects/login.png)\nThe login screen features a clean, minimalist design with email and password fields.\n\n![small right: Dashboard view](/images/projects/dashboard.png)\nThe dashboard provides an overview of all key metrics and recent activity.\n\n<figure>\n  <img src=\"/images/projects/analytics.png\" alt=\"Analytics page showing graphs\">\n  <figcaption>The analytics page offers detailed insights with interactive charts and graphs.</figcaption>\n</figure>",
      "code_blocks_count": 38
    },
    {
      "path": "/notes/tutorials/features/themes.md",
      "context": "tutorials",
      "metadata": {
        "title": "Theme Showcase & Test",
        "tags": [
          "themes",
          "demo",
          "showcase",
          "styling"
        ],
        "created": "2025-01-06",
        "author": "Wiki Admin",
        "description": "Comprehensive showcase of all 70 professional themes with various code examples",
        "updated": "2025-06-13",
        "category": null,
        "status": null,
        "aliases": [],
        "related": [],
        "dependencies": [],
        "keywords": [],
        "tableOfContents": "auto",
        "hideFromSearch": false
      },
      "content_preview": "This page showcases all 70 professional themes available in the Notes Wiki system. Each theme is carefully crafted to provide excellent readability and beautiful syntax highlighting.\n\n\n\n1. Open Theme ...",
      "searchable_content": "\nTheme Showcase & Test\n\nThis page showcases all 70 professional themes available in the Notes Wiki system. Each theme is carefully crafted to provide excellent readability and beautiful syntax highlighting.\n\nHow to Test Themes\n\n1. Open Theme Picker - Click the theme selector (\ud83c\udfa8) in the header\n2. Preview Themes - Hover over any theme card to see a live preview\n3. Apply Theme - Click a theme card to apply it permanently\n4. Auto Detection - Enable auto light/dark theme detection in settings\n\nComplete Theme Collection (70 Themes)\n\n\u2728 Classic Themes\n- Light - Clean, minimal light theme for daytime reading\n- Dark - Comfortable dark theme for extended coding sessions\n\n\ud83c\udfaf Editor-Inspired Themes\n- VSCode Dark Plus - The beloved VS Code default dark theme\n- One Dark Pro - Atom's iconic dark theme with enhanced colors\n- Monokai - The classic Sublime Text theme with vibrant syntax colors\n- Palenight - Material Theme's elegant purple-tinted dark theme\n- Material Ocean - Deep blue Material Design theme\n- Material Darker - Darker variant of Material theme\n- Material Palenight - Purple-hued Material theme variant\n\n\ud83c\udf38 Catppuccin Collection\n- Catppuccin Mocha - Warm, cozy dark theme with soft pastels\n- Catppuccin Latte - Light, cream-colored theme for bright environments\n\n\ud83c\udf39 Ros\u00e9 Pine Collection  \n- Ros\u00e9 Pine - Soho vibes with natural pine and faux fur tones\n- Ros\u00e9 Pine Dawn - Light variant with warm morning colors\n\n\ud83d\udc19 GitHub Themes\n- GitHub Light - GitHub's clean, professional light theme\n- GitHub Dark - GitHub's modern dark theme\n\n\ud83c\udf0a Solarized Collection\n- Solarized Light - Precision colors for machines and people (light)\n- Solarized Dark - The dark variant of the scientifically designed palette\n\n\ud83c\udfd4\ufe0f Nordic Themes\n- Nord - Arctic, north-bluish color palette inspired by the beauty of the arctic\n- Nordic - Scandinavian-inspired minimal theme\n\n\ud83c\udf42 Gruvbox Collection\n- Gruvbox Dark - Retro groove with warm, earthy dark colors\n- Gruvbox Light - Light variant with vintage paper tones\n\n\ud83c\udf03 Tokyo Night Collection\n- Tokyo Night - Inspired by the neon lights of Tokyo at night\n\n\ud83c\udfa8 Ayu Collection\n- Ayu Dark - Modern dark theme with carefully balanced colors\n- Ayu Mirage - Perfect balance between light and dark with muted colors\n- Ayu Light - Clean, bright theme with excellent contrast\n\n\ud83c\udf32 Nature-Inspired Themes\n- Everforest Dark - Forest-inspired theme with natural green tones\n- Kanagawa - Japanese aesthetic inspired by \"The Great Wave\"\n- Zenburn - Low contrast theme designed to reduce eye strain\n\n\u26a1 High-Tech Themes\n- Matrix - Enter the digital rain with green-on-black cyberpunk vibes\n- Cyberpunk - Neon-soaked future aesthetic with electric colors\n- 2077 - Inspired by futuristic cityscapes and neon lights\n- Hackthebox - Hacker terminal aesthetic with green accent colors\n\n\ud83c\udf08 Colorful & Unique Themes\n- Vaporwave - 80s retro-futuristic vibes with pink and purple gradients\n- Hotdog Stand - Windows 3.1 classic with bold red and yellow contrast\n- Shades of Purple - Rich purple theme with excellent syntax highlighting\n- Witch Hazel - Mystical purple theme with magical color combinations\n\n\ud83c\udf19 Tomorrow Collection\n- Tomorrow Night - Part of the popular Tomorrow theme family\n\n\ud83d\udc99 Blue-Tinted Themes\n- Cobalt2 - Wes Bos's popular blue-based dark theme\n- Bluloco Dark - Blue-focused dark theme with vibrant syntax colors\n- Bluloco Light - Light variant with blue accents\n- Spacegray - Space-inspired gray-blue theme\n\n\u2744\ufe0f Winter Themes\n- Winter Is Coming Dark - Dark theme inspired by winter landscapes\n- Winter Is Coming Light - Light winter theme with cool tones\n\n\ud83c\udfae Gaming & Entertainment\n- Lucario - Pok\u00e9mon-inspired blue and steel theme\n- Oxocarbon - IBM's modern design language theme\n- Noctis - Night-time inspired dark theme\n- Thinkultra - Minimalist theme with clean typography\n\n\ud83c\udfad Specialized Themes  \n- Atom One Light - Atom's default light theme\n- Protonmail - Inspired by ProtonMail's clean interface\n\nHow to Test\n\n1. Open the theme picker (sun/moon icon in header)\n2. Hover over each theme to preview it\n3. Click to apply the theme permanently\n4. Check that all code blocks below render correctly\n\nJavaScript Example\n\njavascript title:\"JavaScript Class Example\"\n// ES6 Class with various syntax elements\nclass ThemeManager {\n    constructor(options = {}) {\n        this.themes = options.themes || [];\n        this.currentTheme = options.defaultTheme || 'light';\n        this.callbacks = new Map();\n        this.initialized = false;\n    }\n\n    async initialize() {\n        try {\n            // Load saved theme from localStorage\n            const saved = localStorage.getItem('theme');\n            if (saved && this.themes.includes(saved)) {\n                this.currentTheme = saved;\n            }\n            \n            // Apply the theme\n            await this.applyTheme(this.currentTheme);\n            this.initialized = true;\n            \n            return { success: true, theme: this.currentTheme };\n        } catch (error) {\n            console.error('Failed to initialize theme:', error);\n            return { success: false, error: error.message };\n        }\n    }\n\n    applyTheme(themeName) {\n        // Validate theme exists\n        if (!this.themes.includes(themeName)) {\n            throw new Error(Theme \"${themeName}\" not found);\n        }\n\n        // Apply theme to DOM\n        document.documentElement.setAttribute('data-theme', themeName);\n        \n        // Save preference\n        localStorage.setItem('theme', themeName);\n        \n        // Trigger callbacks\n        this.callbacks.forEach(callback => callback(themeName));\n    }\n\n    // Arrow function property\n    onChange = (callback) => {\n        const id = Date.now();\n        this.callbacks.set(id, callback);\n        return () => this.callbacks.delete(id);\n    }\n}\n\n// Usage\nconst manager = new ThemeManager({\n    themes: ['light', 'dark', 'monokai'],\n    defaultTheme: 'dark'\n});\n\nmanager.initialize().then(result => {\n    console.log('Theme initialized:', result);\n});\n\n\nPython Example\n\npython title:\"Python Data Processing\"\nimport pandas as pd\nimport numpy as np\nfrom datetime import datetime, timedelta\nfrom typing import List, Dict, Optional, Union\nimport asyncio\n\nclass DataProcessor:\n    \"\"\"Process and analyze time series data with various transformations.\"\"\"\n    \n    def init(self, datapath: str, cachesize: int = 1000):\n        self.datapath = datapath\n        self.cachesize = cachesize\n        self.cache: Dict[str, pd.DataFrame] = {}\n        self.metadata = {\n            'created': datetime.now(),\n            'version': '1.0.0',\n            'author': 'System'\n        }\n    \n    @property\n    def iscached(self) -> bool:\n        \"\"\"Check if data is currently cached.\"\"\"\n        return len(self.cache) > 0\n    \n    async def loaddataasync(self, \n                            filepath: str, \n                            columns: Optional[List[str]] = None) -> pd.DataFrame:\n        \"\"\"Asynchronously load data from CSV file.\"\"\"\n        try:\n            # Simulate async operation\n            await asyncio.sleep(0.1)\n            \n            df = pd.readcsv(filepath, usecols=columns)\n            \n            # Cache the result\n            if len(self.cache) < self.cachesize:\n                self.cache[filepath] = df\n            \n            return df\n            \n        except FileNotFoundError as e:\n            print(f\"Error: File {filepath} not found\")\n            raise e\n        except Exception as e:\n            print(f\"Unexpected error: {str(e)}\")\n            raise\n    \n    def processtimeseries(self, \n                          df: pd.DataFrame, \n                          windowsize: int = 7,\n                          aggregation: str = 'mean') -> pd.DataFrame:\n        \"\"\"Apply rolling window calculations to time series data.\"\"\"\n        \n        # Validate inputs\n        if windowsize <= 0:\n            raise ValueError(\"Window size must be positive\")\n        \n        validaggregations = ['mean', 'sum', 'min', 'max', 'std']\n        if aggregation not in validaggregations:\n            raise ValueError(f\"Aggregation must be one of {validaggregations}\")\n        \n        # Apply rolling calculation\n        numericcols = df.selectdtypes(include=[np.number]).columns\n        \n        result = df.copy()\n        for col in numericcols:\n            if aggregation == 'mean':\n                result[f'{col}rolling{windowsize}d'] = df[col].rolling(windowsize).mean()\n            elif aggregation == 'sum':\n                result[f'{col}rolling{windowsize}d'] = df[col].rolling(windowsize).sum()\n            # ... etc\n        \n        return result\n    \n    @staticmethod\n    def generatesampledata(nrows: int = 1000) -> pd.DataFrame:\n        \"\"\"Generate sample time series data for testing.\"\"\"\n        dates = pd.daterange(\n            start='2024-01-01', \n            periods=nrows, \n            freq='D'\n        )\n        \n        data = {\n            'date': dates,\n            'value': np.random.randn(nrows).cumsum() + 100,\n            'volume': np.random.randint(1000, 10000, nrows),\n            'category': np.random.choice(['A', 'B', 'C'], nrows)\n        }\n        \n        return pd.DataFrame(data)\n\nExample usage\nif name == \"main\":\n    processor = DataProcessor(\"./data\")\n    \n    # Generate and process sample data\n    df = DataProcessor.generatesampledata(365)\n    processed = processor.processtimeseries(df, windowsize=30)\n    \n    print(f\"Data shape: {processed.shape}\")\n    print(f\"Columns: {list(processed.columns)}\")\n\n\nHTML/CSS Example\n\nhtml title:\"Responsive Card Component\"\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Theme Card Component</title>\n    <style>\n        / CSS Custom Properties for theming /\n        :root {\n            --card-bg: #ffffff;\n            --card-border: #e5e7eb;\n            --card-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n            --text-primary: #111827;\n            --text-secondary: #6b7280;\n            --accent-color: #3b82f6;\n        }\n\n        / Dark theme override /\n        [data-theme=\"dark\"] {\n            --card-bg: #1f2937;\n            --card-border: #374151;\n            --card-shadow: 0 4px 6px rgba(0, 0, 0, 0.3);\n            --text-primary: #f3f4f6;\n            --text-secondary: #9ca3af;\n            --accent-color: #60a5fa;\n        }\n\n        / Card component styles /\n        .card {\n            background-color: var(--card-bg);\n            border: 1px solid var(--card-border);\n            border-radius: 0.5rem;\n            box-shadow: var(--card-shadow);\n            padding: 1.5rem;\n            margin: 1rem;\n            transition: transform 0.2s ease, box-shadow 0.2s ease;\n        }\n\n        .card:hover {\n            transform: translateY(-2px);\n            box-shadow: 0 8px 12px rgba(0, 0, 0, 0.15);\n        }\n\n        .card-title {\n            color: var(--text-primary);\n            font-size: 1.25rem;\n            font-weight: 600;\n            margin: 0 0 0.5rem 0;\n        }\n\n        .card-description {\n            color: var(--text-secondary);\n            line-height: 1.5;\n            margin: 0 0 1rem 0;\n        }\n\n        .card-link {\n            color: var(--accent-color);\n            text-decoration: none;\n            font-weight: 500;\n            display: inline-flex;\n            align-items: center;\n            gap: 0.25rem;\n        }\n\n        .card-link:hover {\n            text-decoration: underline;\n        }\n\n        / Responsive grid /\n        .card-grid {\n            display: grid;\n            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n            gap: 1rem;\n            padding: 1rem;\n        }\n\n        @media (max-width: 768px) {\n            .card {\n                padding: 1rem;\n            }\n            \n            .card-grid {\n                grid-template-columns: 1fr;\n            }\n        }\n    </style>\n</head>\n<body>\n    <div class=\"card-grid\">\n        <article class=\"card\">\n            <h2 class=\"card-title\">Theme System</h2>\n            <p class=\"card-description\">\n                A comprehensive theming system with CSS custom properties \n                that supports multiple color schemes and automatic theme switching.\n            </p>\n            <a href=\"#\" class=\"card-link\">\n                Learn more\n                <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"currentColor\">\n                    <path d=\"M6.22 3.22a.75.75 0 011.06 0l4.25 4.25a.75.75 0 010 1.06l-4.25 4.25a.75.75 0 01-1.06-1.06L9.94 8 6.22 4.28a.75.75 0 010-1.06z\"/>\n                </svg>\n            </a>\n        </article>\n    </div>\n</body>\n</html>\n\n\nBash/Shell Example\n\nbash title:\"Deployment Script\"\n#!/bin/bash\nTheme deployment and build script\n\nset -euo pipefail\n\nColor output helpers\nRED='\\033[0;31m'\nGREEN='\\033[0;32m'\nYELLOW='\\033[1;33m'\nNC='\\033[0m' # No Color\n\nConfiguration\nTHEMESDIR=\"./themes\"\nBUILDDIR=\"./dist\"\nTHEMEFILES=(\n    \"light.css\"\n    \"dark.css\"\n    \"vscode-dark-plus.css\"\n    \"monokai.css\"\n    \"dracula.css\"\n    \"one-dark-pro.css\"\n    \"solarized-light.css\"\n    \"solarized-dark.css\"\n    \"github-light.css\"\n    \"github-dark.css\"\n    \"nord.css\"\n    \"gruvbox-dark.css\"\n    \"gruvbox-light.css\"\n    \"tokyo-night.css\"\n    \"palenight.css\"\n)\n\nFunction to print colored output\nlog() {\n    local level=$1\n    shift\n    case \"$level\" in\n        \"error\")\n            echo -e \"${RED}[ERROR]${NC} $\" >&2\n            ;;\n        \"success\")\n            echo -e \"${GREEN}[SUCCESS]${NC} $\"\n            ;;\n        \"warning\")\n            echo -e \"${YELLOW}[WARNING]${NC} $\"\n            ;;\n        )\n            echo \"[INFO] $\"\n            ;;\n    esac\n}\n\nValidate theme files exist\nvalidatethemes() {\n    log \"info\" \"Validating theme files...\"\n    \n    local missingthemes=()\n    \n    for theme in \"${THEMEFILES[@]}\"; do\n        if [[ ! -f \"$THEMESDIR/$theme\" ]]; then\n            missingthemes+=(\"$theme\")\n        fi\n    done\n    \n    if [[ ${#missingthemes[@]} -gt 0 ]]; then\n        log \"error\" \"Missing theme files:\"\n        printf '%s\\n' \"${missingthemes[@]}\"\n        return 1\n    fi\n    \n    log \"success\" \"All ${#THEMEFILES[@]} theme files found\"\n    return 0\n}\n\nMinify CSS files\nminifythemes() {\n    log \"info\" \"Minifying theme files...\"\n    \n    # Create build directory if it doesn't exist\n    mkdir -p \"$BUILDDIR/themes\"\n    \n    for theme in \"${THEMEFILES[@]}\"; do\n        local input=\"$THEMESDIR/$theme\"\n        local output=\"$BUILDDIR/themes/${theme%.css}.min.css\"\n        \n        # Simple CSS minification (remove comments and extra whitespace)\n        if command -v csso &> /dev/null; then\n            csso \"$input\" -o \"$output\"\n        else\n            # Fallback: basic minification with sed\n            sed -e 's/\\/\\[^]\\\\///g' \\\n                -e 's/\\s\\+/ /g' \\\n                -e 's/:\\s/:/g' \\\n                -e 's/;\\s/;/g' \\\n                -e 's/{\\s/{/g' \\\n                -e 's/}\\s/}/g' \\\n                -e 's/\\n//g' \\\n                \"$input\" > \"$output\"\n        fi\n        \n        log \"success\" \"Minified: ${theme%.css}.min.css\"\n    done\n}\n\nGenerate theme metadata\ngeneratemetadata() {\n    log \"info\" \"Generating theme metadata...\"\n    \n    cat > \"$BUILDDIR/themes/themes.json\" << EOF\n{\n    \"themes\": [\n        $(for i in \"${!THEMEFILES[@]}\"; do\n            theme=\"${THEMEFILES[$i]}\"\n            themeid=\"${theme%.css}\"\n            \n            # Add comma except for last item\n            if [[ $i -lt $((${#THEMEFILES[@]} - 1)) ]]; then\n                echo \"        \\\"$themeid\\\",\"\n            else\n                echo \"        \\\"$themeid\\\"\"\n            fi\n        done)\n    ],\n    \"count\": ${#THEMEFILES[@]},\n    \"generated\": \"$(date -u +\"%Y-%m-%dT%H:%M:%SZ\")\"\n}\nEOF\n    \n    log \"success\" \"Generated theme metadata\"\n}\n\nMain execution\nmain() {\n    log \"info\" \"Starting theme build process...\"\n    \n    # Validate themes\n    if ! validatethemes; then\n        log \"error\" \"Theme validation failed\"\n        exit 1\n    fi\n    \n    # Minify themes\n    minifythemes\n    \n    # Generate metadata\n    generatemetadata\n    \n    log \"success\" \"Theme build completed successfully!\"\n    log \"info\" \"Output directory: $BUILDDIR\"\n}\n\nRun main function\nmain \"$@\"\n\n\nJSON Configuration Example\n\njson title:\"Theme Configuration\"\n{\n    \"themes\": {\n        \"light\": {\n            \"id\": \"light\",\n            \"name\": \"Light\",\n            \"description\": \"Clean light theme for daytime use\",\n            \"type\": \"light\",\n            \"colors\": {\n                \"primary\": \"#3b82f6\",\n                \"secondary\": \"#10b981\",\n                \"background\": \"#ffffff\",\n                \"surface\": \"#f9fafb\",\n                \"text\": {\n                    \"primary\": \"#111827\",\n                    \"secondary\": \"#6b7280\",\n                    \"muted\": \"#9ca3af\"\n                },\n                \"syntax\": {\n                    \"keyword\": \"#2563eb\",\n                    \"string\": \"#059669\",\n                    \"number\": \"#dc2626\",\n                    \"function\": \"#7c3aed\",\n                    \"comment\": \"#6b7280\"\n                }\n            },\n            \"customizations\": {\n                \"scrollbar\": true,\n                \"selection\": true,\n                \"forms\": true\n            }\n        },\n        \"dracula\": {\n            \"id\": \"dracula\",\n            \"name\": \"Dracula\",\n            \"description\": \"Dark theme with vibrant colors\",\n            \"type\": \"dark\",\n            \"colors\": {\n                \"primary\": \"#bd93f9\",\n                \"secondary\": \"#50fa7b\",\n                \"background\": \"#282a36\",\n                \"surface\": \"#21222c\",\n                \"text\": {\n                    \"primary\": \"#f8f8f2\",\n                    \"secondary\": \"#6272a4\",\n                    \"muted\": \"#6272a4\"\n                },\n                \"syntax\": {\n                    \"keyword\": \"#ff79c6\",\n                    \"string\": \"#f1fa8c\",\n                    \"number\": \"#bd93f9\",\n                    \"function\": \"#50fa7b\",\n                    \"comment\": \"#6272a4\"\n                }\n            },\n            \"customizations\": {\n                \"scrollbar\": true,\n                \"selection\": true,\n                \"forms\": true\n            }\n        }\n    },\n    \"defaultTheme\": \"light\",\n    \"autoDetect\": true,\n    \"transitions\": {\n        \"enabled\": true,\n        \"duration\": \"250ms\",\n        \"easing\": \"ease-in-out\"\n    }\n}\n\n\nSQL Example\n\nsql title:\"Theme Usage Analytics\"\n-- Create tables for theme usage tracking\nCREATE TABLE IF NOT EXISTS themeusage (\n    id SERIAL PRIMARY KEY,\n    userid INTEGER NOT NULL,\n    themeid VARCHAR(50) NOT NULL,\n    appliedat TIMESTAMP DEFAULT CURRENTTIMESTAMP,\n    sessionduration INTEGER, -- in seconds\n    devicetype VARCHAR(20),\n    browser VARCHAR(50),\n    systemtheme VARCHAR(10) -- 'light' or 'dark'\n);\n\n-- Index for performance\nCREATE INDEX idxthemeusageusertheme ON themeusage(userid, themeid);\nCREATE INDEX idxthemeusageappliedat ON themeusage(appliedat);\n\n-- View for theme popularity\nCREATE OR REPLACE VIEW themepopularity AS\nSELECT \n    themeid,\n    COUNT(DISTINCT userid) as uniqueusers,\n    COUNT() as totalapplications,\n    AVG(sessionduration) as avgsessionduration,\n    MAX(appliedat) as lastused\nFROM themeusage\nWHERE appliedat >= CURRENTDATE - INTERVAL '30 days'\nGROUP BY themeid\nORDER BY uniqueusers DESC;\n\n-- Function to get user's theme history\nCREATE OR REPLACE FUNCTION getuserthemehistory(puserid INTEGER)\nRETURNS TABLE (\n    themeid VARCHAR(50),\n    appliedat TIMESTAMP,\n    durationhours NUMERIC,\n    devicetype VARCHAR(20)\n) AS $$\nBEGIN\n    RETURN QUERY\n    WITH themesessions AS (\n        SELECT \n            tu.themeid,\n            tu.appliedat,\n            tu.devicetype,\n            LEAD(tu.appliedat) OVER (\n                PARTITION BY tu.userid \n                ORDER BY tu.appliedat\n            ) as nextappliedat\n        FROM themeusage tu\n        WHERE tu.userid = puserid\n    )\n    SELECT \n        ts.themeid,\n        ts.appliedat,\n        ROUND(\n            EXTRACT(EPOCH FROM (\n                COALESCE(ts.nextappliedat, CURRENTTIMESTAMP) - ts.appliedat\n            )) / 3600, \n            2\n        ) as durationhours,\n        ts.devicetype\n    FROM themesessions ts\n    ORDER BY ts.appliedat DESC\n    LIMIT 50;\nEND;\n$$ LANGUAGE plpgsql;\n\n-- Query to find most popular themes by time of day\nWITH hourlyusage AS (\n    SELECT \n        themeid,\n        EXTRACT(HOUR FROM appliedat) as hourofday,\n        COUNT() as usagecount\n    FROM themeusage\n    WHERE appliedat >= CURRENTDATE - INTERVAL '7 days'\n    GROUP BY themeid, hourofday\n),\nrankedthemes AS (\n    SELECT \n        hourofday,\n        themeid,\n        usagecount,\n        ROWNUMBER() OVER (\n            PARTITION BY hourofday \n            ORDER BY usagecount DESC\n        ) as rank\n    FROM hourlyusage\n)\nSELECT \n    hourofday,\n    themeid as mostpopulartheme,\n    usagecount\nFROM rankedthemes\nWHERE rank = 1\nORDER BY hourofday;\n\n\nYAML Configuration\n\nyaml title:\"Theme Build Configuration\"\nTheme build configuration file\nversion: 1.0.0\nbuild:\n  inputdir: ./themes\n  outputdir: ./dist/themes\n  \n  # Minification settings\n  minify:\n    enabled: true\n    removecomments: true\n    removewhitespace: true\n    mergemediaqueries: true\n    \n  # Optimization settings\n  optimize:\n    mergesimilarrules: true\n    removeunusedcss: false\n    inlinecriticalcss: false\n\nTheme definitions\nthemes:\n  - id: light\n    file: light.css\n    type: light\n    default: true\n    \n  - id: dark\n    file: dark.css\n    type: dark\n    \n  - id: vscode-dark-plus\n    file: vscode-dark-plus.css\n    type: dark\n    category: editor\n    \n  - id: monokai\n    file: monokai.css\n    type: dark\n    category: editor\n    \n  - id: dracula\n    file: dracula.css\n    type: dark\n    category: popular\n    \n  - id: one-dark-pro\n    file: one-dark-pro.css\n    type: dark\n    category: editor\n    \n  - id: solarized-light\n    file: solarized-light.css\n    type: light\n    category: classic\n    \n  - id: solarized-dark\n    file: solarized-dark.css\n    type: dark\n    category: classic\n    \n  - id: github-light\n    file: github-light.css\n    type: light\n    category: git\n    \n  - id: github-dark\n    file: github-dark.css\n    type: dark\n    category: git\n    \n  - id: nord\n    file: nord.css\n    type: dark\n    category: nordic\n    \n  - id: gruvbox-dark\n    file: gruvbox-dark.css\n    type: dark\n    category: retro\n    \n  - id: gruvbox-light\n    file: gruvbox-light.css\n    type: light\n    category: retro\n    \n  - id: tokyo-night\n    file: tokyo-night.css\n    type: dark\n    category: modern\n    \n  - id: palenight\n    file: palenight.css\n    type: dark\n    category: material\n\nAuto theme detection\nautotheme:\n  enabled: true\n  lightthemes: [light, solarized-light, github-light, gruvbox-light]\n  darkthemes: [dark, vscode-dark-plus, monokai, dracula, one-dark-pro, \n                solarized-dark, github-dark, nord, gruvbox-dark, \n                tokyo-night, palenight]\n  \n  # Time-based switching (optional)\n  schedule:\n    enabled: false\n    lightstart: \"06:00\"\n    darkstart: \"18:00\"\n\nTheme preview settings\npreview:\n  delayms: 200\n  restoreonleave: true\n  showcolorswatches: true\n\n\nCollapsible Code Example\n\njavascript title:\"Collapsible Example\" collapse:\"true\"\n// This code block is collapsible!\n// Click the arrow to expand/collapse\n\nfunction generateThemeCSS(theme) {\n    const { colors, typography, spacing } = theme;\n    \n    return \n        :root[data-theme=\"${theme.id}\"] {\n            / Color System /\n            --color-primary: ${colors.primary};\n            --color-secondary: ${colors.secondary};\n            --color-accent: ${colors.accent};\n            --color-background: ${colors.background};\n            --color-surface: ${colors.surface};\n            --color-text: ${colors.text};\n            --color-text-muted: ${colors.textMuted};\n            \n            / Typography /\n            --font-family: ${typography.fontFamily};\n            --font-size-base: ${typography.sizeBase};\n            --line-height-base: ${typography.lineHeight};\n            \n            / Spacing /\n            --spacing-unit: ${spacing.unit};\n            --spacing-xs: calc(var(--spacing-unit)  0.25);\n            --spacing-sm: calc(var(--spacing-unit)  0.5);\n            --spacing-md: var(--spacing-unit);\n            --spacing-lg: calc(var(--spacing-unit)  1.5);\n            --spacing-xl: calc(var(--spacing-unit)  2);\n        }\n    ;\n}\n\n// Generate CSS for all themes\nconst themes = getThemeDefinitions();\nconst cssOutput = themes.map(generateThemeCSS).join('\\n\\n');\n\nconsole.log('Generated theme CSS:', cssOutput);\n\n\nTesting Notes\n\nWhen testing themes, pay attention to:\n\n1. Color Contrast - Ensure text is readable against backgrounds\n2. Syntax Highlighting - All token types should be distinguishable\n3. UI Elements - Buttons, links, and interactive elements should be visible\n4. Code Blocks - Headers, titles, and copy buttons should be styled appropriately\n5. Transitions - Theme switching should be smooth without flashing\n6. Hover States - Interactive elements should have clear hover feedback\n7. Selection Colors - Text selection should be visible and pleasant\n8. Scrollbars - Custom scrollbar styling should match the theme\n\nTheme Implementation Complete!\n\nAll 70 professional themes have been successfully implemented with:\n\n- \u2705 Full CSS custom property definitions\n- \u2705 Comprehensive syntax highlighting for all languages\n- \u2705 Smooth theme preview on hover\n- \u2705 System theme detection (auto light/dark)\n- \u2705 Persistent theme selection\n- \u2705 Responsive design with smart context filtering\n- \u2705 Beautiful, consistent styling across all themes\n\nTry switching between themes using the theme picker in the header to see the magic happen! \ud83c\udfa8 javascript JavaScript Class Example // ES6 Class with various syntax elements\nclass ThemeManager {\n    constructor(options = {}) {\n        this.themes = options.themes || [];\n        this.currentTheme = options.defaultTheme || 'light';\n        this.callbacks = new Map();\n        this._initialized = false;\n    }\n\n    async initialize() {\n        try {\n            // Load saved theme from localStorage\n            const saved = localStorage.getItem('theme');\n            if (saved && this.themes.includes(saved)) {\n                this.currentTheme = saved;\n            }\n            \n            // Apply the theme\n            await this.applyTheme(this.currentTheme);\n            this._initialized = true;\n            \n            return { success: true, theme: this.currentTheme };\n        } catch (error) {\n            console.error('Failed to initialize theme:', error);\n            return { success: false, error: error.message };\n        }\n    }\n\n    applyTheme(themeName) {\n        // Validate theme exists\n        if (!this.themes.includes(themeName)) {\n            throw new Error(`Theme \"${themeName}\" not found`);\n        }\n\n        // Apply theme to DOM\n        document.documentElement.setAttribute('data-theme', themeName);\n        \n        // Save preference\n        localStorage.setItem('theme', themeName);\n        \n        // Trigger callbacks\n        this.callbacks.forEach(callback => callback(themeName));\n    }\n\n    // Arrow function property\n    onChange = (callback) => {\n        const id = Date.now();\n        this.callbacks.set(id, callback);\n        return () => this.callbacks.delete(id);\n    }\n}\n\n// Usage\nconst manager = new ThemeManager({\n    themes: ['light', 'dark', 'monokai'],\n    defaultTheme: 'dark'\n});\n\nmanager.initialize().then(result => {\n    console.log('Theme initialized:', result);\n}); python Python Data Processing import pandas as pd\nimport numpy as np\nfrom datetime import datetime, timedelta\nfrom typing import List, Dict, Optional, Union\nimport asyncio\n\nclass DataProcessor:\n    \"\"\"Process and analyze time series data with various transformations.\"\"\"\n    \n    def __init__(self, data_path: str, cache_size: int = 1000):\n        self.data_path = data_path\n        self.cache_size = cache_size\n        self._cache: Dict[str, pd.DataFrame] = {}\n        self._metadata = {\n            'created': datetime.now(),\n            'version': '1.0.0',\n            'author': 'System'\n        }\n    \n    @property\n    def is_cached(self) -> bool:\n        \"\"\"Check if data is currently cached.\"\"\"\n        return len(self._cache) > 0\n    \n    async def load_data_async(self, \n                            file_path: str, \n                            columns: Optional[List[str]] = None) -> pd.DataFrame:\n        \"\"\"Asynchronously load data from CSV file.\"\"\"\n        try:\n            # Simulate async operation\n            await asyncio.sleep(0.1)\n            \n            df = pd.read_csv(file_path, usecols=columns)\n            \n            # Cache the result\n            if len(self._cache) < self.cache_size:\n                self._cache[file_path] = df\n            \n            return df\n            \n        except FileNotFoundError as e:\n            print(f\"Error: File {file_path} not found\")\n            raise e\n        except Exception as e:\n            print(f\"Unexpected error: {str(e)}\")\n            raise\n    \n    def process_timeseries(self, \n                          df: pd.DataFrame, \n                          window_size: int = 7,\n                          aggregation: str = 'mean') -> pd.DataFrame:\n        \"\"\"Apply rolling window calculations to time series data.\"\"\"\n        \n        # Validate inputs\n        if window_size <= 0:\n            raise ValueError(\"Window size must be positive\")\n        \n        valid_aggregations = ['mean', 'sum', 'min', 'max', 'std']\n        if aggregation not in valid_aggregations:\n            raise ValueError(f\"Aggregation must be one of {valid_aggregations}\")\n        \n        # Apply rolling calculation\n        numeric_cols = df.select_dtypes(include=[np.number]).columns\n        \n        result = df.copy()\n        for col in numeric_cols:\n            if aggregation == 'mean':\n                result[f'{col}_rolling_{window_size}d'] = df[col].rolling(window_size).mean()\n            elif aggregation == 'sum':\n                result[f'{col}_rolling_{window_size}d'] = df[col].rolling(window_size).sum()\n            # ... etc\n        \n        return result\n    \n    @staticmethod\n    def generate_sample_data(n_rows: int = 1000) -> pd.DataFrame:\n        \"\"\"Generate sample time series data for testing.\"\"\"\n        dates = pd.date_range(\n            start='2024-01-01', \n            periods=n_rows, \n            freq='D'\n        )\n        \n        data = {\n            'date': dates,\n            'value': np.random.randn(n_rows).cumsum() + 100,\n            'volume': np.random.randint(1000, 10000, n_rows),\n            'category': np.random.choice(['A', 'B', 'C'], n_rows)\n        }\n        \n        return pd.DataFrame(data)\n\n# Example usage\nif __name__ == \"__main__\":\n    processor = DataProcessor(\"./data\")\n    \n    # Generate and process sample data\n    df = DataProcessor.generate_sample_data(365)\n    processed = processor.process_timeseries(df, window_size=30)\n    \n    print(f\"Data shape: {processed.shape}\")\n    print(f\"Columns: {list(processed.columns)}\") html Responsive Card Component <!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Theme Card Component</title>\n    <style>\n        /* CSS Custom Properties for theming */\n        :root {\n            --card-bg: #ffffff;\n            --card-border: #e5e7eb;\n            --card-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n            --text-primary: #111827;\n            --text-secondary: #6b7280;\n            --accent-color: #3b82f6;\n        }\n\n        /* Dark theme override */\n        [data-theme=\"dark\"] {\n            --card-bg: #1f2937;\n            --card-border: #374151;\n            --card-shadow: 0 4px 6px rgba(0, 0, 0, 0.3);\n            --text-primary: #f3f4f6;\n            --text-secondary: #9ca3af;\n            --accent-color: #60a5fa;\n        }\n\n        /* Card component styles */\n        .card {\n            background-color: var(--card-bg);\n            border: 1px solid var(--card-border);\n            border-radius: 0.5rem;\n            box-shadow: var(--card-shadow);\n            padding: 1.5rem;\n            margin: 1rem;\n            transition: transform 0.2s ease, box-shadow 0.2s ease;\n        }\n\n        .card:hover {\n            transform: translateY(-2px);\n            box-shadow: 0 8px 12px rgba(0, 0, 0, 0.15);\n        }\n\n        .card-title {\n            color: var(--text-primary);\n            font-size: 1.25rem;\n            font-weight: 600;\n            margin: 0 0 0.5rem 0;\n        }\n\n        .card-description {\n            color: var(--text-secondary);\n            line-height: 1.5;\n            margin: 0 0 1rem 0;\n        }\n\n        .card-link {\n            color: var(--accent-color);\n            text-decoration: none;\n            font-weight: 500;\n            display: inline-flex;\n            align-items: center;\n            gap: 0.25rem;\n        }\n\n        .card-link:hover {\n            text-decoration: underline;\n        }\n\n        /* Responsive grid */\n        .card-grid {\n            display: grid;\n            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n            gap: 1rem;\n            padding: 1rem;\n        }\n\n        @media (max-width: 768px) {\n            .card {\n                padding: 1rem;\n            }\n            \n            .card-grid {\n                grid-template-columns: 1fr;\n            }\n        }\n    </style>\n</head>\n<body>\n    <div class=\"card-grid\">\n        <article class=\"card\">\n            <h2 class=\"card-title\">Theme System</h2>\n            <p class=\"card-description\">\n                A comprehensive theming system with CSS custom properties \n                that supports multiple color schemes and automatic theme switching.\n            </p>\n            <a href=\"#\" class=\"card-link\">\n                Learn more\n                <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"currentColor\">\n                    <path d=\"M6.22 3.22a.75.75 0 011.06 0l4.25 4.25a.75.75 0 010 1.06l-4.25 4.25a.75.75 0 01-1.06-1.06L9.94 8 6.22 4.28a.75.75 0 010-1.06z\"/>\n                </svg>\n            </a>\n        </article>\n    </div>\n</body>\n</html> bash Deployment Script #!/bin/bash\n# Theme deployment and build script\n\nset -euo pipefail\n\n# Color output helpers\nRED='\\033[0;31m'\nGREEN='\\033[0;32m'\nYELLOW='\\033[1;33m'\nNC='\\033[0m' # No Color\n\n# Configuration\nTHEMES_DIR=\"./themes\"\nBUILD_DIR=\"./dist\"\nTHEME_FILES=(\n    \"light.css\"\n    \"dark.css\"\n    \"vscode-dark-plus.css\"\n    \"monokai.css\"\n    \"dracula.css\"\n    \"one-dark-pro.css\"\n    \"solarized-light.css\"\n    \"solarized-dark.css\"\n    \"github-light.css\"\n    \"github-dark.css\"\n    \"nord.css\"\n    \"gruvbox-dark.css\"\n    \"gruvbox-light.css\"\n    \"tokyo-night.css\"\n    \"palenight.css\"\n)\n\n# Function to print colored output\nlog() {\n    local level=$1\n    shift\n    case \"$level\" in\n        \"error\")\n            echo -e \"${RED}[ERROR]${NC} $*\" >&2\n            ;;\n        \"success\")\n            echo -e \"${GREEN}[SUCCESS]${NC} $*\"\n            ;;\n        \"warning\")\n            echo -e \"${YELLOW}[WARNING]${NC} $*\"\n            ;;\n        *)\n            echo \"[INFO] $*\"\n            ;;\n    esac\n}\n\n# Validate theme files exist\nvalidate_themes() {\n    log \"info\" \"Validating theme files...\"\n    \n    local missing_themes=()\n    \n    for theme in \"${THEME_FILES[@]}\"; do\n        if [[ ! -f \"$THEMES_DIR/$theme\" ]]; then\n            missing_themes+=(\"$theme\")\n        fi\n    done\n    \n    if [[ ${#missing_themes[@]} -gt 0 ]]; then\n        log \"error\" \"Missing theme files:\"\n        printf '%s\\n' \"${missing_themes[@]}\"\n        return 1\n    fi\n    \n    log \"success\" \"All ${#THEME_FILES[@]} theme files found\"\n    return 0\n}\n\n# Minify CSS files\nminify_themes() {\n    log \"info\" \"Minifying theme files...\"\n    \n    # Create build directory if it doesn't exist\n    mkdir -p \"$BUILD_DIR/themes\"\n    \n    for theme in \"${THEME_FILES[@]}\"; do\n        local input=\"$THEMES_DIR/$theme\"\n        local output=\"$BUILD_DIR/themes/${theme%.css}.min.css\"\n        \n        # Simple CSS minification (remove comments and extra whitespace)\n        if command -v csso &> /dev/null; then\n            csso \"$input\" -o \"$output\"\n        else\n            # Fallback: basic minification with sed\n            sed -e 's/\\/\\*[^*]*\\*\\///g' \\\n                -e 's/\\s\\+/ /g' \\\n                -e 's/:\\s/:/g' \\\n                -e 's/;\\s/;/g' \\\n                -e 's/{\\s/{/g' \\\n                -e 's/}\\s/}/g' \\\n                -e 's/\\n//g' \\\n                \"$input\" > \"$output\"\n        fi\n        \n        log \"success\" \"Minified: ${theme%.css}.min.css\"\n    done\n}\n\n# Generate theme metadata\ngenerate_metadata() {\n    log \"info\" \"Generating theme metadata...\"\n    \n    cat > \"$BUILD_DIR/themes/themes.json\" << EOF\n{\n    \"themes\": [\n        $(for i in \"${!THEME_FILES[@]}\"; do\n            theme=\"${THEME_FILES[$i]}\"\n            theme_id=\"${theme%.css}\"\n            \n            # Add comma except for last item\n            if [[ $i -lt $((${#THEME_FILES[@]} - 1)) ]]; then\n                echo \"        \\\"$theme_id\\\",\"\n            else\n                echo \"        \\\"$theme_id\\\"\"\n            fi\n        done)\n    ],\n    \"count\": ${#THEME_FILES[@]},\n    \"generated\": \"$(date -u +\"%Y-%m-%dT%H:%M:%SZ\")\"\n}\nEOF\n    \n    log \"success\" \"Generated theme metadata\"\n}\n\n# Main execution\nmain() {\n    log \"info\" \"Starting theme build process...\"\n    \n    # Validate themes\n    if ! validate_themes; then\n        log \"error\" \"Theme validation failed\"\n        exit 1\n    fi\n    \n    # Minify themes\n    minify_themes\n    \n    # Generate metadata\n    generate_metadata\n    \n    log \"success\" \"Theme build completed successfully!\"\n    log \"info\" \"Output directory: $BUILD_DIR\"\n}\n\n# Run main function\nmain \"$@\" json Theme Configuration {\n    \"themes\": {\n        \"light\": {\n            \"id\": \"light\",\n            \"name\": \"Light\",\n            \"description\": \"Clean light theme for daytime use\",\n            \"type\": \"light\",\n            \"colors\": {\n                \"primary\": \"#3b82f6\",\n                \"secondary\": \"#10b981\",\n                \"background\": \"#ffffff\",\n                \"surface\": \"#f9fafb\",\n                \"text\": {\n                    \"primary\": \"#111827\",\n                    \"secondary\": \"#6b7280\",\n                    \"muted\": \"#9ca3af\"\n                },\n                \"syntax\": {\n                    \"keyword\": \"#2563eb\",\n                    \"string\": \"#059669\",\n                    \"number\": \"#dc2626\",\n                    \"function\": \"#7c3aed\",\n                    \"comment\": \"#6b7280\"\n                }\n            },\n            \"customizations\": {\n                \"scrollbar\": true,\n                \"selection\": true,\n                \"forms\": true\n            }\n        },\n        \"dracula\": {\n            \"id\": \"dracula\",\n            \"name\": \"Dracula\",\n            \"description\": \"Dark theme with vibrant colors\",\n            \"type\": \"dark\",\n            \"colors\": {\n                \"primary\": \"#bd93f9\",\n                \"secondary\": \"#50fa7b\",\n                \"background\": \"#282a36\",\n                \"surface\": \"#21222c\",\n                \"text\": {\n                    \"primary\": \"#f8f8f2\",\n                    \"secondary\": \"#6272a4\",\n                    \"muted\": \"#6272a4\"\n                },\n                \"syntax\": {\n                    \"keyword\": \"#ff79c6\",\n                    \"string\": \"#f1fa8c\",\n                    \"number\": \"#bd93f9\",\n                    \"function\": \"#50fa7b\",\n                    \"comment\": \"#6272a4\"\n                }\n            },\n            \"customizations\": {\n                \"scrollbar\": true,\n                \"selection\": true,\n                \"forms\": true\n            }\n        }\n    },\n    \"defaultTheme\": \"light\",\n    \"autoDetect\": true,\n    \"transitions\": {\n        \"enabled\": true,\n        \"duration\": \"250ms\",\n        \"easing\": \"ease-in-out\"\n    }\n} sql Theme Usage Analytics -- Create tables for theme usage tracking\nCREATE TABLE IF NOT EXISTS theme_usage (\n    id SERIAL PRIMARY KEY,\n    user_id INTEGER NOT NULL,\n    theme_id VARCHAR(50) NOT NULL,\n    applied_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    session_duration INTEGER, -- in seconds\n    device_type VARCHAR(20),\n    browser VARCHAR(50),\n    system_theme VARCHAR(10) -- 'light' or 'dark'\n);\n\n-- Index for performance\nCREATE INDEX idx_theme_usage_user_theme ON theme_usage(user_id, theme_id);\nCREATE INDEX idx_theme_usage_applied_at ON theme_usage(applied_at);\n\n-- View for theme popularity\nCREATE OR REPLACE VIEW theme_popularity AS\nSELECT \n    theme_id,\n    COUNT(DISTINCT user_id) as unique_users,\n    COUNT(*) as total_applications,\n    AVG(session_duration) as avg_session_duration,\n    MAX(applied_at) as last_used\nFROM theme_usage\nWHERE applied_at >= CURRENT_DATE - INTERVAL '30 days'\nGROUP BY theme_id\nORDER BY unique_users DESC;\n\n-- Function to get user's theme history\nCREATE OR REPLACE FUNCTION get_user_theme_history(p_user_id INTEGER)\nRETURNS TABLE (\n    theme_id VARCHAR(50),\n    applied_at TIMESTAMP,\n    duration_hours NUMERIC,\n    device_type VARCHAR(20)\n) AS $$\nBEGIN\n    RETURN QUERY\n    WITH theme_sessions AS (\n        SELECT \n            tu.theme_id,\n            tu.applied_at,\n            tu.device_type,\n            LEAD(tu.applied_at) OVER (\n                PARTITION BY tu.user_id \n                ORDER BY tu.applied_at\n            ) as next_applied_at\n        FROM theme_usage tu\n        WHERE tu.user_id = p_user_id\n    )\n    SELECT \n        ts.theme_id,\n        ts.applied_at,\n        ROUND(\n            EXTRACT(EPOCH FROM (\n                COALESCE(ts.next_applied_at, CURRENT_TIMESTAMP) - ts.applied_at\n            )) / 3600, \n            2\n        ) as duration_hours,\n        ts.device_type\n    FROM theme_sessions ts\n    ORDER BY ts.applied_at DESC\n    LIMIT 50;\nEND;\n$$ LANGUAGE plpgsql;\n\n-- Query to find most popular themes by time of day\nWITH hourly_usage AS (\n    SELECT \n        theme_id,\n        EXTRACT(HOUR FROM applied_at) as hour_of_day,\n        COUNT(*) as usage_count\n    FROM theme_usage\n    WHERE applied_at >= CURRENT_DATE - INTERVAL '7 days'\n    GROUP BY theme_id, hour_of_day\n),\nranked_themes AS (\n    SELECT \n        hour_of_day,\n        theme_id,\n        usage_count,\n        ROW_NUMBER() OVER (\n            PARTITION BY hour_of_day \n            ORDER BY usage_count DESC\n        ) as rank\n    FROM hourly_usage\n)\nSELECT \n    hour_of_day,\n    theme_id as most_popular_theme,\n    usage_count\nFROM ranked_themes\nWHERE rank = 1\nORDER BY hour_of_day; yaml Theme Build Configuration # Theme build configuration file\nversion: 1.0.0\nbuild:\n  input_dir: ./themes\n  output_dir: ./dist/themes\n  \n  # Minification settings\n  minify:\n    enabled: true\n    remove_comments: true\n    remove_whitespace: true\n    merge_media_queries: true\n    \n  # Optimization settings\n  optimize:\n    merge_similar_rules: true\n    remove_unused_css: false\n    inline_critical_css: false\n\n# Theme definitions\nthemes:\n  - id: light\n    file: light.css\n    type: light\n    default: true\n    \n  - id: dark\n    file: dark.css\n    type: dark\n    \n  - id: vscode-dark-plus\n    file: vscode-dark-plus.css\n    type: dark\n    category: editor\n    \n  - id: monokai\n    file: monokai.css\n    type: dark\n    category: editor\n    \n  - id: dracula\n    file: dracula.css\n    type: dark\n    category: popular\n    \n  - id: one-dark-pro\n    file: one-dark-pro.css\n    type: dark\n    category: editor\n    \n  - id: solarized-light\n    file: solarized-light.css\n    type: light\n    category: classic\n    \n  - id: solarized-dark\n    file: solarized-dark.css\n    type: dark\n    category: classic\n    \n  - id: github-light\n    file: github-light.css\n    type: light\n    category: git\n    \n  - id: github-dark\n    file: github-dark.css\n    type: dark\n    category: git\n    \n  - id: nord\n    file: nord.css\n    type: dark\n    category: nordic\n    \n  - id: gruvbox-dark\n    file: gruvbox-dark.css\n    type: dark\n    category: retro\n    \n  - id: gruvbox-light\n    file: gruvbox-light.css\n    type: light\n    category: retro\n    \n  - id: tokyo-night\n    file: tokyo-night.css\n    type: dark\n    category: modern\n    \n  - id: palenight\n    file: palenight.css\n    type: dark\n    category: material\n\n# Auto theme detection\nauto_theme:\n  enabled: true\n  light_themes: [light, solarized-light, github-light, gruvbox-light]\n  dark_themes: [dark, vscode-dark-plus, monokai, dracula, one-dark-pro, \n                solarized-dark, github-dark, nord, gruvbox-dark, \n                tokyo-night, palenight]\n  \n  # Time-based switching (optional)\n  schedule:\n    enabled: false\n    light_start: \"06:00\"\n    dark_start: \"18:00\"\n\n# Theme preview settings\npreview:\n  delay_ms: 200\n  restore_on_leave: true\n  show_color_swatches: true",
      "code_blocks_count": 7
    },
    {
      "path": "/notes/tutorials/getting-started/deployment-options.md",
      "context": "tutorials",
      "metadata": {
        "title": "Deployment Options Guide",
        "tags": [
          "deployment",
          "getting-started",
          "setup"
        ],
        "created": "2024-01-20",
        "author": "Wiki Team",
        "description": "Complete guide to deploying your wiki across different platforms",
        "updated": "2024-01-20",
        "category": null,
        "status": null,
        "aliases": [],
        "related": [],
        "dependencies": [],
        "keywords": [],
        "tableOfContents": "auto",
        "hideFromSearch": false
      },
      "content_preview": "This comprehensive guide covers all the ways you can deploy your wiki, from cloud platforms to local setups.\n\n\n\n\n\nBest for: Public documentation, open source projects, personal blogs\n\nbash\n\n\n\n\n\n\n\n\n\n\n\n...",
      "searchable_content": "\nDeployment Options Guide\n\nThis comprehensive guide covers all the ways you can deploy your wiki, from cloud platforms to local setups.\n\n\ud83d\ude80 Quick Start Options\n\n1. GitHub Pages (Recommended for Public Wikis)\n\nBest for: Public documentation, open source projects, personal blogs\n\nbash\nStep 1: Fork the repository on GitHub\nStep 2: Enable GitHub Pages\n- Go to Settings \u2192 Pages\n- Source: Deploy from a branch\n- Branch: main / (root)\n- Save\n\nYour wiki will be available at:\nhttps://[username].github.io/Wiki/\nNote: You can name your repository anything! The wiki automatically\ndetects the path and adjusts all resource URLs accordingly.\nExamples: /my-notes/, /documentation/, /knowledge-base/\n\n\nPros:\n- \u2705 Free hosting\n- \u2705 Automatic SSL certificate\n- \u2705 Global CDN\n- \u2705 Easy domain setup\n\nCons:\n- \u274c Public repositories only (for free)\n- \u274c 1GB storage limit\n\n2. GitLab Pages (Best for Private/Self-Hosted)\n\nBest for: Private documentation, corporate wikis, self-hosted environments\n\nbash\nStep 1: Create new GitLab project\ngit clone https://github.com/Real-Fruit-Snacks/Wiki.git\ncd Wiki\nNote: You can rename the project to anything you like!\n\nStep 2: Add GitLab remote\ngit remote add gitlab https://gitlab.com/yourusername/wiki.git\nor for self-hosted:\ngit remote add gitlab https://your-gitlab.domain.com/yourgroup/wiki.git\n\nStep 3: Build search index\npython3 build.py\n\nStep 4: Push to GitLab\ngit push gitlab main\n\nStep 5: Enable Pages in project settings\nYour wiki will be available at:\nhttps://yourusername.gitlab.io/wiki/\n\n\nPros:\n- \u2705 Free private repositories\n- \u2705 Works with self-hosted GitLab\n- \u2705 Built-in CI/CD\n- \u2705 No external dependencies\n\nCons:\n- \u274c Slightly more complex setup\n\n3. Netlify (Easiest Setup)\n\nBest for: Quick prototypes, drag-and-drop deployment\n\nbash\nOption A: Drag & Drop\n1. Download the release zip from GitHub\n2. Go to https://netlify.com\n3. Drag the zip file to Netlify\n4. Your wiki is live!\n\nOption B: Git Integration\n1. Connect your GitHub/GitLab repo to Netlify\n2. Build command: python3 build.py\n3. Publish directory: /\n4. Deploy\n\n\nPros:\n- \u2705 Instant deployment\n- \u2705 Free SSL\n- \u2705 Form handling\n- \u2705 Branch previews\n\nCons:\n- \u274c 100GB bandwidth limit (free)\n\n4. Local Development/Intranet\n\nBest for: Offline documentation, air-gapped environments, local testing\n\nbash\nQuick local server\npython3 -m http.server 8000\nOpen http://localhost:8000\n\nOr with Node.js\nnpx http-server -p 8000\n\nOr with PHP\nphp -S localhost:8000\n\nFor production local deployment\nCopy files to your web server directory:\nApache: /var/www/html/\nNginx: /var/www/\n\n\nPros:\n- \u2705 Complete control\n- \u2705 No internet required\n- \u2705 Fast access\n- \u2705 Secure environment\n\nCons:\n- \u274c Manual updates\n- \u274c Limited accessibility\n\n\ud83d\udd27 Advanced Deployment\n\nDocker Deployment\n\ndockerfile\nDockerfile\nFROM nginx:alpine\nCOPY . /usr/share/nginx/html\nEXPOSE 80\nCMD [\"nginx\", \"-g\", \"daemon off;\"]\n\n\nbash\nBuild and run\ndocker build -t wiki .\ndocker run -p 8080:80 wiki\n\n\nApache Configuration\n\napache\n.htaccess for better routing\nRewriteEngine On\nRewriteCond %{REQUESTFILENAME} !-f\nRewriteCond %{REQUESTFILENAME} !-d\nRewriteRule ^(.)$ index.html [L]\n\n\nNginx Configuration\n\nnginx\nserver {\n    listen 80;\n    servername your-wiki.com;\n    root /var/www/wiki;\n    index index.html;\n\n    location / {\n        tryfiles $uri $uri/ /index.html;\n    }\n\n    # Cache static assets\n    location  \\.(css|js|png|jpg|jpeg|gif|ico|svg)$ {\n        expires 1y;\n        addheader Cache-Control \"public, immutable\";\n    }\n}\n\n\n\ud83d\udccb Pre-Deployment Checklist\n\nEssential Steps\n- [ ] Build search index: python3 build.py\n- [ ] Validate JavaScript: npm run validate\n- [ ] Test locally: python3 -m http.server 8000\n- [ ] Check all themes load correctly\n- [ ] Verify search functionality works\n- [ ] Test on mobile device\n\nContent Preparation\n- [ ] Add your content to /notes/ directory\n- [ ] Include proper frontmatter in markdown files\n- [ ] Optimize images for web (< 1MB each)\n- [ ] Test all internal links\n- [ ] Review tag consistency\n\nSecurity & Performance\n- [ ] Remove any sensitive information\n- [ ] Check file permissions\n- [ ] Enable GZIP compression (if possible)\n- [ ] Set up proper caching headers\n- [ ] Test loading speed\n\n\ud83d\udea8 Common Issues & Solutions\n\nSearch Not Working\nbash\nProblem: Search returns no results\nSolution: Rebuild the search index\npython3 build.py\n\nProblem: Notes not appearing in search\nCheck: notes-index.json file exists and has content\nls -la notes-index.json\n\n\nThemes Not Loading\nbash\nProblem: Themes appear broken\nCheck: All CSS files are present\nls themes/ | wc -l  # Should show 50+\n\nProblem: Default theme not loading\nCheck: themes/tokyo-night.css exists\nls -la themes/tokyo-night.css\n\n\nGitHub Pages Specific\nbash\nProblem: 404 errors on GitHub Pages\nSolution: Ensure Jekyll bypass is set\ncat config.yml  # Should contain: include: [\".nojekyll\"]\n\nProblem: Resources not loading\nCheck: Paths are relative, not absolute\ngrep -r \"http://\" index.html  # Should find no absolute URLs\n\n\nPerformance Issues\nbash\nProblem: Slow loading\nCheck: File sizes\ndu -sh \n\nSolution: Ensure images are optimized\nfind images/ -name \".jpg\" -size +1M  # Find large images\n\n\n\ud83d\udcf1 Mobile Optimization\n\nTesting on Mobile\n- [ ] Test responsive layout on phone/tablet\n- [ ] Verify touch targets are large enough\n- [ ] Check that search works on mobile\n- [ ] Test context switching (dropdown vs buttons)\n- [ ] Verify focus mode works on small screens\n\nMobile-Specific Features\n- Touch-optimized interface\n- Responsive context filtering\n- Mobile-friendly search\n- Swipe navigation (in development)\n\n\ud83d\udd12 Security Considerations\n\nSelf-Hosted Environments\n- Use HTTPS in production\n- Set appropriate file permissions\n- Configure web server security headers\n- Regular backup strategy\n- Access control if needed\n\nPublic Hosting\n- Review content for sensitive information\n- Consider search engine indexing preferences\n- Set up appropriate robots.txt\n- Monitor for unauthorized modifications\n\n\ud83d\udcc8 Monitoring & Analytics\n\nBasic Monitoring\nbash\nCheck disk usage\ndu -sh /path/to/wiki\n\nMonitor web server logs\ntail -f /var/log/nginx/access.log\n\nCheck for broken links\ngrep -r \"404\" /var/log/nginx/access.log\n\n\nPerformance Monitoring\n- Use browser dev tools for performance analysis\n- Monitor Core Web Vitals\n- Test loading times from different locations\n- Check mobile performance\n\n\ud83d\udd04 Updating Your Deployment\n\nFor Git-Based Deployments\nbash\nUpdate from main repository\ngit remote add upstream https://github.com/Real-Fruit-Snacks/Wiki.git\ngit fetch upstream\ngit merge upstream/main\n\nRebuild search index\npython3 build.py\n\nDeploy updates\ngit push origin main\n\n\nFor Manual Deployments\n1. Download latest release\n2. Backup your /notes/ directory\n3. Extract new files\n4. Restore your notes\n5. Rebuild search index\n6. Upload to server\n\n---\n\nNext Steps\n\n- \ud83d\udcd6 Creating Your First Notes\n- \ud83d\udd0d Search Guide\n- \u2699\ufe0f Settings & Customization\n- \ud83c\udfa8 Themes Guide # Step 1: Fork the repository on GitHub\n# Step 2: Enable GitHub Pages\n#   - Go to Settings \u2192 Pages\n#   - Source: Deploy from a branch\n#   - Branch: main / (root)\n#   - Save\n\n# Your wiki will be available at:\n# https://[username].github.io/Wiki/\n# Note: You can name your repository anything! The wiki automatically\n# detects the path and adjusts all resource URLs accordingly.\n# Examples: /my-notes/, /documentation/, /knowledge-base/ # Step 1: Create new GitLab project\ngit clone https://github.com/Real-Fruit-Snacks/Wiki.git\ncd Wiki\n# Note: You can rename the project to anything you like!\n\n# Step 2: Add GitLab remote\ngit remote add gitlab https://gitlab.com/yourusername/wiki.git\n# or for self-hosted:\ngit remote add gitlab https://your-gitlab.domain.com/yourgroup/wiki.git\n\n# Step 3: Build search index\npython3 build.py\n\n# Step 4: Push to GitLab\ngit push gitlab main\n\n# Step 5: Enable Pages in project settings\n# Your wiki will be available at:\n# https://yourusername.gitlab.io/wiki/ # Option A: Drag & Drop\n# 1. Download the release zip from GitHub\n# 2. Go to https://netlify.com\n# 3. Drag the zip file to Netlify\n# 4. Your wiki is live!\n\n# Option B: Git Integration\n# 1. Connect your GitHub/GitLab repo to Netlify\n# 2. Build command: python3 build.py\n# 3. Publish directory: /\n# 4. Deploy # Quick local server\npython3 -m http.server 8000\n# Open http://localhost:8000\n\n# Or with Node.js\nnpx http-server -p 8000\n\n# Or with PHP\nphp -S localhost:8000\n\n# For production local deployment\n# Copy files to your web server directory:\n# Apache: /var/www/html/\n# Nginx: /var/www/ # Dockerfile\nFROM nginx:alpine\nCOPY . /usr/share/nginx/html\nEXPOSE 80\nCMD [\"nginx\", \"-g\", \"daemon off;\"] # Build and run\ndocker build -t wiki .\ndocker run -p 8080:80 wiki # .htaccess for better routing\nRewriteEngine On\nRewriteCond %{REQUEST_FILENAME} !-f\nRewriteCond %{REQUEST_FILENAME} !-d\nRewriteRule ^(.*)$ index.html [L] server {\n    listen 80;\n    server_name your-wiki.com;\n    root /var/www/wiki;\n    index index.html;\n\n    location / {\n        try_files $uri $uri/ /index.html;\n    }\n\n    # Cache static assets\n    location ~* \\.(css|js|png|jpg|jpeg|gif|ico|svg)$ {\n        expires 1y;\n        add_header Cache-Control \"public, immutable\";\n    }\n} # Problem: Search returns no results\n# Solution: Rebuild the search index\npython3 build.py\n\n# Problem: Notes not appearing in search\n# Check: notes-index.json file exists and has content\nls -la notes-index.json # Problem: Themes appear broken\n# Check: All CSS files are present\nls themes/ | wc -l  # Should show 50+\n\n# Problem: Default theme not loading\n# Check: themes/tokyo-night.css exists\nls -la themes/tokyo-night.css # Problem: 404 errors on GitHub Pages\n# Solution: Ensure Jekyll bypass is set\ncat _config.yml  # Should contain: include: [\".nojekyll\"]\n\n# Problem: Resources not loading\n# Check: Paths are relative, not absolute\ngrep -r \"http://\" index.html  # Should find no absolute URLs # Problem: Slow loading\n# Check: File sizes\ndu -sh *\n\n# Solution: Ensure images are optimized\nfind images/ -name \"*.jpg\" -size +1M  # Find large images # Check disk usage\ndu -sh /path/to/wiki\n\n# Monitor web server logs\ntail -f /var/log/nginx/access.log\n\n# Check for broken links\ngrep -r \"404\" /var/log/nginx/access.log # Update from main repository\ngit remote add upstream https://github.com/Real-Fruit-Snacks/Wiki.git\ngit fetch upstream\ngit merge upstream/main\n\n# Rebuild search index\npython3 build.py\n\n# Deploy updates\ngit push origin main",
      "code_blocks_count": 14
    },
    {
      "path": "/notes/tutorials/getting-started/troubleshooting.md",
      "context": "tutorials",
      "metadata": {
        "title": "Troubleshooting Common Issues",
        "tags": [
          "troubleshooting",
          "support",
          "fixes",
          "getting-started"
        ],
        "created": "2024-01-20",
        "author": "Wiki Team",
        "description": "Solutions to common problems and issues you might encounter",
        "updated": "2024-01-20",
        "category": null,
        "status": null,
        "aliases": [],
        "related": [],
        "dependencies": [],
        "keywords": [],
        "tableOfContents": "auto",
        "hideFromSearch": false
      },
      "content_preview": "This guide helps you diagnose and fix the most common issues encountered when using the wiki.\n\n\n\n\n\nSymptoms:\n- Search bar appears but returns empty results\n- \"No results found\" message appears for kno...",
      "searchable_content": "\nTroubleshooting Common Issues\n\nThis guide helps you diagnose and fix the most common issues encountered when using the wiki.\n\n\ud83d\udd0d Search Issues\n\nSearch Returns No Results\n\nSymptoms:\n- Search bar appears but returns empty results\n- \"No results found\" message appears for known content\n\nCauses & Solutions:\n\n1. Missing or Corrupted Search Index\nbash\nCheck if index file exists\nls -la notes-index.json\n\nIf missing, rebuild:\npython3 build.py\n\nIf corrupted, validate JSON:\npython3 -m json.tool notes-index.json\n\n\n2. Browser Cache Issues\njavascript\n// Clear search cache\nlocalStorage.removeItem('notesWikisearchCache');\n// Reload the page\nlocation.reload();\n\n\n3. JavaScript Errors\nbash\nCheck browser console (F12) for errors\nCommon fixes:\n- Disable browser extensions\n- Try incognito/private mode\n- Clear browser cache\n\n\nSearch Index Not Building\n\nError: FileNotFoundError: [Errno 2] No such file or directory: 'notes'\n\nSolution:\nbash\nEnsure you're in the correct directory\npwd  # Should show path ending in 'Wiki'\nls   # Should show: index.html, script.js, notes/, etc.\n\nIf in wrong directory:\ncd path/to/Wiki\npython3 build.py\n\n\nError: yaml.scanner.ScannerError: while scanning...\n\nSolution:\nbash\nFind problematic YAML frontmatter\nfind notes/ -name \".md\" -exec python3 -c \"\nimport yaml, sys\ntry:\n    with open(sys.argv[1]) as f:\n        content = f.read()\n    if content.startswith('---'):\n        frontmatter = content.split('---')[1]\n        yaml.safeload(frontmatter)\nexcept Exception as e:\n    print(f'ERROR in {sys.argv[1]}: {e}')\n\" {} \\;\n\nFix YAML syntax:\n- Use spaces, not tabs\n- Quote strings with colons\n- Check bracket/quote matching\n\n\n\ud83c\udfa8 Theme Issues\n\nThemes Not Loading\n\nSymptoms:\n- Wiki appears with broken styling\n- Theme selector shows themes but switching doesn't work\n- Console shows 404 errors for CSS files\n\nSolutions:\n\n1. Missing Theme Files\nbash\nCheck theme directory\nls themes/ | wc -l  # Should show 50+\n\nList available themes\nls themes/.css\n\nIf themes missing, re-download the project\n\n\n2. Path Issues (GitHub Pages)\njavascript\n// Check base path detection in browser console\nconsole.log(window.location.pathname);\n\n// Should correctly detect GitHub Pages paths\n// If issues persist, check config.yml exists\n\n\n3. Theme Persistence Issues\njavascript\n// Reset theme settings\nlocalStorage.removeItem('notesWikitheme');\nlocalStorage.removeItem('notesWikisettings');\nlocation.reload();\n\n\nCustom CSS Not Working\n\nCheck:\njavascript\n// Verify custom CSS is saved\nconst settings = JSON.parse(localStorage.getItem('notesWikisettings') || '{}');\nconsole.log(settings.customCSS);\n\n// If empty, custom CSS wasn't saved properly\n// Try re-entering in Settings > Appearance > Custom CSS\n\n\n\ud83d\udcf1 Mobile/Responsive Issues\n\nLayout Broken on Mobile\n\nSymptoms:\n- Sidebar overlaps content\n- Text too small to read\n- Buttons too small to tap\n\nSolutions:\n\n1. Viewport Meta Tag\nhtml\n<!-- Ensure this exists in index.html -->\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n\n\n2. Force Responsive Mode\njavascript\n// In browser console, force mobile layout\ndocument.body.style.width = '375px';\n// Check if layout adapts correctly\n\n\n3. Clear Mobile Settings\njavascript\n// Reset responsive settings\nlocalStorage.removeItem('notesWikimobileSettings');\nlocation.reload();\n\n\nContext Dropdown Not Working\n\nIssue: Context switcher not changing to dropdown on mobile\n\nSolution:\njavascript\n// Force rebuild context switcher\n// In browser console:\nwindow.app.buildContextSwitcher();\n\n\n\u2328\ufe0f Keyboard Shortcuts\n\nShortcuts Not Working\n\nCommon Issues:\n\n1. Browser Conflicts\n\nProblem: Ctrl+T opens new tab instead of new wiki tab\nSolution: Use Alt+T instead, or customize shortcuts in Settings\n\n\n2. Focus Issues\njavascript\n// Check if shortcuts are registered\nconsole.log(Object.keys(window.app.keyboardShortcuts || {}));\n\n// If empty, shortcuts failed to register\n// Try: Settings > Keyboard > Reset to Defaults\n\n\n3. Input Field Focus\n\nProblem: Shortcuts don't work when typing in search/notes\nSolution: This is expected behavior for safety\n\n\nCustom Shortcuts Not Saving\n\nSolution:\njavascript\n// Check settings storage\nconst settings = JSON.parse(localStorage.getItem('notesWikisettings'));\nconsole.log(settings.keyboardShortcuts);\n\n// If changes not persisting:\n// 1. Check browser storage permissions\n// 2. Try different shortcut combination\n// 3. Reset to defaults and reconfigure\n\n\n\ud83d\udcc2 File Management Issues\n\nNotes Not Appearing\n\nSymptoms:\n- Files exist in /notes/ directory but don't show in file tree\n- Search can't find known content\n\nSolutions:\n\n1. File Extension Check\nbash\nEnsure files have .md extension\nfind notes/ -type f ! -name \".md\"\n\nRename if needed:\nmv notes/file.txt notes/file.md\n\n\n2. Frontmatter Issues\nmarkdown\n<!-- Ensure proper frontmatter format -->\n---\ntitle: Your Note Title\ntags: [tag1, tag2]\n---\n\nYour Content Here\n\n\n3. Rebuild Index\nbash\nAlways rebuild after adding/moving files\npython3 build.py\n\n\nImages Not Loading\n\nCheck Image Paths:\nmarkdown\n<!-- Correct relative paths -->\n!Description\n!Description\n\n<!-- Avoid absolute paths -->\n<!-- !Wrong -->\n\n\nVerify Image Files:\nbash\nCheck image directory\nls -la images/\nfind images/ -name \".jpg\" -o -name \".png\" -o -name \".svg\"\n\nCheck file permissions\nls -la images/reference/your-image.jpg\n\n\n\ud83d\udd17 Navigation Issues\n\nInternal Links Broken\n\nWiki-style Links:\nmarkdown\n<!-- Correct format -->\n[[Note Title]]\n[[folder/Note Title]]\n\n<!-- Check case sensitivity -->\n[[Exact Title Case]]\n\n\nRegular Markdown Links:\nmarkdown\n<!-- Use correct relative paths -->\nSearch Guide\nCreating Notes\n\n\nHash Navigation Issues\n\nProblem: URLs like #/notes/path/file.md don't work\n\nSolutions:\njavascript\n// Check router state\nconsole.log(window.location.hash);\n\n// Force navigation\nwindow.app.navigateToNote('path/to/your/note.md');\n\n\n\u26a1 Performance Issues\n\nSlow Loading\n\nDiagnosis:\njavascript\n// Check performance in browser dev tools\n// Network tab: Look for slow resources\n// Performance tab: Identify bottlenecks\n\n\nSolutions:\n\n1. Large Index File\nbash\nCheck index size\ndu -h notes-index.json\n\nIf > 10MB, consider:\n- Splitting large notes\n- Removing large code blocks\n- Using content excerpts\n\n\n2. Too Many Theme Files\nbash\nIf using custom deployment, include only needed themes\nRemove unused themes to reduce bundle size\n\n\n3. Memory Issues\njavascript\n// Check memory usage in browser dev tools\n// Clear application data if needed:\nlocalStorage.clear();\nsessionStorage.clear();\nlocation.reload();\n\n\nBrowser Freezing\n\nCommon Causes:\n- Very large notes (>1MB)\n- Infinite loops in custom CSS\n- Too many tabs open\n\nSolutions:\njavascript\n// Emergency reset\nlocalStorage.setItem('notesWikiemergencyMode', 'true');\nlocation.reload();\n// This disables all custom settings temporarily\n\n\n\ud83d\udd27 Local Development Issues\n\nPython Server Issues\n\nError: python3: command not found\n\nSolutions:\nbash\nTry alternative Python commands\npython --version\npy --version\n\nUse Node.js instead\nnpx http-server -p 8000\n\nUse PHP\nphp -S localhost:8000\n\n\nError: Address already in use\n\nSolution:\nbash\nFind process using port 8000\nlsof -i :8000\n\nKill process or use different port\npython3 -m http.server 8080\n\n\nBuild Script Errors\n\nMissing Dependencies:\nbash\nInstall required Python modules\npip3 install pyyaml\n\nOr use system package manager\nUbuntu/Debian:\nsudo apt install python3-yaml\n\nmacOS:\nbrew install python3\npip3 install pyyaml\n\n\n\ud83c\udf10 Deployment Issues\n\nGitHub Pages Not Updating\n\nSolutions:\nbash\nCheck GitHub Actions status\nGo to: GitHub repo > Actions tab\n\nForce rebuild\ngit commit --allow-empty -m \"Force rebuild\"\ngit push\n\nCheck config.yml exists\ncat config.yml\n\n\nGitLab Pages Issues\n\nCheck CI/CD Pipeline:\nyaml\nEnsure .gitlab-ci.yml contains pages job\npages:\n  script:\n    - python3 build.py\n  artifacts:\n    paths:\n      - public\n  only:\n    - main\n\n\nNetlify Deployment\n\nBuild Failing:\n\nBuild settings:\n- Build command: python3 build.py\n- Publish directory: /\n- Environment: Python 3.8+\n\n\n\ud83d\udea8 Emergency Recovery\n\nComplete Reset\n\nIf all else fails, perform a complete reset:\n\njavascript\n// 1. Clear all application data\nlocalStorage.clear();\nsessionStorage.clear();\n\n// 2. Clear browser cache\n// Chrome: Ctrl+Shift+Delete\n// Firefox: Ctrl+Shift+Delete\n// Safari: Command+Option+E\n\n// 3. Rebuild search index\n// python3 build.py\n\n// 4. Hard refresh\n// Ctrl+F5 or Cmd+Shift+R\n\n\nBackup Recovery\n\nbash\nIf you have backups, restore them:\n1. Replace notes/ directory\ncp -r backup/notes/ ./notes/\n\n2. Rebuild index\npython3 build.py\n\n3. Clear browser data and reload\n\n\n\ud83d\udcde Getting Help\n\nInformation to Include\n\nWhen reporting issues, include:\n\nbash\nSystem info\necho \"OS: $(uname -a)\"\necho \"Python: $(python3 --version)\"\necho \"Browser: [Your browser and version]\"\n\nProject info\necho \"Wiki size: $(du -sh .)\"\necho \"Notes count: $(find notes/ -name '.md' | wc -l)\"\necho \"Index size: $(du -h notes-index.json)\"\n\nError details\n- Browser console errors (F12)\n- Network tab information\n- Steps to reproduce\n\n\nQuick Diagnostics\n\nbash\nRun comprehensive health check\ncat > diagnose.sh << 'EOF'\n#!/bin/bash\necho \"=== Wiki Diagnostics ===\"\necho \"Date: $(date)\"\necho \"Directory: $(pwd)\"\necho\n\necho \"--- File Structure ---\"\nls -la | head -10\necho\n\necho \"--- Notes Directory ---\"\nfind notes/ -name \".md\" | wc -l\necho \"Markdown files found\"\necho\n\necho \"--- Search Index ---\"\nif [ -f \"notes-index.json\" ]; then\n    echo \"\u2705 Index exists ($(du -h notes-index.json | cut -f1))\"\n    if python3 -m json.tool notes-index.json > /dev/null 2>&1; then\n        echo \"\u2705 Valid JSON\"\n    else\n        echo \"\u274c Invalid JSON\"\n    fi\nelse\n    echo \"\u274c Index missing\"\nfi\necho\n\necho \"--- Themes ---\"\nls themes/ | wc -l\necho \"Theme files found\"\necho\n\necho \"--- Python ---\"\npython3 --version 2>&1\npython3 -c \"import yaml; print('\u2705 PyYAML available')\" 2>&1\necho\n\necho \"=== Diagnosis Complete ===\"\nEOF\n\nchmod +x diagnose.sh\n./diagnose.sh\n\n\n---\n\nRelated Resources\n\n- \ud83d\ude80 Deployment Options\n- \ud83d\udd0d Search Index Management\n- \u2699\ufe0f Settings & Customization\n- \ud83d\udcf1 GitHub Issues - Report bugs here # Check if index file exists\nls -la notes-index.json\n\n# If missing, rebuild:\npython3 build.py\n\n# If corrupted, validate JSON:\npython3 -m json.tool notes-index.json // Clear search cache\nlocalStorage.removeItem('notesWiki_searchCache');\n// Reload the page\nlocation.reload(); # Check browser console (F12) for errors\n# Common fixes:\n# - Disable browser extensions\n# - Try incognito/private mode\n# - Clear browser cache # Ensure you're in the correct directory\npwd  # Should show path ending in 'Wiki'\nls   # Should show: index.html, script.js, notes/, etc.\n\n# If in wrong directory:\ncd path/to/Wiki\npython3 build.py # Find problematic YAML frontmatter\nfind notes/ -name \"*.md\" -exec python3 -c \"\nimport yaml, sys\ntry:\n    with open(sys.argv[1]) as f:\n        content = f.read()\n    if content.startswith('---'):\n        frontmatter = content.split('---')[1]\n        yaml.safe_load(frontmatter)\nexcept Exception as e:\n    print(f'ERROR in {sys.argv[1]}: {e}')\n\" {} \\;\n\n# Fix YAML syntax:\n# - Use spaces, not tabs\n# - Quote strings with colons\n# - Check bracket/quote matching # Check theme directory\nls themes/ | wc -l  # Should show 50+\n\n# List available themes\nls themes/*.css\n\n# If themes missing, re-download the project // Check base path detection in browser console\nconsole.log(window.location.pathname);\n\n// Should correctly detect GitHub Pages paths\n// If issues persist, check _config.yml exists // Reset theme settings\nlocalStorage.removeItem('notesWiki_theme');\nlocalStorage.removeItem('notesWiki_settings');\nlocation.reload(); // Verify custom CSS is saved\nconst settings = JSON.parse(localStorage.getItem('notesWiki_settings') || '{}');\nconsole.log(settings.customCSS);\n\n// If empty, custom CSS wasn't saved properly\n// Try re-entering in Settings > Appearance > Custom CSS <!-- Ensure this exists in index.html -->\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"> // In browser console, force mobile layout\ndocument.body.style.width = '375px';\n// Check if layout adapts correctly // Reset responsive settings\nlocalStorage.removeItem('notesWiki_mobileSettings');\nlocation.reload(); // Force rebuild context switcher\n// In browser console:\nwindow.app.buildContextSwitcher(); Problem: Ctrl+T opens new tab instead of new wiki tab\nSolution: Use Alt+T instead, or customize shortcuts in Settings // Check if shortcuts are registered\nconsole.log(Object.keys(window.app.keyboardShortcuts || {}));\n\n// If empty, shortcuts failed to register\n// Try: Settings > Keyboard > Reset to Defaults Problem: Shortcuts don't work when typing in search/notes\nSolution: This is expected behavior for safety // Check settings storage\nconst settings = JSON.parse(localStorage.getItem('notesWiki_settings'));\nconsole.log(settings.keyboardShortcuts);\n\n// If changes not persisting:\n// 1. Check browser storage permissions\n// 2. Try different shortcut combination\n// 3. Reset to defaults and reconfigure # Ensure files have .md extension\nfind notes/ -type f ! -name \"*.md\"\n\n# Rename if needed:\nmv notes/file.txt notes/file.md <!-- Ensure proper frontmatter format -->\n---\ntitle: Your Note Title\ntags: [tag1, tag2]\n---\n\n# Your Content Here # Always rebuild after adding/moving files\npython3 build.py <!-- Correct relative paths -->\n![Description](../images/reference/image.jpg)\n![Description](../../images/tutorials/screenshot.png)\n\n<!-- Avoid absolute paths -->\n<!-- ![Wrong](/images/image.jpg) --> # Check image directory\nls -la images/\nfind images/ -name \"*.jpg\" -o -name \"*.png\" -o -name \"*.svg\"\n\n# Check file permissions\nls -la images/reference/your-image.jpg <!-- Correct format -->\n[[Note Title]]\n[[folder/Note Title]]\n\n<!-- Check case sensitivity -->\n[[Exact Title Case]] <!-- Use correct relative paths -->\n[Search Guide](../features/search-guide.md)\n[Creating Notes](./creating-notes.md) // Check router state\nconsole.log(window.location.hash);\n\n// Force navigation\nwindow.app.navigateToNote('path/to/your/note.md'); // Check performance in browser dev tools\n// Network tab: Look for slow resources\n// Performance tab: Identify bottlenecks # Check index size\ndu -h notes-index.json\n\n# If > 10MB, consider:\n# - Splitting large notes\n# - Removing large code blocks\n# - Using content excerpts # If using custom deployment, include only needed themes\n# Remove unused themes to reduce bundle size // Check memory usage in browser dev tools\n// Clear application data if needed:\nlocalStorage.clear();\nsessionStorage.clear();\nlocation.reload(); // Emergency reset\nlocalStorage.setItem('notesWiki_emergencyMode', 'true');\nlocation.reload();\n// This disables all custom settings temporarily # Try alternative Python commands\npython --version\npy --version\n\n# Use Node.js instead\nnpx http-server -p 8000\n\n# Use PHP\nphp -S localhost:8000 # Find process using port 8000\nlsof -i :8000\n\n# Kill process or use different port\npython3 -m http.server 8080 # Install required Python modules\npip3 install pyyaml\n\n# Or use system package manager\n# Ubuntu/Debian:\nsudo apt install python3-yaml\n\n# macOS:\nbrew install python3\npip3 install pyyaml # Check GitHub Actions status\n# Go to: GitHub repo > Actions tab\n\n# Force rebuild\ngit commit --allow-empty -m \"Force rebuild\"\ngit push\n\n# Check _config.yml exists\ncat _config.yml # Ensure .gitlab-ci.yml contains pages job\npages:\n  script:\n    - python3 build.py\n  artifacts:\n    paths:\n      - public\n  only:\n    - main Build settings:\n- Build command: python3 build.py\n- Publish directory: /\n- Environment: Python 3.8+ // 1. Clear all application data\nlocalStorage.clear();\nsessionStorage.clear();\n\n// 2. Clear browser cache\n// Chrome: Ctrl+Shift+Delete\n// Firefox: Ctrl+Shift+Delete\n// Safari: Command+Option+E\n\n// 3. Rebuild search index\n// python3 build.py\n\n// 4. Hard refresh\n// Ctrl+F5 or Cmd+Shift+R # If you have backups, restore them:\n# 1. Replace notes/ directory\ncp -r backup/notes/ ./notes/\n\n# 2. Rebuild index\npython3 build.py\n\n# 3. Clear browser data and reload # System info\necho \"OS: $(uname -a)\"\necho \"Python: $(python3 --version)\"\necho \"Browser: [Your browser and version]\"\n\n# Project info\necho \"Wiki size: $(du -sh .)\"\necho \"Notes count: $(find notes/ -name '*.md' | wc -l)\"\necho \"Index size: $(du -h notes-index.json)\"\n\n# Error details\n# - Browser console errors (F12)\n# - Network tab information\n# - Steps to reproduce # Run comprehensive health check\ncat > diagnose.sh << 'EOF'\n#!/bin/bash\necho \"=== Wiki Diagnostics ===\"\necho \"Date: $(date)\"\necho \"Directory: $(pwd)\"\necho\n\necho \"--- File Structure ---\"\nls -la | head -10\necho\n\necho \"--- Notes Directory ---\"\nfind notes/ -name \"*.md\" | wc -l\necho \"Markdown files found\"\necho\n\necho \"--- Search Index ---\"\nif [ -f \"notes-index.json\" ]; then\n    echo \"\u2705 Index exists ($(du -h notes-index.json | cut -f1))\"\n    if python3 -m json.tool notes-index.json > /dev/null 2>&1; then\n        echo \"\u2705 Valid JSON\"\n    else\n        echo \"\u274c Invalid JSON\"\n    fi\nelse\n    echo \"\u274c Index missing\"\nfi\necho\n\necho \"--- Themes ---\"\nls themes/ | wc -l\necho \"Theme files found\"\necho\n\necho \"--- Python ---\"\npython3 --version 2>&1\npython3 -c \"import yaml; print('\u2705 PyYAML available')\" 2>&1\necho\n\necho \"=== Diagnosis Complete ===\"\nEOF\n\nchmod +x diagnose.sh\n./diagnose.sh",
      "code_blocks_count": 40
    },
    {
      "path": "/notes/tutorials/advanced/search-index-management.md",
      "context": "tutorials",
      "metadata": {
        "title": "Search Index Management",
        "tags": [
          "advanced",
          "search",
          "build",
          "troubleshooting"
        ],
        "created": "2024-01-20",
        "author": "Wiki Team",
        "description": "Advanced guide to managing and optimizing the search index",
        "updated": "2024-01-20",
        "category": null,
        "status": null,
        "aliases": [],
        "related": [],
        "dependencies": [],
        "keywords": [],
        "tableOfContents": "auto",
        "hideFromSearch": false
      },
      "content_preview": "Learn how to effectively manage your wiki's search index for optimal performance and comprehensive search capabilities.\n\n\n\nThe search index is the heart of your wiki's search functionality. It's a JSO...",
      "searchable_content": "\nSearch Index Management\n\nLearn how to effectively manage your wiki's search index for optimal performance and comprehensive search capabilities.\n\n\ud83d\udd0d Understanding the Search Index\n\nThe search index is the heart of your wiki's search functionality. It's a JSON file (notes-index.json) that contains:\n\n- Full text content of all markdown files\n- Metadata (title, tags, author, dates)\n- Code blocks with language information\n- File paths and relationships\n- Tag mappings for filtering\n\nHow It Works\n\nmermaid\ngraph LR\n    A[Markdown Files] --> B[build.py]\n    B --> C[YAML Parser]\n    B --> D[Content Extractor]\n    C --> E[notes-index.json]\n    D --> E\n    E --> F[Search Engine]\n\n\n\ud83d\udee0\ufe0f Building the Search Index\n\nBasic Build Command\n\nbash\nStandard build\npython3 build.py\n\nExpected output:\nScanning notes directory...\nProcessing: notes/tutorials/features/search-guide.md\n...\n\u2705 Build complete!\n\ud83d\udcca Stats:\n- Total notes: 24\n- Total tags: 15\n- Total authors: 2\n- Index size: 847.2 KB\n\n\nBuild Process Details\n\nThe build script performs these operations:\n\n1. Directory Scanning: Recursively finds all .md files in /notes/\n2. Frontmatter Parsing: Extracts YAML metadata using js-yaml\n3. Content Processing: Converts markdown to searchable text\n4. Code Block Extraction: Identifies and indexes code snippets\n5. Index Generation: Creates optimized JSON structure\n6. File Writing: Saves notes-index.json\n\n\ud83d\udcca Index Structure\n\nExample Index Entry\n\njson\n{\n  \"id\": \"tutorials/features/search-guide\",\n  \"title\": \"Advanced Search Guide\",\n  \"content\": \"Learn to master the powerful search features...\",\n  \"tags\": [\"search\", \"features\", \"tutorial\"],\n  \"author\": \"Wiki Team\",\n  \"created\": \"2024-01-15\",\n  \"updated\": \"2024-01-20\",\n  \"description\": \"Complete guide to search operators\",\n  \"codeBlocks\": [\n    {\n      \"language\": \"bash\",\n      \"content\": \"tag:tutorial author:john\",\n      \"title\": \"Search Example\"\n    }\n  ],\n  \"path\": \"notes/tutorials/features/search-guide.md\",\n  \"wordCount\": 1247,\n  \"readingTime\": 5\n}\n\n\n\ud83d\udd27 Advanced Build Options\n\nCustom Build Script\n\nYou can modify build.py for specific needs:\n\npython\nCustom build with additional processing\nimport json\nimport os\nfrom pathlib import Path\n\ndef custombuild():\n    # Add custom logic here\n    notesdir = Path(\"notes\")\n    index = []\n    \n    for mdfile in notesdir.rglob(\".md\"):\n        # Custom processing logic\n        entry = processfile(mdfile)\n        index.append(entry)\n    \n    # Save with custom formatting\n    with open(\"notes-index.json\", \"w\") as f:\n        json.dump(index, f, indent=2, ensureascii=False)\n\n\nBuild Automation\n\nGit Hooks\nbash\n#!/bin/sh\n.git/hooks/pre-commit\necho \"Rebuilding search index...\"\npython3 build.py\ngit add notes-index.json\n\n\nGitHub Actions\nyaml\n.github/workflows/build-index.yml\nname: Build Search Index\non:\n  push:\n    paths: ['notes//.md']\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v2\n      - name: Build index\n        run: python3 build.py\n      - name: Commit updated index\n        run: |\n          git config --local user.email \"action@github.com\"\n          git config --local user.name \"GitHub Action\"\n          git add notes-index.json\n          git commit -m \"Update search index\" || exit 0\n          git push\n\n\nGitLab CI\nyaml\n.gitlab-ci.yml addition\nbuildindex:\n  stage: build\n  script:\n    - python3 build.py\n  artifacts:\n    paths:\n      - notes-index.json\n  only:\n    changes:\n      - notes//.md\n\n\n\ud83d\udea8 Troubleshooting\n\nCommon Issues\n\n1. Build Fails with YAML Error\nbash\nError: yaml.scanner.ScannerError\nCause: Invalid YAML frontmatter\n\nSolution: Check frontmatter syntax\nhead -10 problematic-file.md\n\nFix common issues:\n- Use spaces, not tabs for indentation\n- Quote strings with special characters\n- Check for unmatched brackets/quotes\n\n\n2. Empty Search Results\nbash\nCheck if index file exists\nls -la notes-index.json\n\nCheck file size (should be > 1KB)\ndu -h notes-index.json\n\nValidate JSON structure\npython3 -m json.tool notes-index.json > /dev/null\n\n\n3. Missing Notes in Search\nbash\nCheck file permissions\nfind notes/ -name \".md\" ! -perm -644\n\nCheck for hidden files\nfind notes/ -name \".\" -type f\n\nVerify file encoding\nfile notes/your-file.md\n\n\n4. Performance Issues\nbash\nCheck index size\nls -lh notes-index.json\n\nIf index is > 10MB, consider optimization:\n- Remove large code blocks from index\n- Split large notes into smaller files\n- Use excerpt fields instead of full content\n\n\nDiagnostic Commands\n\nbash\nCount indexed notes\ngrep -o '\"id\":' notes-index.json | wc -l\n\nCheck for duplicate IDs\ngrep '\"id\":' notes-index.json | sort | uniq -d\n\nFind largest entries\npython3 -c \"\nimport json\nwith open('notes-index.json') as f:\n    data = json.load(f)\nentries = [(len(str(item)), item['id']) for item in data]\nfor size, id in sorted(entries, reverse=True)[:5]:\n    print(f'{size:6d} bytes: {id}')\n\"\n\nValidate all frontmatter\nfind notes/ -name \".md\" -exec python3 -c \"\nimport yaml\nimport sys\ntry:\n    with open(sys.argv[1]) as f:\n        content = f.read()\n    if content.startswith('---'):\n        frontmatter = content.split('---')[1]\n        yaml.safeload(frontmatter)\n    print(f'\u2705 {sys.argv[1]}')\nexcept Exception as e:\n    print(f'\u274c {sys.argv[1]}: {e}')\n\" {} \\;\n\n\n\u26a1 Performance Optimization\n\nIndex Size Management\n\npython\nOptimize build.py for large wikis\ndef optimizecontent(content):\n    # Limit content length for search\n    if len(content) > 10000:  # 10KB limit\n        content = content[:9900] + \"...\"\n    return content\n\ndef extractexcerpt(content, length=500):\n    # Create search-optimized excerpt\n    lines = content.split('\\n')\n    excerpt = []\n    charcount = 0\n    \n    for line in lines:\n        if charcount + len(line) > length:\n            break\n        excerpt.append(line)\n        charcount += len(line)\n    \n    return '\\n'.join(excerpt)\n\n\nSearch Performance\n\njavascript\n// Client-side search optimization\nclass SearchOptimizer {\n    constructor() {\n        this.searchCache = new Map();\n        this.indexedDB = null; // For large indexes\n    }\n    \n    // Cache frequent searches\n    cacheSearch(query, results) {\n        this.searchCache.set(query, results);\n        if (this.searchCache.size > 100) {\n            const firstKey = this.searchCache.keys().next().value;\n            this.searchCache.delete(firstKey);\n        }\n    }\n    \n    // Progressive search loading\n    async loadIndexProgressive() {\n        const response = await fetch('notes-index.json');\n        const reader = response.body.getReader();\n        // Process chunks as they arrive\n    }\n}\n\n\n\ud83d\udcc8 Monitoring Index Health\n\nIndex Statistics\n\nbash\nCreate index health check script\ncat > check-index.sh << 'EOF'\n#!/bin/bash\n\necho \"=== Search Index Health Check ===\"\necho\n\nFile info\nINDEXFILE=\"notes-index.json\"\nif [ -f \"$INDEXFILE\" ]; then\n    echo \"\u2705 Index file exists\"\n    echo \"\ud83d\udcca Size: $(du -h $INDEXFILE | cut -f1)\"\n    echo \"\ud83d\udcc5 Modified: $(date -r $INDEXFILE)\"\nelse\n    echo \"\u274c Index file missing\"\n    exit 1\nfi\n\nJSON validation\nif python3 -m json.tool $INDEXFILE > /dev/null 2>&1; then\n    echo \"\u2705 Valid JSON structure\"\nelse\n    echo \"\u274c Invalid JSON structure\"\n    exit 1\nfi\n\nEntry count\nENTRYCOUNT=$(grep -o '\"id\":' $INDEXFILE | wc -l)\necho \"\ud83d\udcdd Entries: $ENTRYCOUNT\"\n\nFile count comparison\nMDCOUNT=$(find notes/ -name \".md\" | wc -l)\necho \"\ud83d\udcc1 Markdown files: $MDCOUNT\"\n\nif [ $ENTRYCOUNT -eq $MDCOUNT ]; then\n    echo \"\u2705 All files indexed\"\nelse\n    echo \"\u26a0\ufe0f  Index/file count mismatch\"\nfi\n\nSize analysis\nLARGEENTRIES=$(python3 -c \"\nimport json\nwith open('$INDEXFILE') as f:\n    data = json.load(f)\nlarge = [item['id'] for item in data if len(str(item)) > 50000]\nprint(len(large))\n\")\necho \"\ud83d\udccf Large entries (>50KB): $LARGEENTRIES\"\n\necho\necho \"=== Health Check Complete ===\"\nEOF\n\nchmod +x check-index.sh\n./check-index.sh\n\n\nAutomated Monitoring\n\nbash\nCron job for index monitoring\nAdd to crontab: crontab -e\n0 2    /path/to/wiki/check-index.sh >> /var/log/wiki-index.log 2>&1\n\n\n\ud83d\udd04 Index Maintenance\n\nRegular Maintenance Tasks\n\nbash\nWeekly maintenance script\ncat > maintain-index.sh << 'EOF'\n#!/bin/bash\n\necho \"Starting weekly index maintenance...\"\n\nBackup current index\ncp notes-index.json \"backups/notes-index-$(date +%Y%m%d).json\"\n\nRebuild index\necho \"Rebuilding index...\"\npython3 build.py\n\nValidate new index\nif python3 -m json.tool notes-index.json > /dev/null 2>&1; then\n    echo \"\u2705 Index rebuilt successfully\"\nelse\n    echo \"\u274c Index rebuild failed, restoring backup\"\n    cp \"backups/notes-index-$(date +%Y%m%d).json\" notes-index.json\n    exit 1\nfi\n\nCleanup old backups (keep last 10)\nls -t backups/notes-index-.json | tail -n +11 | xargs rm -f\n\necho \"Maintenance complete\"\nEOF\n\n\nVersion Control Integration\n\nbash\nTrack index changes\ngit log --oneline notes-index.json | head -10\n\nCompare index versions\ngit diff HEAD1 notes-index.json | grep '\"id\":'\n\nRollback index if needed\ngit checkout HEAD1 -- notes-index.json\n\n\n\ud83c\udfaf Best Practices\n\nContent Organization\n- \u2705 Use consistent frontmatter structure\n- \u2705 Keep individual files under 100KB\n- \u2705 Use descriptive filenames and paths\n- \u2705 Maintain consistent tagging scheme\n- \u2705 Include descriptions in frontmatter\n\nBuild Management\n- \u2705 Rebuild index after content changes\n- \u2705 Validate index after building\n- \u2705 Automate builds in CI/CD\n- \u2705 Monitor index size growth\n- \u2705 Backup index before major changes\n\nPerformance\n- \u2705 Optimize large content files\n- \u2705 Use excerpts for long documents\n- \u2705 Implement search result caching\n- \u2705 Consider pagination for large indexes\n- \u2705 Monitor search performance metrics\n\n---\n\nRelated Topics\n\n- \ud83d\udd0d Search Guide\n- \ud83d\ude80 Deployment Options\n- \u2699\ufe0f Settings & Customization\n- \ud83d\udee0\ufe0f Troubleshooting Common Issues (Coming Soon) graph LR\n    A[Markdown Files] --> B[build.py]\n    B --> C[YAML Parser]\n    B --> D[Content Extractor]\n    C --> E[notes-index.json]\n    D --> E\n    E --> F[Search Engine] # Standard build\npython3 build.py\n\n# Expected output:\n# Scanning notes directory...\n# Processing: notes/tutorials/features/search-guide.md\n# ...\n# \u2705 Build complete!\n# \ud83d\udcca Stats:\n#    - Total notes: 24\n#    - Total tags: 15\n#    - Total authors: 2\n#    - Index size: 847.2 KB {\n  \"id\": \"tutorials/features/search-guide\",\n  \"title\": \"Advanced Search Guide\",\n  \"content\": \"Learn to master the powerful search features...\",\n  \"tags\": [\"search\", \"features\", \"tutorial\"],\n  \"author\": \"Wiki Team\",\n  \"created\": \"2024-01-15\",\n  \"updated\": \"2024-01-20\",\n  \"description\": \"Complete guide to search operators\",\n  \"codeBlocks\": [\n    {\n      \"language\": \"bash\",\n      \"content\": \"tag:tutorial author:john\",\n      \"title\": \"Search Example\"\n    }\n  ],\n  \"path\": \"notes/tutorials/features/search-guide.md\",\n  \"wordCount\": 1247,\n  \"readingTime\": 5\n} # Custom build with additional processing\nimport json\nimport os\nfrom pathlib import Path\n\ndef custom_build():\n    # Add custom logic here\n    notes_dir = Path(\"notes\")\n    index = []\n    \n    for md_file in notes_dir.rglob(\"*.md\"):\n        # Custom processing logic\n        entry = process_file(md_file)\n        index.append(entry)\n    \n    # Save with custom formatting\n    with open(\"notes-index.json\", \"w\") as f:\n        json.dump(index, f, indent=2, ensure_ascii=False) #!/bin/sh\n# .git/hooks/pre-commit\necho \"Rebuilding search index...\"\npython3 build.py\ngit add notes-index.json # .github/workflows/build-index.yml\nname: Build Search Index\non:\n  push:\n    paths: ['notes/**/*.md']\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v2\n      - name: Build index\n        run: python3 build.py\n      - name: Commit updated index\n        run: |\n          git config --local user.email \"action@github.com\"\n          git config --local user.name \"GitHub Action\"\n          git add notes-index.json\n          git commit -m \"Update search index\" || exit 0\n          git push # .gitlab-ci.yml addition\nbuild_index:\n  stage: build\n  script:\n    - python3 build.py\n  artifacts:\n    paths:\n      - notes-index.json\n  only:\n    changes:\n      - notes/**/*.md # Error: yaml.scanner.ScannerError\n# Cause: Invalid YAML frontmatter\n\n# Solution: Check frontmatter syntax\nhead -10 problematic-file.md\n\n# Fix common issues:\n# - Use spaces, not tabs for indentation\n# - Quote strings with special characters\n# - Check for unmatched brackets/quotes # Check if index file exists\nls -la notes-index.json\n\n# Check file size (should be > 1KB)\ndu -h notes-index.json\n\n# Validate JSON structure\npython3 -m json.tool notes-index.json > /dev/null # Check file permissions\nfind notes/ -name \"*.md\" ! -perm -644\n\n# Check for hidden files\nfind notes/ -name \".*\" -type f\n\n# Verify file encoding\nfile notes/your-file.md # Check index size\nls -lh notes-index.json\n\n# If index is > 10MB, consider optimization:\n# - Remove large code blocks from index\n# - Split large notes into smaller files\n# - Use excerpt fields instead of full content # Count indexed notes\ngrep -o '\"id\":' notes-index.json | wc -l\n\n# Check for duplicate IDs\ngrep '\"id\":' notes-index.json | sort | uniq -d\n\n# Find largest entries\npython3 -c \"\nimport json\nwith open('notes-index.json') as f:\n    data = json.load(f)\nentries = [(len(str(item)), item['id']) for item in data]\nfor size, id in sorted(entries, reverse=True)[:5]:\n    print(f'{size:6d} bytes: {id}')\n\"\n\n# Validate all frontmatter\nfind notes/ -name \"*.md\" -exec python3 -c \"\nimport yaml\nimport sys\ntry:\n    with open(sys.argv[1]) as f:\n        content = f.read()\n    if content.startswith('---'):\n        frontmatter = content.split('---')[1]\n        yaml.safe_load(frontmatter)\n    print(f'\u2705 {sys.argv[1]}')\nexcept Exception as e:\n    print(f'\u274c {sys.argv[1]}: {e}')\n\" {} \\; # Optimize build.py for large wikis\ndef optimize_content(content):\n    # Limit content length for search\n    if len(content) > 10000:  # 10KB limit\n        content = content[:9900] + \"...\"\n    return content\n\ndef extract_excerpt(content, length=500):\n    # Create search-optimized excerpt\n    lines = content.split('\\n')\n    excerpt = []\n    char_count = 0\n    \n    for line in lines:\n        if char_count + len(line) > length:\n            break\n        excerpt.append(line)\n        char_count += len(line)\n    \n    return '\\n'.join(excerpt) // Client-side search optimization\nclass SearchOptimizer {\n    constructor() {\n        this.searchCache = new Map();\n        this.indexedDB = null; // For large indexes\n    }\n    \n    // Cache frequent searches\n    cacheSearch(query, results) {\n        this.searchCache.set(query, results);\n        if (this.searchCache.size > 100) {\n            const firstKey = this.searchCache.keys().next().value;\n            this.searchCache.delete(firstKey);\n        }\n    }\n    \n    // Progressive search loading\n    async loadIndexProgressive() {\n        const response = await fetch('notes-index.json');\n        const reader = response.body.getReader();\n        // Process chunks as they arrive\n    }\n} # Create index health check script\ncat > check-index.sh << 'EOF'\n#!/bin/bash\n\necho \"=== Search Index Health Check ===\"\necho\n\n# File info\nINDEX_FILE=\"notes-index.json\"\nif [ -f \"$INDEX_FILE\" ]; then\n    echo \"\u2705 Index file exists\"\n    echo \"\ud83d\udcca Size: $(du -h $INDEX_FILE | cut -f1)\"\n    echo \"\ud83d\udcc5 Modified: $(date -r $INDEX_FILE)\"\nelse\n    echo \"\u274c Index file missing\"\n    exit 1\nfi\n\n# JSON validation\nif python3 -m json.tool $INDEX_FILE > /dev/null 2>&1; then\n    echo \"\u2705 Valid JSON structure\"\nelse\n    echo \"\u274c Invalid JSON structure\"\n    exit 1\nfi\n\n# Entry count\nENTRY_COUNT=$(grep -o '\"id\":' $INDEX_FILE | wc -l)\necho \"\ud83d\udcdd Entries: $ENTRY_COUNT\"\n\n# File count comparison\nMD_COUNT=$(find notes/ -name \"*.md\" | wc -l)\necho \"\ud83d\udcc1 Markdown files: $MD_COUNT\"\n\nif [ $ENTRY_COUNT -eq $MD_COUNT ]; then\n    echo \"\u2705 All files indexed\"\nelse\n    echo \"\u26a0\ufe0f  Index/file count mismatch\"\nfi\n\n# Size analysis\nLARGE_ENTRIES=$(python3 -c \"\nimport json\nwith open('$INDEX_FILE') as f:\n    data = json.load(f)\nlarge = [item['id'] for item in data if len(str(item)) > 50000]\nprint(len(large))\n\")\necho \"\ud83d\udccf Large entries (>50KB): $LARGE_ENTRIES\"\n\necho\necho \"=== Health Check Complete ===\"\nEOF\n\nchmod +x check-index.sh\n./check-index.sh # Cron job for index monitoring\n# Add to crontab: crontab -e\n# 0 2 * * * /path/to/wiki/check-index.sh >> /var/log/wiki-index.log 2>&1 # Weekly maintenance script\ncat > maintain-index.sh << 'EOF'\n#!/bin/bash\n\necho \"Starting weekly index maintenance...\"\n\n# Backup current index\ncp notes-index.json \"backups/notes-index-$(date +%Y%m%d).json\"\n\n# Rebuild index\necho \"Rebuilding index...\"\npython3 build.py\n\n# Validate new index\nif python3 -m json.tool notes-index.json > /dev/null 2>&1; then\n    echo \"\u2705 Index rebuilt successfully\"\nelse\n    echo \"\u274c Index rebuild failed, restoring backup\"\n    cp \"backups/notes-index-$(date +%Y%m%d).json\" notes-index.json\n    exit 1\nfi\n\n# Cleanup old backups (keep last 10)\nls -t backups/notes-index-*.json | tail -n +11 | xargs rm -f\n\necho \"Maintenance complete\"\nEOF # Track index changes\ngit log --oneline notes-index.json | head -10\n\n# Compare index versions\ngit diff HEAD~1 notes-index.json | grep '\"id\":'\n\n# Rollback index if needed\ngit checkout HEAD~1 -- notes-index.json",
      "code_blocks_count": 18
    },
    {
      "path": "/notes/tutorials/features/markdown-callouts.md",
      "context": "tutorials",
      "metadata": {
        "title": "Callouts Demonstration",
        "tags": [
          "demo",
          "documentation",
          "callouts"
        ],
        "created": "2024-01-15",
        "author": "Wiki Admin",
        "description": "Demonstration of all available callout types and their usage",
        "updated": null,
        "category": null,
        "status": null,
        "aliases": [],
        "related": [],
        "dependencies": [],
        "keywords": [],
        "tableOfContents": "auto",
        "hideFromSearch": false
      },
      "content_preview": "This page demonstrates all available callout types in the wiki system. Callouts are special blockquotes that provide visual emphasis for important information.\n\n\n\nTo create a callout, use the followin...",
      "searchable_content": "\nCallouts Demonstration\n\nThis page demonstrates all available callout types in the wiki system. Callouts are special blockquotes that provide visual emphasis for important information.\n\nBasic Syntax\n\nTo create a callout, use the following syntax:\n\nmarkdown\n> [!TYPE] Optional Title\n> Content of the callout\n> Can span multiple lines\n\n\nAvailable Callout Types\n\nWarning\n\n> [!WARNING] Potential Data Loss Risk\n> Always backup your important notes before making bulk changes to the wiki system. \n> Operations like theme customization, bulk file moves, or index rebuilding could \n> potentially affect your content if not done carefully.\n\n> [!WARNING] Browser Compatibility Notice\n> Some advanced features may not work properly in Internet Explorer or very old browser versions. \n> For the best experience, use Chrome 66+, Firefox 63+, Edge 79+, or Safari 13.1+.\n\nInfo\n\n> [!INFO] Search Index Updates\n> The search index is automatically rebuilt when you add or modify notes. This process \n> runs in the background and typically completes within a few seconds. If search results \n> seem outdated, you can manually rebuild the index using the build.py script.\n\n> [!INFO] Theme System Architecture\n> The wiki includes 70 professional themes that use CSS custom properties for dynamic \n> switching. Each theme provides comprehensive styling for syntax highlighting, UI elements, \n> and responsive design across all device types.\n\nTip\n\n> [!TIP] Keyboard Shortcuts for Productivity\n> Press ? at any time to see all available keyboard shortcuts. Popular shortcuts include:\n> - Ctrl+K for quick search\n> - Ctrl+T for new tab\n> - Ctrl+F for tag filtering\n> - / for instant search focus\n\n> [!TIP] Advanced Search Techniques\n> Use search operators for precise results: \"exact phrase\" for exact matches, \n> tag:javascript to filter by tags, author:name for author filtering, and \n> -exclude to exclude terms from results.\n\nNote\n\n> [!NOTE] Content Organization Best Practices\n> Organize your notes in logical folder structures within the /notes/ directory. \n> Use consistent naming conventions, add descriptive YAML frontmatter, and apply \n> relevant tags for easy discovery and filtering.\n\n> [!NOTE] Responsive Context Filtering\n> In v2.9.0, context categories automatically switch to a dropdown menu on mobile \n> devices or when you have 6+ categories. This ensures optimal navigation experience \n> across all screen sizes.\n\nDanger\n\n> [!DANGER] Critical System Files\n> Never delete or modify these essential files: index.html, script.js, style.css, \n> build.py, or any files in the /libs/ directory. These files are required for \n> the wiki to function properly and corruption could render your wiki inaccessible.\n\n> [!DANGER] Custom CSS Injection Risks\n> When adding custom CSS in Settings \u2192 Advanced, avoid modifying core layout properties \n> or overriding security-related styles. Incorrect CSS can break the interface or \n> compromise the responsive design system.\n\nImportant\n\n> [!IMPORTANT] Regular Backup Strategy\n> Your wiki data is stored locally in browser storage and as files. Implement a regular \n> backup strategy by:\n> - Exporting settings periodically\n> - Keeping git repository backups\n> - Downloading important notes locally\n\n> [!IMPORTANT] Memory Management for Large Wikis\n> If your wiki contains hundreds of notes, monitor browser memory usage. Consider:\n> - Closing unused tabs regularly\n> - Using the tab limit settings\n> - Clearing browser cache periodically\n\nCaution\n\n> [!CAUTION] Plugin and Extension Compatibility\n> Some browser extensions (especially ad blockers or script blockers) may interfere \n> with wiki functionality. If you experience issues, try disabling extensions or \n> adding your wiki domain to the allowlist.\n\n> [!CAUTION] Large File Uploads\n> While the wiki can handle various image formats, large files (>5MB) may slow down \n> page loading. Optimize images before uploading and consider using external hosting \n> for very large media files.\n\nSuccess\n\n> [!SUCCESS] Deployment Complete!\n> Your wiki has been successfully deployed and is fully operational. All features \n> including search, themes, tabs, and responsive navigation are working correctly. \n> Start adding your content to the /notes/ directory!\n\n> [!SUCCESS] Performance Optimization Achieved\n> The wiki achieves excellent performance with:\n> - <100ms load times on average hardware\n> - <5MB total download size including all themes\n> - 100% offline capability after initial load\n\nQuestion\n\n> [!QUESTION] Need Help with Advanced Features?\n> Explore the demo notes to learn about advanced features like:\n> - Custom callouts and rich formatting\n> - Advanced search operators and filtering\n> - Keyboard shortcuts and productivity tips\n> - Theme customization and CSS injection\n\n> [!QUESTION] Looking for Integration Options?\n> The wiki can be integrated with various workflows:\n> - GitHub/GitLab Pages for automatic deployment\n> - Custom domains and SSL certificates\n> - Analytics and monitoring tools\n> - Team collaboration workflows\n\nExample\n\n> [!EXAMPLE] Creating a Project Wiki\n> File Structure:\n> \n> /notes/projects/my-app/\n> \u251c\u2500\u2500 overview.md (project description)\n> \u251c\u2500\u2500 setup.md (installation guide)\n> \u251c\u2500\u2500 api.md (API documentation)\n> \u2514\u2500\u2500 troubleshooting.md (common issues)\n> \n> \n> YAML Frontmatter:\n> yaml\n> ---\n> title: Project Overview\n> tags: [project, documentation, my-app]\n> author: Team Lead\n> status: active\n> ---\n> \n\n> [!EXAMPLE] Code Documentation Template\n> Use this template for documenting code:\n> \n> javascript title:\"Function Example\"\n> /\n>   Calculates user productivity score\n>   @param {number} tasksCompleted - Tasks finished\n>   @param {number} timeSpent - Hours worked\n>   @returns {number} Productivity score (0-100)\n>  /\n> function calculateProductivity(tasksCompleted, timeSpent) {\n>     return Math.min(100, (tasksCompleted / timeSpent)  10);\n> }\n> \n\nQuote\n\n> [!QUOTE] Documentation Best Practices\n> \"The best documentation is the one that doesn't need to exist because the system \n> is so intuitive. The second best is the one that makes complex things feel simple.\"\n> \n> \u2014 Notes Wiki Philosophy\n\n> [!QUOTE] User Testimonial\n> \"This wiki system transformed our team's knowledge sharing. The combination of \n> powerful search, beautiful themes, and zero maintenance overhead made it our \n> go-to documentation platform.\"\n> \n> \u2014 Development Team, Tech Startup\n\nBug\n\n> [!BUG] Known Issue: Safari Private Mode\n> Issue: Local storage limitations in Safari private browsing mode may prevent \n> settings from persisting between sessions.\n> \n> Workaround: Use normal browsing mode or export/import settings manually.\n> \n> Status: Under investigation for future releases.\n\n> [!BUG] Edge Case: Very Long Note Titles\n> Issue: Note titles longer than 100 characters may be truncated in tab headers \n> on mobile devices with narrow screens.\n> \n> Impact: Visual only, functionality not affected.\n> \n> Fix: Implemented responsive text truncation with hover tooltips.\n\nTodo\n\n> [!TODO] Content Migration Checklist\n> - [ ] Import existing documentation from old system\n> - [ ] Set up consistent tagging system\n> - [ ] Create navigation structure in /notes/\n> - [ ] Configure team access permissions\n> - [ ] Set up automated backups\n> - [ ] Train team members on wiki features\n\n> [!TODO] Wiki Enhancement Ideas\n> - [ ] Add custom theme creation guide\n> - [ ] Implement advanced export features  \n> - [ ] Create integration with external tools\n> - [ ] Set up analytics and usage tracking\n> - [ ] Develop mobile app companion\n> - [ ] Add collaborative editing features\n\nAdvanced Usage\n\nCallouts with Complex Content\n\n> [!INFO] Callouts Support Rich Content\n> Callouts can contain various types of content:\n> - Lists like this one\n> - Bold text and italic text\n> - Links to other pages\n> \n> They can even contain code blocks:\n> javascript\n> console.log(\"Hello from a callout!\");\n> \n\nNested Callouts\n\n> [!WARNING] Parent Callout\n> This is the main callout.\n> \n> > [!INFO] Nested Callout\n> > Callouts can be nested inside other callouts for complex information hierarchy.\n\nMultiple Paragraphs\n\n> [!NOTE] Long Content Example\n> This is the first paragraph of the callout. It contains some introductory information.\n> \n> This is the second paragraph. Notice how the callout maintains proper spacing between paragraphs.\n> \n> And here's a third paragraph with a list:\n> 1. First item\n> 2. Second item\n> 3. Third item\n\nBest Practices\n\n> [!TIP] When to Use Callouts\n> - Use callouts sparingly to maintain their effectiveness\n> - Choose the appropriate type based on the content\n> - Keep callout content concise when possible\n> - Use custom titles to provide context\n\n> [!CAUTION] Avoid Overuse\n> Too many callouts on a single page can be overwhelming and reduce their impact. Use them strategically to highlight truly important information.\n\nTheme Compatibility\n\n> [!SUCCESS] Works with All Themes!\n> The callout system is designed to work seamlessly with all 70 built-in themes. Colors and styles automatically adapt to maintain readability and visual consistency. > [!TYPE] Optional Title\n> Content of the callout\n> Can span multiple lines > /notes/projects/my-app/\n> \u251c\u2500\u2500 overview.md (project description)\n> \u251c\u2500\u2500 setup.md (installation guide)\n> \u251c\u2500\u2500 api.md (API documentation)\n> \u2514\u2500\u2500 troubleshooting.md (common issues)\n> > ---\n> title: Project Overview\n> tags: [project, documentation, my-app]\n> author: Team Lead\n> status: active\n> ---\n> javascript Function Example > /**\n>  * Calculates user productivity score\n>  * @param {number} tasksCompleted - Tasks finished\n>  * @param {number} timeSpent - Hours worked\n>  * @returns {number} Productivity score (0-100)\n>  */\n> function calculateProductivity(tasksCompleted, timeSpent) {\n>     return Math.min(100, (tasksCompleted / timeSpent) * 10);\n> }\n> > console.log(\"Hello from a callout!\");\n>",
      "code_blocks_count": 5
    }
  ],
  "tags": {
    "home": 1,
    "index": 1,
    "documentation": 4,
    "tutorial": 11,
    "getting-started": 4,
    "markdown": 2,
    "frontmatter": 1,
    "deployment": 1,
    "setup": 1,
    "troubleshooting": 2,
    "support": 1,
    "fixes": 1,
    "demo": 8,
    "search": 4,
    "operators": 1,
    "filtering": 2,
    "productivity": 10,
    "pomodoro": 1,
    "focus": 2,
    "timer": 1,
    "recent-files": 1,
    "pinning": 1,
    "organization": 4,
    "callouts": 1,
    "guide": 1,
    "images": 1,
    "themes": 3,
    "showcase": 1,
    "styling": 2,
    "navigation": 14,
    "toc": 1,
    "links": 2,
    "reading": 2,
    "code": 2,
    "syntax-highlighting": 1,
    "bookmarks": 1,
    "contexts": 1,
    "interface": 4,
    "tabs": 4,
    "shortcuts": 1,
    "settings": 3,
    "customization": 4,
    "configuration": 1,
    "quick-notes": 1,
    "quick-actions": 1,
    "mobile": 1,
    "responsive": 1,
    "safety": 1,
    "testing": 2,
    "yaml": 1,
    "features": 2,
    "hidden": 1,
    "private": 1,
    "ui": 1,
    "readability": 1,
    "accessibility": 2,
    "fonts": 1,
    "tags": 1,
    "advanced": 3,
    "css": 1,
    "automation": 2,
    "security": 1,
    "export": 1,
    "printing": 1,
    "pdf": 1,
    "build": 1,
    "reference": 1,
    "compatibility": 1,
    "platforms": 1
  },
  "authors": [
    "NotesWiki Team",
    "Test Author",
    "Wiki Admin",
    "Wiki Team"
  ],
  "categories": [
    "testing",
    "tutorial"
  ],
  "contexts": [
    {
      "id": "tutorials",
      "name": "Tutorials",
      "noteCount": 38
    },
    {
      "id": "reference",
      "name": "Reference",
      "noteCount": 1
    }
  ],
  "generated": "2025-06-23T20:07:05.083967",
  "totalNotes": 40
}