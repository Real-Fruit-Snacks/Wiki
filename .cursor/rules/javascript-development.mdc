---
globs: "*.js"
---

# JavaScript Development Guidelines

## Main Application Architecture

The core application is in **[script.js](mdc:script.js)** (17,313 lines) and follows a class-based architecture:

### NotesWiki Class Structure
- **Constructor**: Initializes all core properties (tabs, search, bookmarks, themes)
- **Tab Management**: Multi-tab interface with drag & drop support
- **Search System**: Advanced search with tag filtering and full-text search
- **Theme System**: Dynamic theme loading with 10 categories and 74 themes
- **Content Management**: Markdown parsing, note loading, and navigation

### Key Methods to Understand
- `loadNotesIndex()` - Loads the main notes index from [notes-index.json](mdc:notes-index.json)
- `loadNote()` - Handles note loading and rendering with markdown processing
- `handleSearch()` - Advanced search with tag filtering and context switching
- `loadTheme()` - Dynamic theme loading with GitHub Pages path detection
- `manageTabs()` - Multi-tab interface with state management

### Code Style & Patterns
- Use ES6 class syntax and modern JavaScript features
- Maintain backward compatibility for older browsers
- Handle GitHub/GitLab Pages path detection carefully in `getBasePath()`
- All themes are loaded dynamically to reduce initial bundle size
- Search operations should be debounced for performance
- Tab state must be preserved across navigation

### Important Implementation Notes
- The app is self-contained - all dependencies are vendored in [libs/](mdc:libs/)
- Theme loading includes complex base path detection for hosting platforms
- Search index is pre-built by [build.py](mdc:build.py) for fast searching
- Mobile responsive design requires careful touch event handling
